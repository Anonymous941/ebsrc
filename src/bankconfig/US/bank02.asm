.SEGMENT "BANK02"
.INCLUDE "eventmacros.asm"
.INCLUDE "common-usa.asm"
.INCLUDE "config-usa.asm"
.INCLUDE "structs.asm"

.INCLUDE "overworld/inflict_sunstroke_check.asm"

.INCLUDE "data/unknown/C200B9.asm"

.INCLUDE "unknown/C2/C200D9.asm"

.INCLUDE "unknown/C2/C20266.asm"

.INCLUDE "unknown/C2/C20293.asm"

.INCLUDE "unknown/C2/C202AC.asm"

.INCLUDE "text/read_name.asm"

.INCLUDE "unknown/C2/C2038B.asm"

.INCLUDE "text/hp_pp_window/draw.asm"

.INCLUDE "unknown/C2/C2077D.asm"

.INCLUDE "unknown/C2/C207B6.asm"

.INCLUDE "text/hp_pp_window/undraw.asm"

.INCLUDE "unknown/C2/C2087C.asm"

.INCLUDE "unknown/C2/C208B8.asm"

.INCLUDE "data/text/name_entry_grid_character_offset_table.asm"

.INCLUDE "data/unknown/C20958.asm"

.INCLUDE "data/text/the.asm"

.INCLUDE "unknown/C2/C209A0.asm"

.INCLUDE "unknown/C2/C20A20.asm"

.INCLUDE "unknown/C2/C20ABC.asm"

.INCLUDE "unknown/C2/C20B65.asm"

.INCLUDE "text/hp_pp_window/separate_decimal_digits.asm"

.INCLUDE "text/hp_pp_window/fill_tile_buffer_x.asm"

.INCLUDE "text/hp_pp_window/fill_tile_buffer.asm"

.INCLUDE "text/hp_pp_window/fill_character_hp_tile_buffer.asm"

.INCLUDE "text/hp_pp_window/fill_character_pp_tile_buffer.asm"

.INCLUDE "unknown/C2/C20F58.asm"

.INCLUDE "unknown/C2/C20F9A.asm"

.INCLUDE "unknown/C2/C21034.asm"

.INCLUDE "unknown/C2/C2108C.asm"

.INCLUDE "misc/hp_pp_roller.asm"

.INCLUDE "unknown/C2/C213AC.asm"

.INCLUDE "text/get_event_flag.asm"

.INCLUDE "text/set_event_flag.asm"

.INCLUDE "unknown/C2/C216AD.asm"

.INCLUDE "audio/stop_music_redirect.asm"

.INCLUDE "audio/play_sound_and_unknown.asm"

.INCLUDE "unknown/C2/C216DB.asm"

.INCLUDE "misc/recalc_character_postmath_offense.asm"

.INCLUDE "misc/recalc_character_postmath_defense.asm"

.INCLUDE "misc/recalc_character_postmath_speed.asm"

.INCLUDE "misc/recalc_character_postmath_guts.asm"

.INCLUDE "misc/recalc_character_postmath_luck.asm"

.INCLUDE "misc/recalc_character_postmath_vitality.asm"

.INCLUDE "misc/recalc_character_postmath_iq.asm"

.INCLUDE "battle/recalc_character_miss_rate.asm"

.INCLUDE "battle/calc_resistances.asm"

.INCLUDE "misc/increase_wallet_balance.asm"

.INCLUDE "misc/decrease_wallet_balance.asm"

.INCLUDE "text/get_party_character_name.asm"

UNKNOWN_C22351: ;$C22351
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TAX
	DEX
	STX $10
	LDA #$0000
	STA $0E
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA $0E
	INC
	STA $0E
@UNKNOWN1:
	STA $02
	LDA #$000E
	CLC
	SBC $02
	BVC @UNKNOWN2
	BPL @UNKNOWN4
	BRA @UNKNOWN3
@UNKNOWN2:
	BMI @UNKNOWN4
@UNKNOWN3:
	LDA $0E
	STA $02
	LDX $10
	TXA
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::items
	CLC
	ADC $02
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BNE @UNKNOWN0
@UNKNOWN4:
	LDA $0E
	PLD
	RTL

UNKNOWN_C2239D: ;$C2239D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $0E
	LDX #$0000
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA $0E
	STA $02
	LDA .LOWORD(GAME_STATE) + game_state::party_members,X
	AND #$00FF
	CMP $02
	BNE @UNKNOWN1
	LDA $0E
	BRA @UNKNOWN5
@UNKNOWN1:
	INX
@UNKNOWN2:
	STX $02
	LDA .LOWORD(GAME_STATE)+game_state::party_count
	AND #$00FF
	CLC
	SBC $02
	BVS @UNKNOWN3
	BPL @UNKNOWN0
	BRA @UNKNOWN4
@UNKNOWN3:
	BMI @UNKNOWN0
@UNKNOWN4:
	LDA #$0000
@UNKNOWN5:
	PLD
	RTL

UNKNOWN_C223D9: ;$C223D9
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STX $02
	TAY
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	BEQ @UNKNOWN0
	LDA #$0000
	STA $0E
	BRA @UNKNOWN5
@UNKNOWN0:
	TYX
	INX
	INX
	INX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BEQ @UNKNOWN1
	TXY
	LDA #$0003
	STA $0E
	BRA @UNKNOWN5
@UNKNOWN1:
	INY
	LDA #$0001
	STA $0E
	BRA @UNKNOWN3
@UNKNOWN2:
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	BNE @UNKNOWN5
	LDA $0E
	INC
	STA $0E
	INY
@UNKNOWN3:
	CMP #$0007
	BCC @UNKNOWN2
	LDA $02
	BEQ @UNKNOWN4
	LDA #$0007
	BRA @UNKNOWN7
@UNKNOWN4:
	LDA #$0020
	BRA @UNKNOWN7
@UNKNOWN5:
	LDA $02
	BEQ @UNKNOWN6
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	DEC
	ASL
	STA $02
	LDA $0E
	OPTIMIZED_MULT $04, 14
	CLC
	ADC $02
	TAX
	LDA f:STATUS_EQUIP_WINDOW_TEXT,X
	BRA @UNKNOWN7
@UNKNOWN6:
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	DEC
	ASL
	STA $02
	LDA $0E
	OPTIMIZED_MULT $04, 14
	CLC
	ADC $02
	TAX
	LDA f:STATUS_EQUIP_WINDOW_TEXT_2,X
@UNKNOWN7:
	PLD
	RTL

UNKNOWN_C22474: ;$C22474
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAY
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	BEQ @UNKNOWN0
	LDA #$0000
	STA $0E
	BRA @UNKNOWN4
@UNKNOWN0:
	TYX
	INX
	INX
	INX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BEQ @UNKNOWN1
	TXY
	LDA #$0003
	STA $0E
	BRA @UNKNOWN4
@UNKNOWN1:
	INY
	LDA #$0001
	STA $0E
	BRA @UNKNOWN3
@UNKNOWN2:
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	BNE @UNKNOWN4
	LDA $0E
	INC
	STA $0E
	INY
@UNKNOWN3:
	CMP #$0007
	BCC @UNKNOWN2
	LDA #$0004
	BRA @UNKNOWN5
@UNKNOWN4:
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	DEC
	ASL
	STA $02
	LDA $0E
	OPTIMIZED_MULT $04, 14
	CLC
	ADC $02
	TAX
	LDA f:STATUS_EQUIP_WINDOW_TEXT_3,X
@UNKNOWN5:
	PLD
	RTL

.INCLUDE "inventory/get_item_subtype.asm"

.INCLUDE "inventory/get_item_subtype2.asm"

UNKNOWN_C22562: ;$C22562
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	CPX #$FFFF
	BNE @UNKNOWN0
	LDX #$0000
@UNKNOWN0:
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7E9CD0)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	STA $0E
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY,X
	STA .LOWORD(UNKNOWN_7E9CD1)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS,X
	STA .LOWORD(UNKNOWN_7E9CD2)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER,X
	STA .LOWORD(UNKNOWN_7E9CD3)
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	JSL UNKNOWN_C1A1D8
	PLD
	RTL

UNKNOWN_C225AC: ;$C225AC
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	STX $0E
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON,X
	STA .LOWORD(UNKNOWN_7E9CD0)
	LDX $0E
	CPX #$FFFF
	BNE @UNKNOWN0
	LDX #$0000
@UNKNOWN0:
	REP #PROC_FLAGS::ACCUM8
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7E9CD1)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	STA $0E
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS,X
	STA .LOWORD(UNKNOWN_7E9CD2)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER,X
	STA .LOWORD(UNKNOWN_7E9CD3)
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	JSL UNKNOWN_C1A1D8
	PLD
	RTL

UNKNOWN_C2260D: ;$C2260D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	STA $10
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON,X
	STA .LOWORD(UNKNOWN_7E9CD0)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY,X
	STA .LOWORD(UNKNOWN_7E9CD1)
	REP #PROC_FLAGS::ACCUM8
	LDA $10
	CMP #$FFFF
	BNE @UNKNOWN0
	LDX #$0000
	BRA @UNKNOWN1
@UNKNOWN0:
	TAX
@UNKNOWN1:
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7E9CD2)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	TAX
	STX $0E
	TXA
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER,X
	STA .LOWORD(UNKNOWN_7E9CD3)
	LDX $0E
	REP #PROC_FLAGS::ACCUM8
	TXA
	JSL UNKNOWN_C1A1D8
	PLD
	RTL

UNKNOWN_C22673: ;$C22673
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $0E
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON,X
	STA .LOWORD(UNKNOWN_7E9CD0)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY,X
	STA .LOWORD(UNKNOWN_7E9CD1)
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS,X
	STA .LOWORD(UNKNOWN_7E9CD2)
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	CMP #$FFFF
	BNE @UNKNOWN0
	LDX #$0000
	BRA @UNKNOWN1
@UNKNOWN0:
	TAX
@UNKNOWN1:
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7E9CD3)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E9CD6)
	AND #$00FF
	JSL UNKNOWN_C1A1D8
	PLD
	RTL

UNKNOWN_C226C5: ;$C226C5
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	LDA .LOWORD(CURRENT_INTERACTING_EVENT_FLAG)
	JSL SET_EVENT_FLAG
	TAX
	STX $0E
	LDA .LOWORD(UNKNOWN_7E5D64)
	JSL UNKNOWN_C0C30C
	LDX $0E
	TXA
	PLD
	RTL

UNKNOWN_C226E6: ;$C226E6
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA .LOWORD(CURRENT_INTERACTING_EVENT_FLAG)
	JSL GET_EVENT_FLAG
	RTL

UNKNOWN_C226F0: ;$C226F0
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDA #$0000
	STA $0E
	BRA @UNKNOWN1
@UNKNOWN0:
	INC
	STA $0E
@UNKNOWN1:
	TAX
	LDA .LOWORD(GAME_STATE) + game_state::unknown96,X
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA .LOWORD(CHAR_STRUCT)+char_struct::afflictions,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN2
	LDA .LOWORD(GAME_STATE)+game_state::player_controlled_party_count
	AND #$00FF
	STA $02
	LDA $0E
	CMP $02
	BCC @UNKNOWN0
@UNKNOWN2:
	LDA $0E
	PLD
	RTL

UNKNOWN_C2272F: ;$C2272F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDA #$0000
	STA $10
	TAY
	STY $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA .LOWORD(GAME_STATE) + game_state::unknown96,Y
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA .LOWORD(CHAR_STRUCT)+char_struct::afflictions,X
	AND #$00FF
	TAX
	CPX #$0001
	BEQ @UNKNOWN1
	CPX #$0002
	BEQ @UNKNOWN1
	LDA $10
	INC
	STA $10
@UNKNOWN1:
	LDY $0E
	INY
	STY $0E
@UNKNOWN2:
	LDA .LOWORD(GAME_STATE)+game_state::player_controlled_party_count
	AND #$00FF
	STA $02
	TYA
	CMP $02
	BCC @UNKNOWN0
	LDA $10
	PLD
	RTL

UNKNOWN_C2277C: ;$C2277C
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDY #$0000
	STY $10
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA .LOWORD(GAME_STATE) + game_state::unknown96,Y
	AND #$00FF
	STA $0E
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA .LOWORD(CHAR_STRUCT)+char_struct::afflictions,X
	AND #$00FF
	TAX
	CPX #$0001
	BEQ @UNKNOWN1
	CPX #$0002
	BEQ @UNKNOWN1
	LDA $0E
	BRA @UNKNOWN3
@UNKNOWN1:
	LDY $10
	INY
	STY $10
@UNKNOWN2:
	LDA .LOWORD(GAME_STATE)+game_state::player_controlled_party_count
	AND #$00FF
	STA $02
	TYA
	CMP $02
	BCC @UNKNOWN0
	LDA #$0000
@UNKNOWN3:
	PLD
	RTL

LEARN_SPECIAL_PSI: ;$C227C8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	CMP #$0001
	BEQ @LEARN_TELEPORT_ALPHA
	CMP #$0002
	BEQ @LEARN_TELEPORT_BETA
	CMP #$0003
	BEQ @LEARN_STARSTORM_ALPHA
	CMP #$0004
	BEQ @LEARN_STARSTORM_BETA
	BRA @RETURN
@LEARN_TELEPORT_ALPHA:
	LDX #.LOWORD(GAME_STATE) + game_state::party_psi
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #PARTY_PSI_FLAGS::TELEPORT_ALPHA
	STA a:.LOWORD(RAM),X
	BRA @RETURN
@LEARN_TELEPORT_BETA:
	LDX #.LOWORD(GAME_STATE) + game_state::party_psi
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #PARTY_PSI_FLAGS::TELEPORT_BETA
	STA a:.LOWORD(RAM),X
	BRA @RETURN
@LEARN_STARSTORM_ALPHA:
	LDX #.LOWORD(GAME_STATE) + game_state::party_psi
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #PARTY_PSI_FLAGS::STARSTORM_ALPHA
	STA a:.LOWORD(RAM),X
	BRA @RETURN
@LEARN_STARSTORM_BETA:
	LDX #.LOWORD(GAME_STATE) + game_state::party_psi
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #PARTY_PSI_FLAGS::STARSTORM_BETA
	STA a:.LOWORD(RAM),X
@RETURN:
	REP #PROC_FLAGS::ACCUM8
	RTL

DEPOSIT_INTO_ATM: ;$C2281D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	MOVE_INT $20, $06
	MOVE_INT $06, $0E
	MOVE_INT $0E, $06
	MOVE_INT .LOWORD(GAME_STATE)+game_state::bank_balance, $0A
	CLC
	ADD_INT_ASSIGN $0A, $06
	MOVE_INT_CONSTANT ATM_ACCOUNT_LIMIT, $06
	CLC
	LDA $0A
	SBC $06
	LDA $0C
	SBC $08
	BVS @UNKNOWN0
	BPL @UNKNOWN2
	BRA @UNKNOWN1
@UNKNOWN0:
	BMI @UNKNOWN2
@UNKNOWN1:
	MOVE_INT $0A, $06
@UNKNOWN2:
	MOVE_INT $06, .LOWORD(GAME_STATE)+game_state::bank_balance
	MOVE_INT .LOWORD(GAME_STATE)+game_state::bank_balance, $06
	SEC
	SUB_INT_ASSIGN $0A, $06
	MOVE_INT $0E, $06
	SEC
	SUB_INT_ASSIGN $06, $0A
	MOVE_INT $06, $18
	PLD
	RTL

WITHDRAW_FROM_ATM: ;$C228B7
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 14
	MOVE_INT $1C, $0A
	LDY #.LOWORD(GAME_STATE) + game_state::bank_balance
	MOVE_INT_YPTRSRC a:.LOWORD(RAM), $06
	CLC
	LDA $0A
	SBC $06
	LDA $0C
	SBC $08
	BCS WITHDRAW_FROM_ATM_INSUFFICIENT_FUNDS
	SEC
	SUB_INT_ASSIGN $06, $0A
	MOVE_INT_YPTRDEST $06, a:.LOWORD(RAM)
WITHDRAW_FROM_ATM_INSUFFICIENT_FUNDS:
	PLD
	RTL

ADD_CHAR_TO_PARTY: ;$C228F8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $04
	LDA #$0000
	STA $02
	STA $0E
	JMP a:.LOWORD(@UNKNOWN14)
@UNKNOWN0:
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE) + game_state::party_members,X
	STA $00
	REP #PROC_FLAGS::ACCUM8
	LDA $00
	AND #$00FF
	CMP $04
	BNE @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN16)
@UNKNOWN1:
	CMP $04
	BEQ @UNKNOWN2
	BCS @UNKNOWN3
@UNKNOWN2:
	LDA $00
	AND #$00FF
	BNE @UNKNOWN13
@UNKNOWN3:
	LDY $02
	BRA @UNKNOWN7
@UNKNOWN4:
	STY $02
	LDA #$0006
	CLC
	SBC $02
	BVC @UNKNOWN5
	BPL @UNKNOWN16
	BRA @UNKNOWN6
@UNKNOWN5:
	BMI @UNKNOWN16
@UNKNOWN6:
	INY
@UNKNOWN7:
	LDA .LOWORD(GAME_STATE) + game_state::party_members,Y
	AND #$00FF
	BNE @UNKNOWN4
	BRA @UNKNOWN9
@UNKNOWN8:
	TYX
	DEX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE) + game_state::party_members,X
	STA .LOWORD(GAME_STATE) + game_state::party_members,Y
	TXY
@UNKNOWN9:
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	STA $02
	TYA
	CLC
	SBC $02
	BVS @UNKNOWN10
	BPL @UNKNOWN8
	BRA @UNKNOWN11
@UNKNOWN10:
	BMI @UNKNOWN8
@UNKNOWN11:
	LDA $04
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA .LOWORD(GAME_STATE) + game_state::party_members,X
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	JSL UNKNOWN_C0369B
	ASL
	CLC
	ADC #.LOWORD(ENTITY_TICK_CALLBACK_HIGH)
	TAX
	LDA a:.LOWORD(RAM),X
	ORA #OBJECT_TICK_DISABLED | OBJECT_MOVE_DISABLED
	STA a:.LOWORD(RAM),X
	LDA $04
	CMP #$0004
	BEQ @UNKNOWN12
	BCS @UNKNOWN16
@UNKNOWN12:
	JSL UNKNOWN_C216DB
	JSL UNKNOWN_C3EBCA
	BRA @UNKNOWN16
@UNKNOWN13:
	INC $02
	LDA $02
	STA $0E
@UNKNOWN14:
	LDA #$0006
	CLC
	SBC $02
	BVS @UNKNOWN15
	BMI @UNKNOWN16
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN15:
	BPL @UNKNOWN16
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN16:
	PLD
	RTL

REMOVE_CHAR_FROM_PARTY: ;$C229BB
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAY
	STY $0E
	LDX #$0000
	BRA @UNKNOWN7
@UNKNOWN0:
	STY $02
	LDA .LOWORD(GAME_STATE) + game_state::party_members,X
	AND #$00FF
	CMP $02
	BNE @UNKNOWN6
	BRA @UNKNOWN2
@UNKNOWN1:
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE) + game_state::party_members + 1,X
	STA .LOWORD(GAME_STATE) + game_state::party_members,X
	INX
@UNKNOWN2:
	STX $02
	REP #PROC_FLAGS::ACCUM8
	LDA #$0006
	CLC
	SBC $02
	BVS @UNKNOWN3
	BPL @UNKNOWN1
	BRA @UNKNOWN4
@UNKNOWN3:
	BMI @UNKNOWN1
@UNKNOWN4:
	DEX
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(GAME_STATE) + game_state::party_members,X
	REP #PROC_FLAGS::ACCUM8
	TYA
	JSL UNKNOWN_C03903
	LDY $0E
	CPY #$0004
	BEQ @UNKNOWN5
	BCS @UNKNOWN9
@UNKNOWN5:
	JSL UNKNOWN_C216DB
	JSL UNKNOWN_C3EBCA
	BRA @UNKNOWN9
@UNKNOWN6:
	INX
@UNKNOWN7:
	STX $02
	LDA .LOWORD(GAME_STATE)+game_state::party_count
	AND #$00FF
	CLC
	SBC $02
	BVS @UNKNOWN8
	BPL @UNKNOWN0
	BRA @UNKNOWN9
@UNKNOWN8:
	BMI @UNKNOWN0
@UNKNOWN9:
	PLD
	RTL

SAVE_CURRENT_GAME: ;$C22A2C
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA .LOWORD(CURRENT_SAVE_SLOT)
	AND #$00FF
	DEC
	JSL SAVE_GAME_SLOT
	RTL

UNKNOWN_C22A3A: ;$C22A3A
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 29
	STY $1B
	STA $02
	STA $19
	TXA
	DEC
	STA $04
	TYA
	DEC
	STA $02
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::items
	CLC
	ADC $02
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	TAX
	STX $17
	LDY $1B
	TYA
	STA $15
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA $15
	TAY
	DEY
	SEP #PROC_FLAGS::ACCUM8
	LDA $00
	STA ($13),Y
	REP #PROC_FLAGS::ACCUM8
	LDA $15
	INC
	STA $15
@UNKNOWN1:
	CMP #$000E
	BCS @UNKNOWN2
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::items
	STA $13
	LDA $15
	TAY
	SEP #PROC_FLAGS::ACCUM8
	LDA ($13),Y
	STA $00
	REP #PROC_FLAGS::ACCUM8
	LDA $00
	AND #$00FF
	BNE @UNKNOWN0
@UNKNOWN2:
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	STA $11
	LDA $15
	DEC
	STA $02
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::items
	CLC
	ADC $02
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA a:.LOWORD(RAM),X
	LDX $17
	REP #PROC_FLAGS::ACCUM8
	LDA $19
	STA $02
	JSL GIVE_ITEM_TO_CHARACTER
	LDA $04
	INC
	STA $13
	PHA
	LDA $02
	PLY
	STY $02
	CMP $02
	BEQ @UNKNOWN3
	JMP a:.LOWORD(@UNKNOWN28)
@UNKNOWN3:
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON
	STA $0F
	SEP #PROC_FLAGS::ACCUM8
	LDA ($0F)
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $17
	LDY $1B
	CPY $17
	BEQ @UNKNOWN4
	JMP a:.LOWORD(@UNKNOWN8)
@UNKNOWN4:
	LDA $19
	STA $02
	JSL UNKNOWN_C22351
	SEP #PROC_FLAGS::ACCUM8
	STA ($0F)
	REP #PROC_FLAGS::ACCUM8
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::BODY
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN5
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN5:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN6
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN6:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCC @UNKNOWN7
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN7:
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN8:
	.A16
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::BODY
	TAX
	STX $13
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	STA $02
	TYA
	CMP $02
	BEQ @UNKNOWN9
	JMP a:.LOWORD(@UNKNOWN13)
@UNKNOWN9:
	LDA $19
	STA $02
	JSL UNKNOWN_C22351
	SEP #PROC_FLAGS::ACCUM8
	LDX $13
	STA a:.LOWORD(RAM),X
	LDA ($0F)
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN10
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA ($0F)
@UNKNOWN10:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN11
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN11:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCC @UNKNOWN12
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN12:
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN13:
	.A16
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::ARMS
	TAX
	STX $13
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	STA $02
	TYA
	CMP $02
	BEQ @UNKNOWN14
	JMP a:.LOWORD(@UNKNOWN18)
@UNKNOWN14:
	LDA $19
	STA $02
	JSL UNKNOWN_C22351
	SEP #PROC_FLAGS::ACCUM8
	LDX $13
	STA a:.LOWORD(RAM),X
	LDA ($0F)
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN15
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA ($0F)
@UNKNOWN15:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN16
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN16:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCC @UNKNOWN17
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN17:
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN18:
	.A16
	LDA $11
	CLC
	ADC #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::OTHER
	TAX
	STX $13
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	STA $02
	TYA
	CMP $02
	BEQ @UNKNOWN19
	JMP a:.LOWORD(@UNKNOWN23)
@UNKNOWN19:
	LDA $19
	STA $02
	JSL UNKNOWN_C22351
	SEP #PROC_FLAGS::ACCUM8
	LDX $13
	STA a:.LOWORD(RAM),X
	LDA ($0F)
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN20
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA ($0F)
@UNKNOWN20:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN21
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN21:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCC @UNKNOWN22
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN22:
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN23:
	CPY $17
	BCS @UNKNOWN24
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA ($0F)
@UNKNOWN24:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN25
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN25:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN26
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN26:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCC @UNKNOWN27
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN27:
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN36)
@UNKNOWN28:
	.A16
	LDY #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::WEAPON
	LDA ($11),Y
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BNE @UNKNOWN29
	LDX #$0000
	LDA $13
	JSL CHANGE_EQUIPPED_WEAPON
	BRA @UNKNOWN32
@UNKNOWN29:
	.A16
	LDY #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::BODY
	LDA ($11),Y
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BNE @UNKNOWN30
	LDX #$0000
	LDA $13
	JSL CHANGE_EQUIPPED_BODY
	BRA @UNKNOWN32
@UNKNOWN30:
	LDY #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::ARMS
	LDA ($11),Y
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BNE @UNKNOWN31
	LDX #$0000
	LDA $13
	JSL CHANGE_EQUIPPED_ARMS
	BRA @UNKNOWN32
@UNKNOWN31:
	LDY #.LOWORD(CHAR_STRUCT) + char_struct::equipment + EQUIPMENT_SLOT::OTHER
	LDA ($11),Y
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BNE @UNKNOWN32
	LDX #$0000
	LDA $13
	JSL CHANGE_EQUIPPED_OTHER
@UNKNOWN32:
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	.A16
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN33
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN33:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN34
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN34:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN35
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN35:
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	LDY $1B
	TYA
	CMP $02
	BCS @UNKNOWN36
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	DEC
	STA a:.LOWORD(RAM),X
@UNKNOWN36:
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL

.INCLUDE "battle/init_scripted.asm"

UNKNOWN_C23008: ;$C23008
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDX #.LOWORD(GAME_STATE) + game_state::party_npc_1
	STX $0E
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA .LOWORD(GAME_STATE)+game_state::party_status
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE)+game_state::party_npc_1_hp
	STA .LOWORD(GAME_STATE) + game_state::unknown4E
	LDY #.LOWORD(GAME_STATE) + game_state::party_npc_2
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),Y
	STA .LOWORD(GAME_STATE) + game_state::unknown4D
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE)+game_state::party_npc_2_hp
	STA .LOWORD(GAME_STATE) + game_state::unknown50
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	JSL REMOVE_CHAR_FROM_PARTY
	LDX $0E
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	JSL REMOVE_CHAR_FROM_PARTY
	LDY #.LOWORD(GAME_STATE) + game_state::money_carried
	MOVE_INT_YPTRSRC a:.LOWORD(RAM), $06
	MOVE_INT $06, .LOWORD(GAME_STATE)+game_state::wallet_backup
	MOVE_INT_CONSTANT NULL, $06
	MOVE_INT_YPTRDEST $06, a:.LOWORD(RAM)
	PLD
	RTL

UNKNOWN_C2307B: ;$C2307B
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDX #.LOWORD(GAME_STATE) + game_state::party_npc_1
	STX $10
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	JSL REMOVE_CHAR_FROM_PARTY
	LDY #.LOWORD(GAME_STATE) + game_state::party_npc_2
	STY $0E
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	JSL REMOVE_CHAR_FROM_PARTY
	LDA .LOWORD(GAME_STATE)+game_state::party_status
	AND #$00FF
	BEQ @UNKNOWN0
	LDX $10
	SEP #PROC_FLAGS::ACCUM8
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	JSL ADD_CHAR_TO_PARTY
	LDA .LOWORD(GAME_STATE) + game_state::unknown4E
	STA .LOWORD(GAME_STATE)+game_state::party_npc_1_hp
	LDA .LOWORD(GAME_STATE) + game_state::unknown4D
	AND #$00FF
	BEQ @UNKNOWN0
	LDY $0E
	SEP #PROC_FLAGS::ACCUM8
	STA a:.LOWORD(RAM),Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	JSL ADD_CHAR_TO_PARTY
	LDA .LOWORD(GAME_STATE) + game_state::unknown50
	STA .LOWORD(GAME_STATE)+game_state::party_npc_2_hp
@UNKNOWN0:
	MOVE_INT .LOWORD(GAME_STATE)+game_state::wallet_backup, $06
	MOVE_INT $06, .LOWORD(GAME_STATE)+game_state::money_carried
	PLD
	RTL

SET_TELEPORT_BOX_DESTINATION: ;$C230F3
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(GAME_STATE) + game_state::unknownC3
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(GAME_STATE)+game_state::leader_x_coord
	STA .LOWORD(RESPAWN_X)
	LDA .LOWORD(GAME_STATE)+game_state::leader_y_coord
	STA .LOWORD(RESPAWN_Y)
	RTL

.INCLUDE "data/battle/consolation_item_table.asm"

.INCLUDE "battle/menu_handler.asm"

COPY_ENEMY_NAME: ;$C23B66
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 15
	STX $02
	TAY
	MOVE_INT $1D, $06
	BRA @UNKNOWN5
@UNKNOWN0:
	LDA [$06]
	AND #$00FF
	TAX
	BEQ @UNKNOWN6
	CPX #$00AC
	BNE @UNKNOWN3
	LDX #$0000
	BRA @UNKNOWN2
@UNKNOWN1:
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(CHAR_STRUCT)+char_struct::name,X
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQ @UNKNOWN4
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	STA a:.LOWORD(RAM),Y
	INY
	INX
@UNKNOWN2:
	CPX #$0005
	BCC @UNKNOWN1
	BRA @UNKNOWN4
@UNKNOWN3:
	SEP #PROC_FLAGS::ACCUM8
	STA a:.LOWORD(RAM),Y
	INY
@UNKNOWN4:
	REP #PROC_FLAGS::ACCUM8
	INC $06
@UNKNOWN5:
	LDX $02
	LDA $02
	DEC
	STA $02
	CPX #$0000
	BNE @UNKNOWN0
@UNKNOWN6:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA a:.LOWORD(RAM),Y
	REP #PROC_FLAGS::ACCUM8
	TYA
	PLD
	RTS

FIX_ATTACKER_NAME: ;$C23BCF
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 24
	TAY
	STY $16
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7E5E77)
	STZ $0E
	LDX #$001C
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(ATTACKER_NAME_ADJUST_SCRATCH)
	JSL MEMSET16
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN0
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN0
	JMP a:.LOWORD(@UNKNOWN4)
@UNKNOWN0:
	LOADPTR ENEMY_CONFIGURATION_TABLE, $06
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM),X
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	INC
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0019
	LDA #.LOWORD(ATTACKER_NAME_ADJUST_SCRATCH)
	JSR a:.LOWORD(COPY_ENEMY_NAME)
	TAX
	STX $14
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDY $16
	BNE @UNKNOWN2
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::the_flag,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN1
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM)+76,X
	JSL UNKNOWN_C2B66A
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CMP #$0002
	BEQ @UNKNOWN2
@UNKNOWN1:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0050
	LDX $14
	STA a:.LOWORD(RAM),X
	INX
	STX $16
	LDA #$0001
	STA .LOWORD(UNKNOWN_7E5E77)
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::the_flag,X
	CLC
	ADC #$0070
	LDX $16
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	LDX .LOWORD(CURRENT_ATTACKER)
	REP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	CMP #$00A0
	BNE @UNKNOWN3
	LDA #.LOWORD(GAME_STATE) + game_state::pet_name
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0006
	LDA #.LOWORD(ATTACKER_NAME_ADJUST_SCRATCH)
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(ATTACKER_NAME_ADJUST_SCRATCH)+6
@UNKNOWN3:
	LDX #$001B
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(ATTACKER_NAME_ADJUST_SCRATCH)
	JSL REDIRECT_C1AC4A
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM),X
	STA .LOWORD(UNKNOWN_7E9658)
	BRA @UNKNOWN6
@UNKNOWN4:
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM),X
	CMP #$0004
	BEQ @UNKNOWN5
	BCS @UNKNOWN6
@UNKNOWN5:
	LDX #$0005
	STX $12
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::row,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)
	LDX $12
	JSL REDIRECT_C1AC4A
@UNKNOWN6:
	PLD
	RTL

FIX_TARGET_NAME: ;$C23D05
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 22
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7E5E78)
	STZ $0E
	LDX #$001B
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(TARGET_NAME_ADJUST_SCRATCH)
	JSL MEMSET16
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN0
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN0
	JMP a:.LOWORD(@UNKNOWN4)
@UNKNOWN0:
	LOADPTR ENEMY_CONFIGURATION_TABLE, $06
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM),X
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	INC
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0019
	LDA #.LOWORD(TARGET_NAME_ADJUST_SCRATCH)
	JSR a:.LOWORD(COPY_ENEMY_NAME)
	TAX
	STX $14
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::the_flag,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN1
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM)+76,X
	JSL UNKNOWN_C2B66A
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CMP #$0002
	BEQ @UNKNOWN2
@UNKNOWN1:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0050
	LDX $14
	STA a:.LOWORD(RAM),X
	INX
	STX $12
	LDA #$0001
	STA .LOWORD(UNKNOWN_7E5E78)
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::the_flag,X
	CLC
	ADC #$0070
	LDX $12
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	LDX .LOWORD(CURRENT_TARGET)
	REP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	CMP #$00A0
	BNE @UNKNOWN3
	LDA #.LOWORD(GAME_STATE) + game_state::pet_name
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0006
	LDA #.LOWORD(TARGET_NAME_ADJUST_SCRATCH)
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(TARGET_NAME_ADJUST_SCRATCH)+6
@UNKNOWN3:
	LDX #$001B
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(TARGET_NAME_ADJUST_SCRATCH)
	JSL REDIRECT_C1ACA1
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM),X
	STA .LOWORD(UNKNOWN_7E965A)
	BRA @UNKNOWN6
@UNKNOWN4:
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM),X
	CMP #$0004
	BEQ @UNKNOWN5
	BCS @UNKNOWN6
@UNKNOWN5:
	LDX #$0005
	STX $14
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::row,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)
	LDX $14
	JSL REDIRECT_C1ACA1
@UNKNOWN6:
	PLD
	RTL

UNKNOWN_C23E32: ;$C23E32
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	MOVE_INT_CONSTANT NULL, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	CMP $0C
	BNE @UNKNOWN0
	LDA $06
	CMP $0A
@UNKNOWN0:
	BEQ @UNKNOWN4
	LDX #$0000
	STX $0E
	BRA @UNKNOWN2
@UNKNOWN1:
	TXA
	JSL IS_CHAR_TARGETTED
	CMP #$0000
	BNE @UNKNOWN3
	LDX $0E
	INX
	STX $0E
@UNKNOWN2:
	CPX #$0020
	BCC @UNKNOWN1
@UNKNOWN3:
	LDX $0E
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	CLC
	ADC #.LOWORD(BATTLERS_TABLE)
	STA .LOWORD(CURRENT_TARGET)
	JSL FIX_TARGET_NAME
@UNKNOWN4:
	PLD
	RTL

UNKNOWN_C23E8A: ;$C23E8A
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 22
	TAY
	STY $14
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7E5E77)
	STZ $0E
	LDX #$001B
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(UNKNOWN_7EA9B9)
	JSL MEMSET16
	LDY $14
	CPY .LOWORD(UNKNOWN_7EAD56)
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	TYA
	SEC
	SBC .LOWORD(UNKNOWN_7EAD56)
	TAX
	DEX
	LDA .LOWORD(UNKNOWN_7EAD82),X
	AND #$00FF
	STA $02
	BRA @UNKNOWN1
@UNKNOWN0:
	TYX
	DEX
	LDA .LOWORD(UNKNOWN_7EAD7A),X
	AND #$00FF
	STA $02
@UNKNOWN1:
	LDA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAY
	STY $14
	LOADPTR ENEMY_CONFIGURATION_TABLE, $06
	LDA .LOWORD(BATTLERS_TABLE) + battler::id,Y
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	INC
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0019
	LDA #.LOWORD(UNKNOWN_7EA9B9)
	JSR a:.LOWORD(COPY_ENEMY_NAME)
	TAX
	STX $12
	LDY $14
	LDA .LOWORD(BATTLERS_TABLE)+battler::the_flag,Y
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDA .LOWORD(BATTLERS_TABLE)+76,Y
	JSL UNKNOWN_C2B66A
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CMP #$0002
	BEQ @UNKNOWN3
@UNKNOWN2:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0050
	LDX $12
	STA a:.LOWORD(RAM),X
	INX
	STX $14
	REP #PROC_FLAGS::ACCUM8
	LDA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(BATTLERS_TABLE)+battler::the_flag,X
	CLC
	ADC #$0070
	LDX $14
	STA a:.LOWORD(RAM),X
	LDA #$0001
	STA .LOWORD(UNKNOWN_7E5E77)
@UNKNOWN3:
	LDX #$001A
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(UNKNOWN_7EA9B9)
	JSL REDIRECT_C1AC4A
	LDA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE) + battler::id,X
	STA .LOWORD(UNKNOWN_7E9658)
	PLD
	RTL

FIND_TARGETTABLE_NPC: ;$C23F6C
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	JSL RAND
	AND #$0003
	BNE @UNKNOWN0
	LDA #$0000
	BRA @UNKNOWN7
@UNKNOWN0:
	LDA #$0000
	STA $10
	BRA @UNKNOWN6
@UNKNOWN1:
	TAX
	LDA .LOWORD(GAME_STATE) + game_state::party_members,X
	AND #$00FF
	TAY
	STY $0E
	CPY #PARTY_MEMBER::POKEY
	BCC @INVALID_PARTY_TARGET
	TYA
	ASL
	TAX
	LDA f:NPC_AI_TABLE,X
	AND #$00FF
	AND #NPC_FLAGS::UNTARGETTABLE
	BEQ @INVALID_PARTY_TARGET
	LDA #$0000
	STA $10
	BRA @UNKNOWN4
@UNKNOWN2:
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN3
	LDY $0E
	STY $02
	LDA .LOWORD(BATTLERS_TABLE)+battler::npc_id,X
	AND #$00FF
	CMP $02
	BNE @UNKNOWN3
	LDA $10
	INC
	BRA @UNKNOWN7
@UNKNOWN3:
	LDA $10
	INC
	STA $10
@UNKNOWN4:
	CMP #.SIZEOF(game_state::party_members)
	BCC @UNKNOWN2
@INVALID_PARTY_TARGET:
	LDA $10
	INC
	STA $10
@UNKNOWN6:
	CMP #.SIZEOF(game_state::party_members)
	BCC @UNKNOWN1
	LDA #$0000
@UNKNOWN7:
	PLD
	RTL

GET_SHIELD_TARGETTING: ;$C23FEA
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	CMP #$002A
	BEQ GET_SHIELD_TARGETTING_SINGLETARGET
	CMP #$002B
	BEQ GET_SHIELD_TARGETTING_SINGLETARGET
	CMP #$002E
	BEQ GET_SHIELD_TARGETTING_SINGLETARGET
	CMP #$002F
	BNE GET_SHIELD_TARGETTING_MULTITARGET
GET_SHIELD_TARGETTING_SINGLETARGET:
	LDA #$0001
	BRA GET_SHIELD_TARGETTING_RETURN
GET_SHIELD_TARGETTING_MULTITARGET:
	LDA #$0000
GET_SHIELD_TARGETTING_RETURN:
	RTL

FEELING_STRANGE_RETARGETTING: ;$C24009
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	MOVE_INT_CONSTANT 0, .LOWORD(BATTLER_TARGET_FLAGS)
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM)+9,X
	AND #$00FF
	AND #$0007
	CMP #$0001
	BEQ @UNKNOWN0
	CMP #$0002
	BEQ @UNKNOWN1
	CMP #$0004
	BEQ @UNKNOWN2
	BRA @UNKNOWN5
@UNKNOWN0:
	JSL TARGET_ALL
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	MOVE_INT $06, $0E
	JSL RANDOM_TARGETTING
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
	BRA @UNKNOWN5
@UNKNOWN1:
	JSL RAND
	LDY #$0003
	JSL MODULUS16
	JSL TARGET_ROW
	BRA @UNKNOWN5
@UNKNOWN2:
	JSL RAND
	AND #$0001
	BEQ @UNKNOWN3
	JSL TARGET_ALLIES
	BRA @UNKNOWN4
@UNKNOWN3:
	JSL TARGET_ALL_ENEMIES
@UNKNOWN4:
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::current_action,X
	JSL GET_SHIELD_TARGETTING
	CMP #$0000
	BNE @UNKNOWN5
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BNE @UNKNOWN5
	JSL REMOVE_NPC_TARGETTING
@UNKNOWN5:
	PLD
	RTS

UNKNOWN_C240A4: ;$C240A4
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	MOVE_INT $1E, $06
	BRA @UNKNOWN1
@UNKNOWN0:
	JSL UNKNOWN_C12DD5
@UNKNOWN1:
	JSL UNKNOWN_C2EACF
	CMP #$0000
	BNE @UNKNOWN0
	LDA #.LOWORD(BATTLERS_TABLE) + (.SIZEOF(battler) * 8)
	STA .LOWORD(CURRENT_TARGET)
	LDX #$0008
	STX $0E
	BRA @UNKNOWN5
@UNKNOWN2:
	TXA
	JSL IS_CHAR_TARGETTED
	CMP #$0000
	BEQ @UNKNOWN4
	JSL FIX_TARGET_NAME
	MOVE_INT_CONSTANT NULL, $0A
	LDA $08
	CMP $0C
	BNE @UNKNOWN3
	LDA $06
	CMP $0A
@UNKNOWN3:
	BEQ @UNKNOWN4
	PHA
	MOVE_INT $06, a:.LOWORD(UNKNOWN_7E00BC)
	PLA
	JSL UNKNOWN_C09279
@UNKNOWN4:
	LDA .LOWORD(CURRENT_TARGET)
	CLC
	ADC #.SIZEOF(battler)
	STA .LOWORD(CURRENT_TARGET)
	LDX $0E
	INX
	STX $0E
@UNKNOWN5:
	CPX #$0020
	BCC @UNKNOWN2
	LDA #.LOWORD(BATTLERS_TABLE)
	STA .LOWORD(CURRENT_TARGET)
	LDX #$0000
	STX $0E
	BRA @UNKNOWN9
@UNKNOWN6:
	TXA
	JSL IS_CHAR_TARGETTED
	CMP #$0000
	BEQ @UNKNOWN8
	JSL FIX_TARGET_NAME
	MOVE_INT_CONSTANT NULL, $0A
	LDA $08
	CMP $0C
	BNE @UNKNOWN7
	LDA $06
	CMP $0A
@UNKNOWN7:
	BEQ @UNKNOWN8
	PHA
	MOVE_INT $06, a:.LOWORD(UNKNOWN_7E00BC)
	PLA
	JSL UNKNOWN_C09279
@UNKNOWN8:
	LDA .LOWORD(CURRENT_TARGET)
	CLC
	ADC #.SIZEOF(battler)
	STA .LOWORD(CURRENT_TARGET)
	LDX $0E
	INX
	STX $0E
@UNKNOWN9:
	CPX #$0008
	BCC @UNKNOWN6
	PLD
	RTL

UNKNOWN_C2416F: ;$C2416F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDX #$0000
	STX $0E
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX .LOWORD(CURRENT_ATTACKER)
	CMP a:battler::current_action,X
	BEQ @UNKNOWN6
	LDX $0E
	INX
	STX $0E
@UNKNOWN1:
	TXA
	ASL
	TAX
	LDA f:DEAD_TARGETTABLE_ACTIONS,X
	BNE @UNKNOWN0
	LDY #$0000
	STY $0E
	BRA @UNKNOWN5
@UNKNOWN2:
	TYA
	JSL IS_CHAR_TARGETTED
	CMP #$0000
	BEQ @UNKNOWN4
	LDY $0E
	TYA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN3
	LDA .LOWORD(BATTLERS_TABLE)+battler::afflictions,X
	AND #$00FF
	TAX
	CPX #STATUS_0::UNCONSCIOUS
	BEQ @UNKNOWN3
	CPX #STATUS_0::DIAMONDIZED
	BNE @UNKNOWN4
@UNKNOWN3:
	LDY $0E
	TYA
	JSL REMOVE_TARGET
@UNKNOWN4:
	LDY $0E
	INY
	STY $0E
@UNKNOWN5:
	CPY #$0020
	BCC @UNKNOWN2
@UNKNOWN6:
	PLD
	RTL

FIND_STEALABLE_ITEMS: ;$C241DC
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 26
	STZ $18
	STZ $16
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN0:
	LDY #.LOWORD(GAME_STATE) + game_state::party_members
	LDA ($16),Y
	AND #$00FF
	STA $14
	CMP #$0001
	BCS @UNKNOWN1
	BEQ @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN1:
	LDA $14
	CMP #$0004
	BEQ @UNKNOWN2
	BCC @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN2:
	LDA #$0000
	STA $12
	BRA @UNKNOWN5
@UNKNOWN3:
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN4
	LDA .LOWORD(BATTLERS_TABLE),X
	CMP $14
	BNE @UNKNOWN4
	LDA .LOWORD(BATTLERS_TABLE)+battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN4
	LDA .LOWORD(BATTLERS_TABLE)+7,X
	AND #$00FF
	STA $10
@UNKNOWN4:
	LDA $12
	INC
	STA $12
@UNKNOWN5:
	CMP #$0006
	BCC @UNKNOWN3
	STZ $0E
	JMP a:.LOWORD(@UNKNOWN10)
@UNKNOWN6:
	LDA $0E
	STA $02
	INC $02
	LDA $02
	CMP $10
	BNE @UNKNOWN7
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN7:
	LDA $14
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAY
	STY $12
	TYA
	CLC
	ADC #.LOWORD(CHAR_STRUCT) + char_struct::items
	CLC
	ADC $0E
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	STA $04
	BNE @UNKNOWN8
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN8:
	LOADPTR ITEM_CONFIGURATION_TABLE, $06
	LDA $04
	LDY #.SIZEOF(item)
	JSL MULT168
	TAX
	CLC
	ADC #item::cost
	MOVE_INTY $06, $0A
	CLC
	ADC $0A
	STA $0A
	LDA [$0A]
	BEQ @UNKNOWN9
	CMP #$0122
	BCS @UNKNOWN9
	TXA
	CLC
	ADC #item::type
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	AND #$0030
	CMP #$0020
	BNE @UNKNOWN9
	LDY $12
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::WEAPON,Y
	AND #$00FF
	CMP $02
	BEQ @UNKNOWN9
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::BODY,Y
	AND #$00FF
	CMP $02
	BEQ @UNKNOWN9
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::ARMS,Y
	AND #$00FF
	CMP $02
	BEQ @UNKNOWN9
	LDA .LOWORD(CHAR_STRUCT)+char_struct::equipment+EQUIPMENT_SLOT::OTHER,Y
	AND #$00FF
	CMP $02
	BEQ @UNKNOWN9
	LDA $04
	SEP #PROC_FLAGS::ACCUM8
	LDY #.LOWORD(UNKNOWN_7EA9D4)
	STA ($18),Y
	REP #PROC_FLAGS::ACCUM8
	INC $18
@UNKNOWN9:
	INC $0E
@UNKNOWN10:
	LDA $0E
	CMP #$000E
	BCS @UNKNOWN11
	BEQ @UNKNOWN11
	JMP a:.LOWORD(@UNKNOWN6)
@UNKNOWN11:
	INC $16
@UNKNOWN12:
	LDA $16
	CMP #$0006
	BCS @UNKNOWN13
	BEQ @UNKNOWN13
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN13:
	LDA $18
	PLD
	RTS

SELECT_STEALABLE_ITEM: ;$C24316
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	JSR a:.LOWORD(FIND_STEALABLE_ITEMS)
	TAX
	STX $0E
	BNE @UNKNOWN0
	LDA #$0000
	BRA @UNKNOWN2
@UNKNOWN0:
	JSL RAND
	AND #$0080
	BEQ @UNKNOWN1
	LDA #$0000
	BRA @UNKNOWN2
@UNKNOWN1:
	LDX $0E
	TXA
	JSR a:.LOWORD(RAND_LIMIT)
	TAX
	LDA .LOWORD(UNKNOWN_7EA9D4),X
	AND #$00FF
@UNKNOWN2:
	PLD
	RTL

UNKNOWN_C24348: ;$C24348
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $04
	JSR a:.LOWORD(FIND_STEALABLE_ITEMS)
	STA $02
	LDA #$0000
	STA $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	TAX
	LDA .LOWORD(UNKNOWN_7EA9D4),X
	AND #$00FF
	CMP $04
	BNE @UNKNOWN1
	LDA #$0001
	BRA @UNKNOWN3
@UNKNOWN1:
	LDA $0E
	INC
	STA $0E
@UNKNOWN2:
	CMP $02
	BCC @UNKNOWN0
	LDA #$0000
@UNKNOWN3:
	PLD
	RTL

UNKNOWN_C2437E: ;$C2437E
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BEQ @UNKNOWN0
	JMP a:.LOWORD(@UNKNOWN3)
@UNKNOWN0:
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::npc_id,X
	AND #$00FF
	BEQ @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN3)
@UNKNOWN1:
	LDX .LOWORD(CURRENT_ATTACKER)
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM)+7,X
	STA $00
	REP #PROC_FLAGS::ACCUM8
	LDA $00
	AND #$00FF
	BNE @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN3)
@UNKNOWN2:
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM),X
	TAY
	STY $10
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::current_action_argument,X
	AND #$00FF
	STA $0E
	STA $02
	LDA $00
	AND #$00FF
	DEC
	STA $04
	TYA
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
	ADC #.LOWORD(CHAR_STRUCT)+char_struct::items
	CLC
	ADC $04
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	CMP $02
	BNE @UNKNOWN3
	LDA $0E
	LDY #.SIZEOF(item)
	JSL MULT168
	CLC
	ADC #item::flags
	TAX
	LDA f:ITEM_CONFIGURATION_TABLE,X
	AND #$00FF
	AND #ITEM_FLAGS::CONSUMED_ON_USE
	BEQ @UNKNOWN3
	LDA $0E
	TAX
	LDY $10
	TYA
	JSL UNKNOWN_C3EE14
	CMP #$0000
	BEQ @UNKNOWN3
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM)+7,X
	AND #$00FF
	TAX
	STX $0E
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:.LOWORD(RAM),X
	LDX $0E
	JSL REDIRECT_REMOVE_ITEM_FROM_INVENTORY
@UNKNOWN3:
	PLD
	RTL

UNKNOWN_C24434: ;$C24434
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	STX $0E
	LDA .LOWORD(UNKNOWN_7EAD56)
	CLC
	ADC .LOWORD(UNKNOWN_7EAD58)
	JSR a:.LOWORD(RAND_LIMIT)
	SEP #PROC_FLAGS::ACCUM8
	INC
	LDX $0E
	STA a:battler::current_target,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CMP .LOWORD(UNKNOWN_7EAD56)
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	SEC
	SBC .LOWORD(UNKNOWN_7EAD56)
	TAX
	DEX
	LDA .LOWORD(UNKNOWN_7EAD82),X
	AND #$00FF
	BRA @UNKNOWN1
@UNKNOWN0:
	TAX
	DEX
	LDA .LOWORD(UNKNOWN_7EAD7A),X
	AND #$00FF
@UNKNOWN1:
	PLD
	RTL

;A = battler*
CHOOSE_TARGET: ;$C24477
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $02
	LDX #$0000
	STX $0E
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA .LOWORD(UNKNOWN_7EAD7A),X
	AND #$00FF
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BNE @UNKNOWN4
	LDX $0E
	INX
	STX $0E
@UNKNOWN1:
	CPX .LOWORD(UNKNOWN_7EAD56)
	BCC @UNKNOWN0
	LDX #$0000
	STX $0E
	BRA @UNKNOWN3
@UNKNOWN2:
	LDA .LOWORD(UNKNOWN_7EAD82),X
	AND #$00FF
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BNE @UNKNOWN4
	LDX $0E
	INX
	STX $0E
@UNKNOWN3:
	CPX .LOWORD(UNKNOWN_7EAD58)
	BCC @UNKNOWN2
	JSL UNKNOWN_C2F917
@UNKNOWN4:
	LDX $02
	LDA a:battler::current_action,X
	OPTIMIZED_MULT $04, 12
	TAX
	LDA f:BATTLE_ACTION_TABLE,X
	AND #$00FF
	BNE @UNKNOWN6
	LDX $02
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN5
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	STZ a:.LOWORD(RAM)+9,X
	BRA @UNKNOWN8
@UNKNOWN5:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0010
	LDX $02
	STA a:.LOWORD(RAM)+9,X
	BRA @UNKNOWN8
@UNKNOWN6:
	.A16
	LDX $02
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN7
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0010
	LDX $02
	STA a:.LOWORD(RAM)+9,X
	BRA @UNKNOWN8
@UNKNOWN7:
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	STZ a:.LOWORD(RAM)+9,X
@UNKNOWN8:
	REP #PROC_FLAGS::ACCUM8
	LOADPTR BATTLE_ACTION_TABLE, $06
	LDX $02
	INX
	INX
	INX
	INX
	STX $0E
	LDA a:.LOWORD(RAM),X
	OPTIMIZED_MULT $04, 12
	INC
	MOVE_INTX $06, $0A
	CLC
	ADC $0A
	STA $0A
	LDA [$0A]
	AND #$00FF
	BEQ @UNKNOWN11
	CMP #$0001
	BEQ @UNKNOWN13
	CMP #$0002
	BEQ @UNKNOWN13
	CMP #$0003
	BNE @UNKNOWN9
	JMP a:.LOWORD(@UNKNOWN22)
@UNKNOWN9:
	CMP #$0004
	BNE @UNKNOWN10
	JMP a:.LOWORD(@UNKNOWN26)
@UNKNOWN10:
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN11:
	LDA $02
	CLC
	ADC #$0009
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #$0001
	STA a:.LOWORD(RAM),X
	LDX $02
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN12
	LDY #.SIZEOF(battler)
	LDA $02
	SEC
	SBC #.LOWORD(BATTLERS_TABLE)
	JSL DIVISION16S_DIVISOR_POSITIVE
	TAX
	LDA $02
	JSL UNKNOWN_C4A228
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN12:
	LDY #.SIZEOF(battler)
	LDA $02
	SEC
	SBC #.LOWORD(BATTLERS_TABLE)
	JSL DIVISION16S_DIVISOR_POSITIVE
	SEP #PROC_FLAGS::ACCUM8
	INC
	LDX $02
	STA a:battler::current_target,X
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN13:
	.A16
	LDA $02
	CLC
	ADC #$0009
	TAY
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),Y
	ORA #$0001
	STA a:.LOWORD(RAM),Y
	LDX $02
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN18
	LDX $0E
	LDA a:.LOWORD(RAM),X
	OPTIMIZED_MULT $04, 12
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	BNE @UNKNOWN16
	JSL FIND_TARGETTABLE_NPC
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA a:battler::current_target,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQ @UNKNOWN14
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN14:
	JSL RAND
	SEP #PROC_FLAGS::ACCUM8
	AND #$0007
	INC
	LDX $02
	STA a:battler::current_target,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BEQ @UNKNOWN15
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN15:
	BRA @UNKNOWN14
@UNKNOWN16:
	LDA $02
	JSL UNKNOWN_C24434
	TAX
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BEQ @UNKNOWN17
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN17:
	BRA @UNKNOWN16
@UNKNOWN18:
	LDX $0E
	LDA a:.LOWORD(RAM),X
	OPTIMIZED_MULT $04, 12
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	BNE @UNKNOWN21
@UNKNOWN19:
	LDA $02
	JSL UNKNOWN_C24434
	TAX
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BEQ @UNKNOWN20
	JMP a:.LOWORD(@UNKNOWN27)
@UNKNOWN20:
	BRA @UNKNOWN19
@UNKNOWN21:
	JSL RAND
	SEP #PROC_FLAGS::ACCUM8
	AND #$0007
	INC
	LDX $02
	STA a:battler::current_target,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	JSL CHECK_IF_VALID_TARGET
	CMP #$0000
	BEQ @UNKNOWN21
	BRA @UNKNOWN27
@UNKNOWN22:
	LDA $02
	CLC
	ADC #$0009
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #$0002
	STA a:.LOWORD(RAM),X
	LDX $02
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN23
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $02
	STA a:battler::current_target,X
	BRA @UNKNOWN27
@UNKNOWN23:
	LDA .LOWORD(UNKNOWN_7EAD56)
	BNE @UNKNOWN24
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0002
	LDX $02
	STA a:battler::current_target,X
	BRA @UNKNOWN27
@UNKNOWN24:
	LDA .LOWORD(UNKNOWN_7EAD58)
	BNE @UNKNOWN25
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $02
	STA a:battler::current_target,X
	BRA @UNKNOWN27
@UNKNOWN25:
	JSL RAND
	SEP #PROC_FLAGS::ACCUM8
	AND #$0001
	INC
	LDX $02
	STA a:battler::current_target,X
	BRA @UNKNOWN27
@UNKNOWN26:
	.A16
	LDA $02
	CLC
	ADC #$0009
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	ORA #$0004
	STA a:.LOWORD(RAM),X
	LDA #$0001
	LDX $02
	STA a:battler::current_target,X
@UNKNOWN27:
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL

.INCLUDE "unknown/C2/C24703.asm"

.INCLUDE "battle/main_battle_routine.asm"

.INCLUDE "unknown/C2/C26189.asm"

.INCLUDE "battle/instant_win_handler.asm"

.INCLUDE "unknown/C2/C2654C.asm"

.INCLUDE "battle/instant_win_check.asm"

GET_BATTLE_ACTION_TYPE: ;$C2698B
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	OPTIMIZED_MULT $04, 12
	TAX
	INX
	INX
	LDA f:BATTLE_ACTION_TABLE,X
	AND #$00FF
	PLD
	RTS

GET_ENEMY_TYPE: ;$C269A8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	CLC
	ADC #enemy_data::type
	TAX
	LDA f:ENEMY_CONFIGURATION_TABLE,X
	AND #$00FF
	RTS


; Do nothing for some number of frames
WAIT: ;$C269BE
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	STX $0E
	BRA @UNKNOWN1
@UNKNOWN0:
	JSL UNKNOWN_C12DD5
@UNKNOWN1:
	LDX $0E
	TXA
	DEX
	STX $0E
	CMP #$0000
	BNE @UNKNOWN0
	PLD
	RTS

UNKNOWN_C269DE: ;$C269DE
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	BRA @UNKNOWN1
@UNKNOWN0:
	JSL UNKNOWN_C12DD5
@UNKNOWN1:
	LDA a:.LOWORD(UNKNOWN_7E0028)
	AND #$00FF
	BNE @UNKNOWN0
	RTS

RAND_LONG: ;$C269EF
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	JSL RAND
	SEP #PROC_FLAGS::ACCUM8
	RTS

TRUNCATE_16_TO_8: ;$C269F8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 15
	SEP #PROC_FLAGS::ACCUM8
	STA $0E
	REP #PROC_FLAGS::ACCUM8
	TXA
	STA $0A
	STZ $0C
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	STA $06
	STZ $07
	STZ $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	JSL MULT32
	SEP #PROC_FLAGS::INDEX8
	LDY #$0008
	JSL ASR32_UNKNOWN1
	LDA $06
	REP #PROC_FLAGS::INDEX8
	PLD
	RTS

RAND_LIMIT: ;$C26A2D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAX
	STX $0E
	JSR a:.LOWORD(RAND_LONG)
	LDX $0E
	JSR a:.LOWORD(TRUNCATE_16_TO_8)
	PLD
	RTS

.INCLUDE "battle/50_percent_variance.asm"

.INCLUDE "battle/25_percent_variance.asm"

SUCCESS_255: ;$C26BB8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	JSR a:.LOWORD(RAND_LONG)
	CMP $00
	BCS @UNKNOWN0
	REP #PROC_FLAGS::ACCUM8
	LDA #$0001
	BRA @UNKNOWN1
@UNKNOWN0:
	REP #PROC_FLAGS::ACCUM8
	LDA #$0000
@UNKNOWN1:
	PLD
	RTS

SUCCESS_500: ;$C26BDB
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	STA $02
	LDA #$01F4
	JSR a:.LOWORD(RAND_LIMIT)
	CMP $02
	BCS @UNKNOWN0
	LDA #$0001
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA #$0000
@UNKNOWN1:
	PLD
	RTS

TARGET_ALLIES: ;$C26BFB
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	MOVE_INT_CONSTANT 0, .LOWORD(BATTLER_TARGET_FLAGS)
	LDX #.LOWORD(BATTLERS_TABLE)
	LDA #$0000
	STA $0E
	BRA @UNKNOWN3
@UNKNOWN0:
	LDA a:battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN2
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BEQ @UNKNOWN1
	LDA a:battler::npc_id,X
	AND #$00FF
	BEQ @UNKNOWN2
@UNKNOWN1:
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
@UNKNOWN2:
	TXA
	CLC
	ADC #.SIZEOF(battler)
	TAX
	LDA $0E
	INC
	STA $0E
@UNKNOWN3:
	CMP #$0020
	BCC @UNKNOWN0
	PLD
	RTL

TARGET_ALL_ENEMIES: ;$C26C82
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	MOVE_INT_CONSTANT 0, .LOWORD(BATTLER_TARGET_FLAGS)
	LDX #.LOWORD(BATTLERS_TABLE)
	LDA #$0000
	STA $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA a:battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN1
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN1
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
@UNKNOWN1:
	TXA
	CLC
	ADC #.SIZEOF(battler)
	TAX
	LDA $0E
	INC
	STA $0E
@UNKNOWN2:
	CMP #$0020
	BCC @UNKNOWN0
	PLD
	RTL

TARGET_ROW: ;$C26D04
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TAY
	STY $10
	MOVE_INT_CONSTANT 0, .LOWORD(BATTLER_TARGET_FLAGS)
	LDX #.LOWORD(BATTLERS_TABLE)
	LDA #$0000
	STA $0E
	JMP a:.LOWORD(@UNKNOWN6)
@UNKNOWN0:
	LDA a:battler::consciousness,X
	AND #$00FF
	BNE @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN5)
@UNKNOWN1:
	LDY $10
	TYA
	BEQ @UNKNOWN2
	CMP #$0001
	BEQ @UNKNOWN4
	CMP #$0002
	BEQ @UNKNOWN4
	JMP a:.LOWORD(@UNKNOWN5)
@UNKNOWN2:
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BEQ @UNKNOWN3
	JMP a:.LOWORD(@UNKNOWN5)
@UNKNOWN3:
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
	BRA @UNKNOWN5
@UNKNOWN4:
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN5
	TYA
	DEC
	STA $02
	LDA a:battler::row,X
	AND #$00FF
	CMP $02
	BNE @UNKNOWN5
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
@UNKNOWN5:
	TXA
	CLC
	ADC #.SIZEOF(battler)
	TAX
	LDA $0E
	INC
	STA $0E
@UNKNOWN6:
	CMP #$0020
	BCS @UNKNOWN7
	BEQ @UNKNOWN7
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN7:
	PLD
	RTL

TARGET_ALL: ;$C26E00
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	MOVE_INT_CONSTANT 0, .LOWORD(BATTLER_TARGET_FLAGS)
	LDX #.LOWORD(BATTLERS_TABLE)
	LDA #$0000
	STA $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA a:battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN1
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
@UNKNOWN1:
	TXA
	CLC
	ADC #.SIZEOF(battler)
	TAX
	LDA $0E
	INC
	STA $0E
@UNKNOWN2:
	CMP #$0020
	BCC @UNKNOWN0
	PLD
	RTL

REMOVE_NPC_TARGETTING: ;$C26E77
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDX #.LOWORD(BATTLERS_TABLE)
	LDA #$0000
	STA $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA a:battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN1
	LDA a:battler::npc_id,X
	AND #$00FF
	BEQ @UNKNOWN1
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	LDA $0A
	EOR #$FFFF
	STA $0A
	LDA $0C
	EOR #$FFFF
	STA $0C
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	AND $0A
	STA $06
	LDA $08
	AND $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
@UNKNOWN1:
	TXA
	CLC
	ADC #.SIZEOF(battler)
	TAX
	LDA $0E
	INC
	STA $0E
@UNKNOWN2:
	CMP #$0020
	BCC @UNKNOWN0
	PLD
	RTL

RANDOM_TARGETTING: ;$C26EF8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 22
	MOVE_INT $24, $0A
	MOVE_INT $0A, $12
	MOVE_INT_CONSTANT NULL, $06
	LDA $0C
	CMP $08
	BNE @UNKNOWN0
	LDA $0A
	CMP $06
@UNKNOWN0:
	BNE @UNKNOWN1
	MOVE_INT $06, $1C
	JMP a:.LOWORD(@UNKNOWN6)
@UNKNOWN1:
	LDY #$0000
	STY $10
	JSR a:.LOWORD(RAND_LONG)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	AND #$001F
	INC
	STA $0E
	BRA @UNKNOWN5
@UNKNOWN2:
	LDY $10
	INY
	STY $10
	CPY #$0020
	BNE @UNKNOWN3
	LDY #$0000
	STY $10
@UNKNOWN3:
	MOVE_INT $12, $0A
	PHA
	LDA $0A
	PHA
	LOADPTR POWERS_OF_TWO_32BIT, $06
	TYA
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	PLA
	STA $06
	PLA
	STA $08
	LDA $06
	AND $0A
	STA $06
	LDA $08
	AND $0C
	STA $08
	MOVE_INT_CONSTANT NULL, $0A
	LDA $08
	CMP $0C
	BNE @UNKNOWN4
	LDA $06
	CMP $0A
@UNKNOWN4:
	BEQ @UNKNOWN2
@UNKNOWN5:
	LDA $0E
	TAX
	DEC
	STA $0E
	CPX #$0000
	BNE @UNKNOWN2
	LOADPTR POWERS_OF_TWO_32BIT, $0A
	LDY $10
	TYA
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $1C
@UNKNOWN6:
	PLD
	RTL

UNKNOWN_C26FDC: ;$C26FDC
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $0E
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	ORA $0A
	STA $06
	LDA $08
	ORA $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
	PLD
	RTL

IS_CHAR_TARGETTED: ;$C27029
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $0E
	LDX #$0000
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	AND $0A
	STA $06
	LDA $08
	AND $0C
	STA $08
	MOVE_INT_CONSTANT NULL, $0A
	LDA $08
	CMP $0C
	BNE @UNKNOWN0
	LDA $06
	CMP $0A
@UNKNOWN0:
	BEQ @UNKNOWN1
	LDX #$0001
@UNKNOWN1:
	TXA
	PLD
	RTL

REMOVE_TARGET: ;$C27089
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STA $0E
	LOADPTR POWERS_OF_TWO_32BIT, $06
	LDA $0E
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $0A
	LDA $0A
	EOR #$FFFF
	STA $0A
	LDA $0C
	EOR #$FFFF
	STA $0C
	MOVE_INT .LOWORD(BATTLER_TARGET_FLAGS), $06
	LDA $06
	AND $0A
	STA $06
	LDA $08
	AND $0C
	STA $08
	MOVE_INT $06, .LOWORD(BATTLER_TARGET_FLAGS)
	PLD
	RTL

REMOVE_DEAD_TARGETTING: ;$C270E4
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDX #$0000
	STX $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	TXA
	JSL IS_CHAR_TARGETTED
	CMP #$0000
	BEQ @UNKNOWN1
	LDX $0E
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::afflictions,X
	AND #$00FF
	CMP #STATUS_0::UNCONSCIOUS
	BNE @UNKNOWN1
	LDX $0E
	TXA
	JSL REMOVE_TARGET
@UNKNOWN1:
	LDX $0E
	INX
	STX $0E
@UNKNOWN2:
	CPX #$0020
	BCC @UNKNOWN0
	PLD
	RTS

;A = battler* target
SET_HP: ;$C27126
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TXY
	STY $10
	TAX
	LDA a:battler::hp_max,X
	STA $0E
	STA $02
	TYA
	CMP $02
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	LDA $0E
	TAY
	STY $10
@UNKNOWN0:
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BNE @UNKNOWN2
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN1
	TYA
	STA a:battler::hp_target,X
	LDA a:battler::row,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDY $10
	TYA
	STA .LOWORD(CHAR_STRUCT)+char_struct::current_hp_target,X
	BRA @UNKNOWN3
@UNKNOWN1:
	TYA
	STA a:battler::hp,X
	TYA
	STA a:battler::hp_target,X
	LDA a:battler::row,X
	AND #$00FF
	ASL
	TAX
	TYA
	STA .LOWORD(GAME_STATE)+game_state::party_npc_1_hp,X
	BRA @UNKNOWN3
@UNKNOWN2:
	TYA
	STA a:battler::hp,X
	TYA
	STA a:battler::hp_target,X
@UNKNOWN3:
	PLD
	RTS

;A = battler* target
SET_PP: ;$C27191
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TXY
	STY $10
	TAX
	LDA a:battler::pp_max,X
	STA $0E
	STA $02
	TYA
	CMP $02
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	LDA $0E
	TAY
	STY $10
@UNKNOWN0:
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BNE @UNKNOWN2
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN1
	TYA
	STA a:battler::pp_target,X
	LDA a:battler::row,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDY $10
	TYA
	STA .LOWORD(CHAR_STRUCT)+char_struct::current_pp_target,X
	BRA @UNKNOWN3
@UNKNOWN1:
	TYA
	STA a:battler::pp,X
	TYA
	STA a:battler::pp_target,X
	BRA @UNKNOWN3
@UNKNOWN2:
	TYA
	STA a:battler::pp,X
	TYA
	STA a:battler::pp_target,X
@UNKNOWN3:
	PLD
	RTS

REDUCE_HP: ;$C271F0
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STX $02
	TAY
	LDA a:battler::hp_target,Y
	STA $0E
	STA $04
	LDA $02
	CMP $04
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	LDA #$0000
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA $0E
	SEC
	SBC $02
@UNKNOWN1:
	TAX
	TYA
	JSR a:.LOWORD(SET_HP)
	PLD
	RTS

REDUCE_PP: ;$C2721D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	STX $02
	TAY
	LDA a:battler::pp_target,Y
	STA $0E
	STA $04
	LDA $02
	CMP $04
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	LDA #$0000
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA $0E
	SEC
	SBC $02
@UNKNOWN1:
	TAX
	TYA
	JSR a:.LOWORD(SET_PP)
	PLD
	RTS

.INCLUDE "battle/inflict_status.asm"

RECOVER_HP: ;$C27294
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 24
	STX $16
	STA $02
	LDX $02
	LDA a:battler::consciousness,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDX $02
	LDA a:battler::afflictions,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN1
	LDX $16
	STX $04
	TXA
	LDX $02
	CLC
	ADC a:battler::hp_target,X
	TAY
	STY $16
	TYX
	LDA $02
	JSR a:.LOWORD(SET_HP)
	LDX $02
	LDY $16
	TYA
	CMP a:battler::hp_max,X
	BCC @UNKNOWN0
	DISPLAY_BATTLE_TEXT_PTR TEXT_BLOCK_EF69A1
	BRA @UNKNOWN2
@UNKNOWN0:
	LOADPTR TEXT_BLOCK_EF69BA, $0E
	LDA $04
	STA $06
	STZ $08
	MOVE_INT $06, $12
	JSL DISPLAY_TEXT_WAIT
	BRA @UNKNOWN2
@UNKNOWN1:
	DISPLAY_BATTLE_TEXT_PTR TEXT_BATTLE_NO_VISIBLE_EFFECT
@UNKNOWN2:
	PLD
	RTS

RECOVER_PP: ;$C27318
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 28
	STX $04
	STA $02
	STA $1A
	LDX $02
	LDA a:battler::consciousness,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDX $02
	LDA a:battler::afflictions,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN2
	LDX $02
	LDY a:battler::pp_target,X
	LDX $02
	LDA a:battler::pp_max,X
	STA $18
	STA $02
	TYA
	CLC
	ADC $04
	CMP $02
	BCC @UNKNOWN0
	STY $02
	LDA $18
	SEC
	SBC $02
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA $04
@UNKNOWN1:
	TAY
	STY $16
	LDA $1A
	STA $02
	LDX $02
	LDA $04
	CLC
	ADC a:battler::pp_target,X
	TAX
	LDA $02
	JSR a:.LOWORD(SET_PP)
	LOADPTR TEXT_BLOCK_EF69D2, $0E
	LDY $16
	TYA
	STA $06
	STZ $08
	MOVE_INT $06, $12
	JSL DISPLAY_TEXT_WAIT
@UNKNOWN2:
	PLD
	RTS

;A = battler* target, Y = ??
REVIVE_TARGET: ;$C27397
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 26
	TXY
	STY $18
	STA $04
	DISPLAY_BATTLE_TEXT_PTR TEXT_BLOCK_EF6F7C
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::SHIELD,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::HOMESICKNESS,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::CONCENTRATION,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::STRANGENESS,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::TEMPORARY,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::PERSISTENT_HARDHEAL,X
	LDX $04
	STA a:battler::afflictions + STATUS_GROUP::PERSISTENT_EASYHEAL,X
	LDX $04
	REP #PROC_FLAGS::ACCUM8
	STZ a:battler::current_action,X
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $04
	STA a:.LOWORD(RAM)+13,X
	LDY $18
	TYX
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	JSR a:.LOWORD(SET_HP)
	LDX $04
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BNE @UNKNOWN0
	LDX $04
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN0
	LDA $04
	CLC
	ADC #$0010
	TAX
	STX $16
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDY $18
	TYA
	STA .LOWORD(CHAR_STRUCT)+char_struct::current_hp_target,X
	LDX $16
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA #$0001
	STA .LOWORD(CHAR_STRUCT)+char_struct::current_hp,X
@UNKNOWN0:
	LDX $04
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN1:
	LDX $04
	LDA a:battler::npc_id,X
	AND #$00FF
	BEQ @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN2:
	LDA #.LOWORD(BATTLERS_TABLE)
	LDX #$0000
	STX $18
	BRA @UNKNOWN4
@UNKNOWN3:
	TAX
	SEP #PROC_FLAGS::ACCUM8
	STZ a:battler::id2,X
	CLC
	REP #PROC_FLAGS::ACCUM8
	ADC #.SIZEOF(battler)
	LDX $18
	INX
	STX $18
@UNKNOWN4:
	CPX #$0020
	BCC @UNKNOWN3
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $04
	STA a:battler::id2,X
	LDX #$0001
	STX $18
	BRA @UNKNOWN6
@UNKNOWN5:
	STX $02
	LDX $04
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::sprite_y,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC $02
	ASL
	TAX
	STZ $0380,X
	LDX $18
	INX
	STX $18
@UNKNOWN6:
	CPX #$0010
	BCC @UNKNOWN5
	REP #PROC_FLAGS::ACCUM8
	LDA #$000A
	JSL UNKNOWN_C2FAD8
	LDA #$0001
	STA $02
	BRA @UNKNOWN8
@UNKNOWN7:
	LDA #$001F
	STA $0E
	TAY
	TAX
	STX $14
	LDX $04
	LDA a:battler::sprite_y,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC $02
	LDX $14
	JSL UNKNOWN_C2FB35
	INC $02
@UNKNOWN8:
	LDA $02
	CMP #$0010
	BCC @UNKNOWN7
	LDA #1*SIXTH_OF_A_SECOND
	JSR a:.LOWORD(WAIT)
	LDA #$0014
	JSL UNKNOWN_C2FAD8
	LDA #$0001
	STA $02
	BRA @UNKNOWN10
@UNKNOWN9:
	LDX $04
	LDA a:battler::sprite_y,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC $02
	STA $14
	ASL
	TAX
	LDA $0300,X
	TAX
	STX $12
	SEP #PROC_FLAGS::ACCUM8
	LDA #$000A
	PHA
	REP #PROC_FLAGS::ACCUM8
	TXA
	SEP #PROC_FLAGS::INDEX8
	PLY
	JSL ASR8_UNKNOWN1
	AND #$001F
	STA $0E
	REP #PROC_FLAGS::INDEX8
	LDX $12
	TXA
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #$001F
	TAY
	TXA
	AND #$001F
	TAX
	LDA $14
	JSL UNKNOWN_C2FB35
	INC $02
@UNKNOWN10:
	LDA $02
	CMP #$0010
	BCC @UNKNOWN9
	LDA #2*SIXTHS_OF_A_SECOND
	JSR a:.LOWORD(WAIT)
@UNKNOWN11:
	LDA #$0001
	PLD
	RTS

.INCLUDE "battle/ko_target.asm"

SUCCESS_LUCK80: ;$C27C96
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA #$0050
	JSR a:.LOWORD(RAND_LIMIT)
	LDX .LOWORD(CURRENT_TARGET)
	CMP a:battler::luck,X
	BCS @SUCCESS
	LDA #$0000
	BRA @RETURN
@SUCCESS:
	LDA #$0001
@RETURN:
	RTS

SUCCESS_SPEED: ;$C27CAF
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TAY
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::speed,X
	ASL
	TAX
	STX $10
	LDX .LOWORD(CURRENT_ATTACKER)
	LDA a:battler::speed,X
	STA $0E
	STA $02
	LDX $10
	TXA
	CMP $02
	BCC @UNKNOWN0
	LDA $0E
	STA $02
	TXA
	SEC
	SBC $02
	TAX
	STX $10
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX #$0000
	STX $10
@UNKNOWN1:
	TYA
	JSR a:.LOWORD(RAND_LIMIT)
	LDX $10
	STX $02
	CMP $02
	BCC @UNKNOWN2
	LDA #$0001
	BRA @UNKNOWN3
@UNKNOWN2:
	LDA #$0000
@UNKNOWN3:
	PLD
	RTS

ATK_FAIL_CHK: ;$C27CFD
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::npc_id,X
	AND #$00FF
	BEQ @UNKNOWN0
	DISPLAY_BATTLE_TEXT_PTR TEXT_BATTLE_IT_DIDNT_WORK_ON_X
	LDA #$0001
	BRA @UNKNOWN1
@UNKNOWN0:
	LDA #$0000
@UNKNOWN1:
	PLD
	RTS

INCREASE_OFFENSE_16TH: ;$C27D28
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	STA $02
	CLC
	ADC #$0026
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	LSR
	LSR
	LSR
	BEQ @UNKNOWN0
	TAX
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX #$0001
@UNKNOWN1:
	STX $04
	LDA a:.LOWORD(RAM),Y
	CLC
	ADC $04
	STA a:.LOWORD(RAM),Y
	LDA $02
	CLC
	ADC #$0026
	TAX
	STX $10
	LDX $02
	LDA a:battler::base_offense,X
	AND #$00FF
	OPTIMIZED_MULT $04, 5
	LSR
	LSR
	STA $0E
	STA $02
	LDX $10
	LDA a:.LOWORD(RAM),X
	CMP $02
	BCC @UNKNOWN2
	BEQ @UNKNOWN2
	LDA $0E
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	PLD
	RTS

INCREASE_DEFENSE_16TH: ;$C27D82
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	STA $02
	CLC
	ADC #$0028
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	LSR
	LSR
	LSR
	BEQ @UNKNOWN0
	TAX
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX #$0001
@UNKNOWN1:
	STX $04
	LDA a:.LOWORD(RAM),Y
	CLC
	ADC $04
	STA a:.LOWORD(RAM),Y
	LDA $02
	CLC
	ADC #$0028
	TAX
	STX $10
	LDX $02
	LDA a:battler::base_defense,X
	AND #$00FF
	OPTIMIZED_MULT $04, 5
	LSR
	LSR
	STA $0E
	STA $02
	LDX $10
	LDA a:.LOWORD(RAM),X
	CMP $02
	BCC @UNKNOWN2
	BEQ @UNKNOWN2
	LDA $0E
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	PLD
	RTS

HEXADECIMATE_OFFENSE: ;$C27DDC
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	STA $02
	CLC
	ADC #$0026
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	LSR
	LSR
	LSR
	BEQ @UNKNOWN0
	TAX
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX #$0001
@UNKNOWN1:
	STX $04
	LDA a:.LOWORD(RAM),Y
	SEC
	SBC $04
	STA a:.LOWORD(RAM),Y
	LDA $02
	CLC
	ADC #$0026
	TAX
	STX $10
	LDX $02
	LDA a:battler::base_offense,X
	AND #$00FF
	OPTIMIZED_MULT $04, 3
	LSR
	LSR
	STA $0E
	STA $02
	LDX $10
	LDA a:.LOWORD(RAM),X
	CMP $02
	BCS @UNKNOWN2
	LDA $0E
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	PLD
	RTS

HEXADECIMATE_DEFENSE: ;$C27E33
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	STA $02
	CLC
	ADC #$0028
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	LSR
	LSR
	LSR
	BEQ @UNKNOWN0
	TAX
	BRA @UNKNOWN1
@UNKNOWN0:
	LDX #$0001
@UNKNOWN1:
	STX $04
	LDA a:.LOWORD(RAM),Y
	SEC
	SBC $04
	STA a:.LOWORD(RAM),Y
	LDA $02
	CLC
	ADC #$0028
	TAX
	STX $10
	LDX $02
	LDA a:battler::base_defense,X
	AND #$00FF
	OPTIMIZED_MULT $04, 3
	LSR
	LSR
	STA $0E
	STA $02
	LDX $10
	LDA a:.LOWORD(RAM),X
	CMP $02
	BCS @UNKNOWN2
	LDA $0E
	STA a:.LOWORD(RAM),X
@UNKNOWN2:
	PLD
	RTS

SWAP_ATTACKER_WITH_TARGET: ;$C27E8A
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 16
	LDA .LOWORD(CURRENT_ATTACKER)
	STA $0E
	LDA .LOWORD(CURRENT_TARGET)
	STA .LOWORD(CURRENT_ATTACKER)
	LDA $0E
	STA .LOWORD(CURRENT_TARGET)
	LDA #$0000
	JSL FIX_ATTACKER_NAME
	JSL FIX_TARGET_NAME
	PLD
	RTS

.INCLUDE "battle/calc_damage.asm"

.INCLUDE "battle/calc_damage_reduction.asm"

.INCLUDE "battle/miss_calc.asm"

.INCLUDE "battle/smaaaash.asm"

.INCLUDE "battle/determine_dodge.asm"

.INCLUDE "battle/actions/level_2_attack.asm"

.INCLUDE "battle/heal_strangeness.asm"

.INCLUDE "battle/actions/bash.asm"

.INCLUDE "battle/actions/level_4_attack.asm"

.INCLUDE "battle/actions/level_3_attack.asm"

.INCLUDE "battle/actions/level_1_attack.asm"

.INCLUDE "battle/actions/shoot.asm"

.INCLUDE "battle/actions/spy.asm"

.INCLUDE "battle/actions/null01.asm"

.INCLUDE "battle/actions/steal.asm"

.INCLUDE "battle/actions/freeze_time.asm"

.INCLUDE "battle/actions/diamondize.asm"

.INCLUDE "battle/actions/paralyze.asm"

.INCLUDE "battle/actions/nauseate.asm"

.INCLUDE "battle/actions/poison.asm"

.INCLUDE "battle/actions/cold.asm"

.INCLUDE "battle/actions/mushroomize.asm"

.INCLUDE "battle/actions/possess.asm"

.INCLUDE "battle/actions/crying.asm"

.INCLUDE "battle/actions/immobilize.asm"

.INCLUDE "battle/actions/solidify.asm"

.INCLUDE "battle/actions/brainshock_alpha_redirect.asm"

.INCLUDE "battle/success_luck40.asm"

.INCLUDE "battle/actions/distract.asm"

.INCLUDE "battle/actions/feel_strange.asm"

.INCLUDE "battle/actions/crying2.asm"

.INCLUDE "battle/actions/hypnosis_alpha_redirect.asm"

.INCLUDE "battle/actions/reduce_pp.asm"

.INCLUDE "battle/actions/cut_guts.asm"

.INCLUDE "battle/actions/reduce_offense_defense.asm"

.INCLUDE "battle/actions/level_2_attack_poison.asm"

.INCLUDE "battle/actions/bash_twice.asm"

.INCLUDE "battle/actions/null01_redirect.asm"

.INCLUDE "battle/actions/350_fire_damage.asm"

.INCLUDE "battle/actions/level_3_attack_copy.asm"

.INCLUDE "battle/actions/null02.asm"

.INCLUDE "battle/actions/null03.asm"

.INCLUDE "battle/actions/null04.asm"

.INCLUDE "battle/actions/null05.asm"

.INCLUDE "battle/actions/null06.asm"

.INCLUDE "battle/actions/null07.asm"

.INCLUDE "battle/actions/null08.asm"

.INCLUDE "battle/actions/null09.asm"

.INCLUDE "battle/actions/null10.asm"

.INCLUDE "battle/actions/null11.asm"

.INCLUDE "battle/actions/neutralize.asm"

.INCLUDE "unknown/C2/C290C6.asm"

.INCLUDE "battle/actions/level_2_attack_diamondize.asm"

.INCLUDE "battle/actions/reduce_offense.asm"

.INCLUDE "battle/actions/clumsy_robot_death.asm"

.INCLUDE "battle/actions/enemy_extend.asm"

.INCLUDE "battle/actions/master_barf_death.asm"

.INCLUDE "battle/psi_shield_nullify.asm"

.INCLUDE "battle/weaken_shield.asm"

.INCLUDE "battle/actions/psi_rockin_common.asm"

.INCLUDE "battle/actions/psi_rockin_alpha.asm"

.INCLUDE "battle/actions/psi_rockin_beta.asm"

.INCLUDE "battle/actions/psi_rockin_gamma.asm"

.INCLUDE "battle/actions/psi_rockin_omega.asm"

.INCLUDE "battle/actions/psi_fire_common.asm"

.INCLUDE "battle/actions/psi_fire_alpha.asm"

.INCLUDE "battle/actions/psi_fire_beta.asm"

.INCLUDE "battle/actions/psi_fire_gamma.asm"

.INCLUDE "battle/actions/psi_fire_omega.asm"

.INCLUDE "battle/actions/psi_freeze_common.asm"

.INCLUDE "battle/actions/psi_freeze_alpha.asm"

.INCLUDE "battle/actions/psi_freeze_beta.asm"

.INCLUDE "battle/actions/psi_freeze_gamma.asm"

.INCLUDE "battle/actions/psi_freeze_omega.asm"

.INCLUDE "battle/actions/psi_thunder_common.asm"

.INCLUDE "battle/actions/psi_thunder_alpha.asm"

.INCLUDE "battle/actions/psi_thunder_beta.asm"

.INCLUDE "battle/actions/psi_thunder_gamma.asm"

.INCLUDE "battle/actions/psi_thunder_omega.asm"

.INCLUDE "battle/actions/psi_flash_immunity_test.asm"

.INCLUDE "battle/actions/psi_flash_feeling_strange.asm"

.INCLUDE "battle/actions/psi_flash_paralysis.asm"

.INCLUDE "battle/actions/psi_flash_crying.asm"

.INCLUDE "battle/actions/psi_flash_alpha.asm"

.INCLUDE "battle/actions/psi_flash_beta.asm"

.INCLUDE "battle/actions/psi_flash_gamma.asm"

.INCLUDE "battle/actions/psi_flash_omega.asm"

.INCLUDE "battle/actions/psi_starstorm_common.asm"

.INCLUDE "battle/actions/psi_starstorm_alpha.asm"

.INCLUDE "battle/actions/psi_starstorm_omega.asm"

.INCLUDE "battle/actions/lifeup_common.asm"

.INCLUDE "battle/actions/lifeup_alpha.asm"

.INCLUDE "battle/actions/lifeup_beta.asm"

.INCLUDE "battle/actions/lifeup_gamma.asm"

.INCLUDE "battle/actions/lifeup_omega.asm"

.INCLUDE "battle/actions/healing_alpha.asm"

.INCLUDE "battle/actions/healing_beta.asm"

.INCLUDE "battle/actions/healing_gamma.asm"

.INCLUDE "battle/actions/healing_omega.asm"

.INCLUDE "battle/actions/shield_common.asm"

.INCLUDE "battle/actions/shield_alpha.asm"

.INCLUDE "battle/actions/shield_alpha_redirect.asm"

.INCLUDE "battle/actions/shield_beta.asm"

.INCLUDE "battle/actions/shield_beta_redirect.asm"

.INCLUDE "battle/actions/psi_shield_alpha.asm"

.INCLUDE "battle/actions/psi_shield_alpha_redirect.asm"

.INCLUDE "battle/actions/psi_shield_beta.asm"

.INCLUDE "battle/actions/psi_shield_beta_redirect.asm"

.INCLUDE "battle/actions/offense_up_alpha.asm"

.INCLUDE "battle/actions/offense_up_alpha_redirect.asm"

.INCLUDE "battle/actions/defense_down_alpha.asm"

.INCLUDE "battle/actions/defense_down_alpha_redirect.asm"

.INCLUDE "battle/actions/hypnosis_alpha.asm"

.INCLUDE "battle/actions/hypnosis_alpha_redirect_copy.asm"

.INCLUDE "battle/actions/magnet_alpha.asm"

.INCLUDE "battle/actions/magnet_omega.asm"

.INCLUDE "battle/actions/paralysis_alpha.asm"

.INCLUDE "battle/actions/paralysis_alpha_redirect.asm"

.INCLUDE "battle/actions/brainshock_alpha.asm"

.INCLUDE "battle/actions/brainshock_alpha_redirect_copy.asm"

.INCLUDE "battle/actions/hp_recovery_1d4.asm"

.INCLUDE "battle/actions/hp_recovery_50.asm"

.INCLUDE "battle/actions/hp_recovery_200.asm"

.INCLUDE "battle/actions/pp_recovery_20.asm"

.INCLUDE "battle/actions/pp_recovery_80.asm"

.INCLUDE "battle/actions/iq_up_1d4.asm"

.INCLUDE "battle/actions/guts_up_1d4.asm"

.INCLUDE "battle/actions/speed_up_1d4.asm"

.INCLUDE "battle/actions/vitality_up_1d4.asm"

.INCLUDE "battle/actions/luck_up_1d4.asm"

.INCLUDE "battle/actions/hp_recovery_300.asm"

.INCLUDE "battle/actions/random_stat_up_1d4.asm"

.INCLUDE "battle/actions/hp_recovery_10.asm"

.INCLUDE "battle/actions/hp_recovery_100.asm"

.INCLUDE "battle/actions/hp_recovery_10000.asm"

.INCLUDE "battle/actions/heal_poison.asm"

.INCLUDE "battle/actions/counter_psi.asm"

.INCLUDE "battle/actions/shield_killer.asm"

.INCLUDE "battle/actions/hp_sucker.asm"

.INCLUDE "battle/actions/hungry_hp_sucker.asm"

.INCLUDE "battle/actions/mummy_wrap.asm"

.INCLUDE "battle/actions/bottle_rocket_common.asm"

.INCLUDE "battle/actions/bottle_rocket.asm"

.INCLUDE "battle/actions/big_bottle_rocket.asm"

.INCLUDE "battle/actions/multi_bottle_rocket.asm"

.INCLUDE "battle/actions/handbag_strap.asm"

.INCLUDE "battle/actions/bomb_common.asm"

.INCLUDE "battle/actions/bomb.asm"

.INCLUDE "battle/actions/super_bomb.asm"

.INCLUDE "battle/actions/solidify_2.asm"

.INCLUDE "battle/actions/yogurt_dispenser.asm"

.INCLUDE "battle/actions/snake.asm"

.INCLUDE "battle/actions/inflict_solidification.asm"

.INCLUDE "battle/actions/inflict_poison.asm"

.INCLUDE "battle/actions/bag_of_dragonite.asm"

.INCLUDE "battle/actions/insect_spray_common.asm"

.INCLUDE "battle/actions/insecticide_spray.asm"

.INCLUDE "battle/actions/xterminator_spray.asm"

.INCLUDE "battle/actions/rust_promoter_common.asm"

.INCLUDE "battle/actions/rust_promoter.asm"

.INCLUDE "battle/actions/rust_promoter_dx.asm"

.INCLUDE "battle/actions/sudden_guts_pill.asm"

.INCLUDE "battle/actions/defense_spray.asm"

.INCLUDE "battle/actions/defense_shower.asm"

.INCLUDE "battle/boss_battle_check.asm"

.INCLUDE "battle/actions/teleport_box.asm"

.INCLUDE "battle/actions/pray_subtle.asm"

.INCLUDE "battle/actions/pray_warm.asm"

.INCLUDE "battle/actions/pray_golden.asm"

.INCLUDE "battle/actions/pray_mysterious.asm"

.INCLUDE "battle/actions/pray_rainbow.asm"

.INCLUDE "battle/actions/pray_aroma.asm"

.INCLUDE "battle/actions/pray_rending_sound.asm"

.INCLUDE "battle/actions/pray.asm"

.INCLUDE "battle/copy_mirror_data.asm"

.INCLUDE "battle/actions/mirror.asm"

.INCLUDE "battle/apply_condiment.asm"

.INCLUDE "battle/eat_food.asm"

.INCLUDE "battle/calc_psi_damage_modifiers.asm"

.INCLUDE "battle/calc_psi_resistance_modifiers.asm"

.INCLUDE "unknown/C2/C2B66A.asm"

.INCLUDE "battle/init_enemy_stats.asm"

.INCLUDE "battle/init_player_stats.asm"

.INCLUDE "battle/count_chars.asm"

.INCLUDE "battle/check_dead_players.asm"

.INCLUDE "battle/reset_post_battle_stats.asm"

.INCLUDE "unknown/C2/C2BCB9.asm"

.INCLUDE "battle/lose_hp_status.asm"

.INCLUDE "unknown/C2/C2BD13.asm"

.INCLUDE "battle/call_for_help_common.asm"

.INCLUDE "battle/actions/sow_seeds.asm"

.INCLUDE "battle/actions/call_for_help.asm"

.INCLUDE "battle/actions/rainbow_of_colours.asm"

.INCLUDE "battle/actions/fly_honey.asm"

.INCLUDE "unknown/C2/C2C21F.asm"

.INCLUDE "unknown/C2/C2C32C.asm"

.INCLUDE "unknown/C2/C2C37A.asm"

.INCLUDE "battle/giygas_hurt_prayer.asm"

.INCLUDE "unknown/C2/C2C41F.asm"

.INCLUDE "battle/actions/pokey_speech_1.asm"

.INCLUDE "battle/actions/null12.asm"

.INCLUDE "battle/actions/pokey_speech_2.asm"

.INCLUDE "battle/actions/giygas_prayer_1.asm"

.INCLUDE "battle/actions/giygas_prayer_2.asm"

.INCLUDE "battle/actions/giygas_prayer_3.asm"

.INCLUDE "battle/actions/giygas_prayer_4.asm"

.INCLUDE "battle/actions/giygas_prayer_5.asm"

.INCLUDE "battle/actions/giygas_prayer_6.asm"

.INCLUDE "battle/actions/giygas_prayer_7.asm"

.INCLUDE "battle/actions/giygas_prayer_8.asm"

.INCLUDE "battle/actions/giygas_prayer_9.asm"

.INCLUDE "battle/load_enemy_battle_sprites.asm"

.INCLUDE "misc/battlebgs/generate_frame.asm"

.INCLUDE "unknown/C2/C2CFE5.asm"

.INCLUDE "unknown/C2/C2D0AC.asm"

;A: Layer 1 ID, X: Layer 2 ID, Y: Letterbox style
LOAD_BATTLE_BG: ;$C2D121
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 48
	STY $2E
	STX $04
	STX $2C
	STA $02
	STZ .LOWORD(RED_FLASH_DURATION)
	STZ .LOWORD(GREEN_FLASH_DURATION)
	STZ .LOWORD(SHAKE_DURATION)
	STZ .LOWORD(WOBBLE_DURATION)
	STZ .LOWORD(UNKNOWN_7EAD90)
	STZ .LOWORD(VERTICAL_SHAKE_HOLD_DURATION)
	STZ .LOWORD(VERTICAL_SHAKE_DURATION)
	LDA $2E
	AND #$0003
	BEQ @NO_LETTERBOX
	CMP #LETTERBOX_STYLE::LARGE
	BEQ @LARGE_LETTERBOX
	CMP #LETTERBOX_STYLE::MEDIUM
	BEQ @MEDIUM_LETTERBOX
	CMP #LETTERBOX_STYLE::SMALL
	BEQ @SMALL_LETTERBOX
	BRA @LETTERBOX_SETUP_DONE
@NO_LETTERBOX:
	STZ .LOWORD(UNKNOWN_7EADB2)
	LDA #SCREEN_Y_RESOLUTION
	STA .LOWORD(UNKNOWN_7EADB4)
	BRA @LETTERBOX_SETUP_DONE
@LARGE_LETTERBOX:
	LDA #LETTERBOX_SIZE_LARGE - 1
	STA .LOWORD(UNKNOWN_7EADB2)
	LDA #SCREEN_Y_RESOLUTION - LETTERBOX_SIZE_LARGE
	STA .LOWORD(UNKNOWN_7EADB4)
	BRA @LETTERBOX_SETUP_DONE
@MEDIUM_LETTERBOX:
	LDA #LETTERBOX_SIZE_MEDIUM - 1
	STA .LOWORD(UNKNOWN_7EADB2)
	LDA #SCREEN_Y_RESOLUTION - LETTERBOX_SIZE_MEDIUM
	STA .LOWORD(UNKNOWN_7EADB4)
	BRA @LETTERBOX_SETUP_DONE
@SMALL_LETTERBOX:
	LDA #LETTERBOX_SIZE_SMALL - 1
	STA .LOWORD(UNKNOWN_7EADB2)
	LDA #SCREEN_Y_RESOLUTION - LETTERBOX_SIZE_SMALL
	STA .LOWORD(UNKNOWN_7EADB4)
@LETTERBOX_SETUP_DONE:
	STZ .LOWORD(UNKNOWN_7EADB6)
	LDX #$7000
	STX .LOWORD(UNKNOWN_7EADCE)
	STX .LOWORD(UNKNOWN_7EADCC)
	STZ .LOWORD(UNKNOWN_7EADD0)
	LDA #$FFFF
	STA .LOWORD(UNKNOWN_7EADD2)
	LOADPTR UNKNOWN_7F0000, $06
	MOVE_INT $06, $28
	LOADPTR BATTLEBG_GFX_POINTERS, $0A
	LDA $02
	OPTIMIZED_MULT $04, .SIZEOF(bg_layer_config_entry)
	TAX
	LDA f:BG_DATA_TABLE,X
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	MOVE_INT $28, $06
	MOVE_INT $06, $12
	JSL DECOMP
	LDA .LOWORD(CURRENT_BATTLE_GROUP)
	CMP #$01DE ;GIYGAS_5 + POKEY
	BNE @UNKNOWN5
	LDY #$3000
	LDX #$5C00
	LDA #$0000
	JSL SET_BG2_VRAM_LOCATION
	COPY_TO_VRAM1P $06, $3000, $5000, $00
	BRA @UNKNOWN6
@UNKNOWN5:
	COPY_TO_VRAM1P $06, $1000, $2000, $00
@UNKNOWN6:
	.A16
	LOADPTR UNKNOWN_7F0000, $0A
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA [$0A]
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $0A, $06
	COPY_TO_VRAM1P $06, $5800, $800, $03
	MOVE_INT $0A, $06
	COPY_TO_VRAM1P $06, $0000, $800, $03
	.A16
	LOADPTR BG_DATA_TABLE, $06
	MOVE_INT $06, $24
	LDA $02
	OPTIMIZED_MULT $04, 17
	STA $22
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	OPTIMIZED_MULT $04, 4
	PHA
	LOADPTR BATTLEBG_ARR_POINTERS, $06
	PLA
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	MOVE_INT $0A, $06
	MOVE_INT $06, $12
	JSL DECOMP
	LDA $22
	INC
	INC
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	CMP #$0004
	BEQ @UNKNOWN7
	JMP a:.LOWORD(@UNKNOWN15)
@UNKNOWN7:
	LDA #$0009
	JSL UNKNOWN_C08D79
	LDA #$0000
	STA $22
	BRA @UNKNOWN9
@UNKNOWN8:
	STA $06
	STZ $08
	CLC
	VAR_ADD_CONST_INT_ASSIGN $7F0001, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	AND #$00DF
	ORA #$0008
	STA [$06]
	REP #PROC_FLAGS::ACCUM8
	LDA $22
	INC
	INC
	STA $22
@UNKNOWN9:
	CMP #$0800
	BCC @UNKNOWN8
	LOADPTR UNKNOWN_7F0000, $28
	MOVE_INT $28, $06
	COPY_TO_VRAM1P $06, $5C00, $800, $00
	.A16
	LOADPTR BG_DATA_TABLE, $06
	MOVE_INT $06, $24
	LDA $02
	OPTIMIZED_MULT $04, .SIZEOF(bg_layer_config_entry)
	TAX
	STX $20
	TXA
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSL UNKNOWN_C2CFE5
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette_pointer
	STA $02
	LDA #.LOWORD(CUR_MAP_PAL)
	LDX $02
	STA a:.LOWORD(RAM),X
	LDY #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette
	STY $1E
	LOADPTR BATTLEBG_PALETTE_POINTERS, $1A
	LDX $20
	TXA
	INC
	MOVE_INTX $24, $06
	MOVE_INTX $06, $0A
	CLC
	ADC $0A
	STA $0A
	MOVE_INT $1A, $06
	LDA [$0A]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDY $1E
	TYA
	JSL MEMCPY16
	LDA [$0A]
	AND #$00FF
	ASL
	ASL
	PHA
	MOVE_INT $1A, $0A
	PLA
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette2)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette2
	JSL MEMCPY16
	LDY $1E
	TYA
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0020
	STX $20
	LDX $02
	LDA a:.LOWORD(RAM),X
	LDX $20
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0002
	STA .LOWORD(LOADED_BG_DATA_LAYER1)
	LDX #$0000
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSL GENERATE_BATTLEBG_FRAME
	LDX #.LOWORD(LOADED_BG_DATA_LAYER2)
	STX $1E
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA .LOWORD(UNKNOWN_7EAD8A)
	JSL UNKNOWN_C0AFCD
	LDA #$0017
	STA .LOWORD(UNKNOWN_7EADAE)
	LDA #$0015
	STA .LOWORD(UNKNOWN_7EADB0)
	LDA $2C
	STA $04
	BNE @UNKNOWN10
	JMP a:.LOWORD(@UNKNOWN23)
@UNKNOWN10:
	LDA $2E
	AND #$0004
	BNE @UNKNOWN11
	JMP a:.LOWORD(@UNKNOWN14)
@UNKNOWN11:
	LDA #$0007
	STA .LOWORD(UNKNOWN_7EAD8A)
	JSL UNKNOWN_C0AFCD
	LDA $04
	OPTIMIZED_MULT $04, 17
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	STA $16
	LDA $08
	STA $18
	LOADPTR BATTLEBG_GFX_POINTERS, $0A
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	MOVE_INT $28, $06
	MOVE_INT $06, $12
	JSL DECOMP
	MOVE_INT $28, $06
	COPY_TO_VRAM1P $06, $0000, $2000, $00
	.A16
	LOADPTR BATTLEBG_ARR_POINTERS, $0A
	MOVE_INT $16, $06
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	MOVE_INT $28, $06
	MOVE_INT $06, $12
	JSL DECOMP
	LDA #$0000
	STA $2E
	BRA @UNKNOWN13
@UNKNOWN12:
	STA $06
	STZ $08
	CLC
	VAR_ADD_CONST_INT_ASSIGN $7F0001, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	AND #$00DF
	ORA #$0010
	STA [$06]
	REP #PROC_FLAGS::ACCUM8
	LDA $2E
	INC
	INC
	STA $2E
@UNKNOWN13:
	CMP #$0800
	BCC @UNKNOWN12
	COPY_TO_VRAM1 UNKNOWN_7F0000, $5800, $800, $00
	.A16
	LOADPTR BG_DATA_TABLE, $06
	MOVE_INT $06, $28
	LDA $2C
	STA $04
	OPTIMIZED_MULT $04, .SIZEOF(bg_layer_config_entry)
	TAX
	STX $20
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2)
	STA $04
	TXA
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDA $04
	JSL UNKNOWN_C2CFE5
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette_pointer
	STA $02
	LDA #.LOWORD(CUR_MAP_PAL) + 64
	LDX $02
	STA a:.LOWORD(RAM),X
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $04
	STA a:.LOWORD(RAM),X
	LDY #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette
	STY $2C
	REP #PROC_FLAGS::ACCUM8
	LOADPTR BATTLEBG_PALETTE_POINTERS, $0A
	LDX $20
	TXA
	INC
	MOVE_INTX $28, $06
	CLC
	ADC $06
	STA $06
	STA $16
	LDA $08
	STA $18
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	MOVE_INTX $0A, $06
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDY $2C
	TYA
	JSL MEMCPY16
	MOVE_INT $16, $06
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette2)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette2
	JSL MEMCPY16
	LDY $2C
	TYA
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0020
	STX $22
	LDX $02
	LDA a:.LOWORD(RAM),X
	LDX $22
	JSL MEMCPY16
	LDX #$0001
	LDA $04
	JSL GENERATE_BATTLEBG_FRAME
	LDA #$0215
	STA .LOWORD(UNKNOWN_7EADAE)
	LDA #$0014
	STA .LOWORD(UNKNOWN_7EADB0)
	JMP a:.LOWORD(@UNKNOWN23)
@UNKNOWN14:
	LDA $04
	OPTIMIZED_MULT $04, 17
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX $1E
	TXA
	JSL UNKNOWN_C2CFE5
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA .LOWORD(LOADED_BG_DATA_LAYER2) + 2
	LDA #$0002
	LDX $1E
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN23)
@UNKNOWN15:
	.A16
	LDA #$0008
	JSL UNKNOWN_C08D79
	LDY #$6000
	LDX #$7C00
	LDA #$0000
	JSL SET_BG1_VRAM_LOCATION
	LDY #$0000
	LDX #$5800
	TYA
	JSL SET_BG2_VRAM_LOCATION
	LDY #$1000
	LDX #$5C00
	LDA #$0000
	JSL SET_BG3_VRAM_LOCATION
	LDY #$3000
	LDX #$0C00
	LDA #$0000
	JSL SET_BG4_VRAM_LOCATION
	LDA #$0000
	STA $2E
	BRA @UNKNOWN17
@UNKNOWN16:
	STA $06
	STZ $08
	CLC
	VAR_ADD_CONST_INT_ASSIGN $7F0001, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	AND #$00DF
	STA [$06]
	REP #PROC_FLAGS::ACCUM8
	LDA $2E
	INC
	INC
	STA $2E
@UNKNOWN17:
	CMP #$0800
	BCC @UNKNOWN16
	LOADPTR UNKNOWN_7F0000, $06
	MOVE_INT $06, $24
	COPY_TO_VRAM1P $06, $5C00, $800, $00
	.A16
	LOADPTR BG_DATA_TABLE, $28
	LDA $02
	OPTIMIZED_MULT $04, .SIZEOF(bg_layer_config_entry)
	TAX
	STX $20
	MOVE_INT $28, $06
	TXA
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSL UNKNOWN_C2CFE5
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette_pointer
	STA $02
	LDA #.LOWORD(CUR_MAP_PAL) + 64
	LDX $02
	STA a:.LOWORD(RAM),X
	LDY #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette
	STY $1E
	LOADPTR BATTLEBG_PALETTE_POINTERS, $1A
	MOVE_INT $28, $0A
	LDX $20
	TXA
	INC
	CLC
	ADC $0A
	STA $0A
	MOVE_INT $1A, $06
	LDA [$0A]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDY $1E
	TYA
	JSL MEMCPY16
	LDA [$0A]
	AND #$00FF
	ASL
	ASL
	PHA
	MOVE_INT $1A, $0A
	PLA
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette2)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette2
	JSL MEMCPY16
	LDY $1E
	TYA
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0020
	STX $20
	LDX $02
	LDA a:.LOWORD(RAM),X
	LDX $20
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0003
	STA .LOWORD(LOADED_BG_DATA_LAYER1)
	REP #PROC_FLAGS::ACCUM8
	LDA $2C
	STA $04
	BNE @UNKNOWN18
	JMP a:.LOWORD(@UNKNOWN21)
@UNKNOWN18:
	LDA #$0003
	STA .LOWORD(UNKNOWN_7EAD8A)
	JSL UNKNOWN_C0AFCD
	MOVE_INT $28, $0A
	LDA $04
	OPTIMIZED_MULT $04, 17
	CLC
	ADC $0A
	STA $0A
	LOADPTR BATTLEBG_GFX_POINTERS, $06
	LDA [$0A]
	AND #$00FF
	OPTIMIZED_MULT $04, 4
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	MOVE_INT $24, $06
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $3000, $1800, $00
	.A16
	LDA [$0A]
	AND #$00FF
	ASL
	ASL
	PHA
	LOADPTR BATTLEBG_ARR_POINTERS, $0A
	PLA
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	MOVE_INT $24, $06
	MOVE_INT $06, $12
	JSL DECOMP
	LDA #$0000
	STA $2E
	BRA @UNKNOWN20
@UNKNOWN19:
	STA $06
	STZ $08
	CLC
	VAR_ADD_CONST_INT_ASSIGN $7F0001, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	AND #$00DF
	STA [$06]
	REP #PROC_FLAGS::ACCUM8
	LDA $2E
	INC
	INC
	STA $2E
@UNKNOWN20:
	CMP #$0800
	BCC @UNKNOWN19
	COPY_TO_VRAM1 UNKNOWN_7F0000, $C00, $800, $00
	.A16
	LOADPTR BG_DATA_TABLE, $06
	MOVE_INT $06, $28
	LDA $2C
	STA $04
	OPTIMIZED_MULT $04, .SIZEOF(bg_layer_config_entry)
	TAX
	STX $20
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2)
	STA $04
	TXA
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDA $04
	JSL UNKNOWN_C2CFE5
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette_pointer
	STA $02
	LDA #.LOWORD(CUR_MAP_PAL) + 128
	LDX $02
	STA a:.LOWORD(RAM),X
	LDY #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette
	STY $2C
	LOADPTR BATTLEBG_PALETTE_POINTERS, $0A
	LDX $20
	TXA
	INC
	MOVE_INTX $28, $06
	CLC
	ADC $06
	STA $06
	STA $16
	LDA $08
	STA $18
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	MOVE_INTX $0A, $06
	CLC
	ADC $06
	STA $06
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDY $2C
	TYA
	JSL MEMCPY16
	MOVE_INT $16, $06
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette2)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette2
	JSL MEMCPY16
	LDY $2C
	TYA
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0020
	STX $20
	LDX $02
	LDA a:.LOWORD(RAM),X
	LDX $20
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0004
	LDX $04
	STA a:.LOWORD(RAM),X
	BRA @UNKNOWN22
@UNKNOWN21:
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(LOADED_BG_DATA_LAYER2)
@UNKNOWN22:
	REP #PROC_FLAGS::ACCUM8
	LDA #$0817
	STA .LOWORD(UNKNOWN_7EADAE)
	LDA #$0013
	STA .LOWORD(UNKNOWN_7EADB0)
@UNKNOWN23:
	REP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7EADAC)
	LDA .LOWORD(LOADED_BG_DATA_LAYER2)
	AND #$00FF
	BEQ @UNKNOWN24
	LDA .LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::distortion_styles
	AND #$00FF
	BEQ @UNKNOWN24
	LDA #$0001
	STA .LOWORD(UNKNOWN_7EADAC)
@UNKNOWN24:
	JSL UNKNOWN_C2D0AC
	LDA .LOWORD(UNKNOWN_7EADB2)
	BEQ @UNKNOWN25
	LDA #$0002
	JSL UNKNOWN_C429E8
@UNKNOWN25:
	JSL UNKNOWN_C2E9ED
	PLD
	RTL

UNKNOWN_C2DAE3: ;$C2DAE3
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 15
	LDX #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::distortion_styles
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $0E
	LDY #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::distortion_styles + 3
	LDA a:.LOWORD(RAM),Y
	STA a:.LOWORD(RAM),X
	STZ .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::distortion_styles + 1
	REP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::distortion_duration_left
	SEP #PROC_FLAGS::ACCUM8
	LDA $0E
	STA a:.LOWORD(RAM),Y
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL

UNKNOWN_C2DB14: ;$C2DB14
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette_pointer
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette
	JSL MEMCPY16
	PLD
	RTL

UNKNOWN_C2DB3F: ;$C2DB3F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 14
	LDA .LOWORD(UNKNOWN_7EADD0)
	BEQ @UNKNOWN3
	LDA .LOWORD(UNKNOWN_7EADD2)
	SEC
	SBC #$0555
	STA .LOWORD(UNKNOWN_7EADD2)
	STA $0A
	STZ $0C
	MOVE_INT_CONSTANT $00006000, $06
	CLC
	LDA $06
	SBC $0A
	LDA $08
	SBC $0C
	BVC @UNKNOWN0
	BPL @UNKNOWN2
	BRA @UNKNOWN1
@UNKNOWN0:
	BMI @UNKNOWN2
@UNKNOWN1:
	LDA #$6000
	STA .LOWORD(UNKNOWN_7EADD2)
	STZ .LOWORD(UNKNOWN_7EADD0)
@UNKNOWN2:
	SEP #PROC_FLAGS::INDEX8
	LDY #$0008
	LDA .LOWORD(UNKNOWN_7EADD2)
	JSL ASR8_UNKNOWN1
	JSR a:.LOWORD(UNKNOWN_C2E08E)
@UNKNOWN3:
	LDA .LOWORD(UNKNOWN_7EADA8)
	BEQ @UNKNOWN5
	LDA .LOWORD(UNKNOWN_7EADA8)
	DEC
	STA .LOWORD(UNKNOWN_7EADA8)
	AND #$0002
	BEQ @UNKNOWN4
	LDA #$FFFF
	JSR a:.LOWORD(UNKNOWN_C2E08E)
	BRA @UNKNOWN5
@UNKNOWN4:
	LDA #$0100
	JSR a:.LOWORD(UNKNOWN_C2E08E)
@UNKNOWN5:
	LDA .LOWORD(UNKNOWN_7EADAA)
	BEQ @UNKNOWN10
	STZ .LOWORD(CUR_TEXT_PAL)
	LDA .LOWORD(UNKNOWN_7EADAA)
	CMP #$0003
	BEQ @UNKNOWN6
	CMP #$0002
	BEQ @UNKNOWN7
	BRA @UNKNOWN8
@UNKNOWN6:
	LDA #$03E0
	STA .LOWORD(CUR_TEXT_PAL)
@UNKNOWN7:
	LDA #$0018
	JSL UNKNOWN_C0856B
@UNKNOWN8:
	LDA .LOWORD(UNKNOWN_7EADAA)
	DEC
	STA .LOWORD(UNKNOWN_7EADAA)
	AND #$0002
	BEQ @UNKNOWN9
	LDA #$0000
	JSR a:.LOWORD(UNKNOWN_C2E08E)
	BRA @UNKNOWN10
@UNKNOWN9:
	LDA #$0100
	JSR a:.LOWORD(UNKNOWN_C2E08E)
@UNKNOWN10:
	LDA .LOWORD(VERTICAL_SHAKE_DURATION)
	BNE @UNKNOWN11
	STZ .LOWORD(UNKNOWN_7EAD98)
	BRA @UNKNOWN12
@UNKNOWN11:
	LDA #1*SECOND
	SEC
	SBC .LOWORD(VERTICAL_SHAKE_DURATION)
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA f:UNKNOWN_C4A591,X
	REP #PROC_FLAGS::ACCUM8
	SEC
	AND #$00FF
	SBC #$0080
	EOR #$FF80
	STA .LOWORD(UNKNOWN_7EAD98)
	LDX .LOWORD(VERTICAL_SHAKE_DURATION)
	DEX
	STX .LOWORD(VERTICAL_SHAKE_DURATION)
	BNE @UNKNOWN12
	LDA .LOWORD(VERTICAL_SHAKE_HOLD_DURATION)
	BEQ @UNKNOWN12
	DEC .LOWORD(VERTICAL_SHAKE_HOLD_DURATION)
	LDA #1*SIXTH_OF_A_SECOND
	STA .LOWORD(VERTICAL_SHAKE_DURATION)
@UNKNOWN12:
	.I16
	STZ .LOWORD(UNKNOWN_7EAD96)
	LDA .LOWORD(WOBBLE_DURATION)
	BEQ @UNKNOWN13
	LDY #6*FIFTHS_OF_A_SECOND
	LDA .LOWORD(WOBBLE_DURATION)
	JSL MODULUS16
	DEC .LOWORD(WOBBLE_DURATION)
	LDY #$0048
	XBA
	AND #$FF00
	JSL DIVISION16S_DIVISOR_POSITIVE
	.I16
	TAX
	LDY #$0100
	SEP #PROC_FLAGS::ACCUM8
	LDA f:SINE_LOOKUP_TABLE,X
	REP #PROC_FLAGS::ACCUM8
	SEC
	AND #$00FF
	SBC #$0080
	EOR #$FF80
	ASL
	ASL
	ASL
	ASL
	ASL
	ASL
	JSL DIVISION16
	STA .LOWORD(UNKNOWN_7EAD96)
@UNKNOWN13:
	LDA .LOWORD(SHAKE_DURATION)
	BEQ @UNKNOWN17
	LDA .LOWORD(SHAKE_DURATION)
	AND #$0003
	DEC .LOWORD(SHAKE_DURATION)
	CMP #$0000
	BEQ @UNKNOWN14
	CMP #$0002
	BEQ @UNKNOWN14
	CMP #$0001
	BEQ @UNKNOWN15
	CMP #$0003
	BEQ @UNKNOWN16
	BRA @UNKNOWN17
@UNKNOWN14:
	STZ .LOWORD(UNKNOWN_7EAD96)
	BRA @UNKNOWN17
@UNKNOWN15:
	LDA #$0002
	STA .LOWORD(UNKNOWN_7EAD96)
	BRA @UNKNOWN17
@UNKNOWN16:
	LDA #$FFFE
	STA .LOWORD(UNKNOWN_7EAD96)
@UNKNOWN17:
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::bitdepth
	AND #$00FF
	CMP #$0002
	BNE @UNKNOWN18
	LDA .LOWORD(UNKNOWN_7EAD96)
	STA a:.LOWORD(BG1_X_POS)
	LDA .LOWORD(UNKNOWN_7EAD98)
	STA a:.LOWORD(BG1_Y_POS)
	BRA @UNKNOWN19
@UNKNOWN18:
	LDA .LOWORD(BATTLE_MODE_FLAG)
	BEQ @UNKNOWN19
	LDA .LOWORD(UNKNOWN_7EAD96)
	STA a:.LOWORD(BG3_X_POS)
	LDA .LOWORD(UNKNOWN_7EAD98)
	STA a:.LOWORD(BG3_Y_POS)
@UNKNOWN19:
	LDA .LOWORD(UNKNOWN_7EAD90)
	BEQ @UNKNOWN20
	DEC .LOWORD(UNKNOWN_7EAD90)
@UNKNOWN20:
	LDA .LOWORD(BATTLE_MODE_FLAG)
	BEQ @UNKNOWN21
	JSL UNKNOWN_C2F8F9
@UNKNOWN21:
	LDX #$0000
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSL GENERATE_BATTLEBG_FRAME
	LDY #.LOWORD(LOADED_BG_DATA_LAYER2)
	LDA a:.LOWORD(RAM),Y
	AND #$00FF
	BEQ @UNKNOWN22
	LDX #$0001
	TYA
	JSL GENERATE_BATTLEBG_FRAME
@UNKNOWN22:
	JSL UNKNOWN_C2E6B3_ENTRY2
	LDA .LOWORD(RED_FLASH_DURATION)
	BEQ @UNKNOWN24
	LDA .LOWORD(RED_FLASH_DURATION)
	DEC
	STA .LOWORD(RED_FLASH_DURATION)
	LDY #$000C
	JSL DIVISION16S_DIVISOR_POSITIVE
	AND #$0001
	BEQ @UNKNOWN23
	LDY #$0004
	LDX #$0000
	LDA #$001F
	JSL SET_BATTLE_SWIRL_COLOUR
	LDX #$003F
	LDA #$0000
	JSL SET_COLOUR_ADDSUB_MODE
	BRA @UNKNOWN24
@UNKNOWN23:
	LDY #$0000
	TYX
	TYA
	JSL SET_BATTLE_SWIRL_COLOUR
	LDA .LOWORD(UNKNOWN_7EAD8A)
	JSL UNKNOWN_C0AFCD
@UNKNOWN24:
	LDA .LOWORD(GREEN_FLASH_DURATION)
	BEQ @UNKNOWN26
	LDA .LOWORD(GREEN_FLASH_DURATION)
	DEC
	STA .LOWORD(GREEN_FLASH_DURATION)
	LDY #$000C
	JSL DIVISION16S_DIVISOR_POSITIVE
	AND #$0001
	BEQ @UNKNOWN25
	LDY #$0004
	LDX #$001F
	LDA #$0000
	JSL SET_BATTLE_SWIRL_COLOUR
	LDX #$003F
	LDA #$0000
	JSL SET_COLOUR_ADDSUB_MODE
	BRA @UNKNOWN26
@UNKNOWN25:
	LDY #$0000
	TYX
	TYA
	JSL SET_BATTLE_SWIRL_COLOUR
	LDA .LOWORD(UNKNOWN_7EAD8A)
	JSL UNKNOWN_C0AFCD
@UNKNOWN26:
	LDA .LOWORD(HP_PP_BOX_BLINK_DURATION)
	BEQ @UNKNOWN28
	LDA .LOWORD(HP_PP_BOX_BLINK_DURATION)
	DEC
	STA .LOWORD(HP_PP_BOX_BLINK_DURATION)
	LDY #$0003
	JSL DIVISION16S_DIVISOR_POSITIVE
	AND #$0001
	BEQ @UNKNOWN27
	LDA .LOWORD(HP_PP_BOX_BLINK_TARGET)
	JSL UNDRAW_HP_PP_WINDOW
	BRA @UNKNOWN28
@UNKNOWN27:
	LDA .LOWORD(HP_PP_BOX_BLINK_TARGET)
	JSL UNKNOWN_C207B6
@UNKNOWN28:
	JSL UNKNOWN_C4A7B0
	JSL UNKNOWN_C2FD99
	LDA .LOWORD(UNKNOWN_7EADB6)
	BEQ @UNKNOWN33
	LDA .LOWORD(UNKNOWN_7EADB2)
	BEQ @UNKNOWN33
	LDA .LOWORD(UNKNOWN_7EADCC)
	CMP #$03BB
	BCS @UNKNOWN29
	STZ .LOWORD(UNKNOWN_7EADCC)
	LDA #$00E0
	STA .LOWORD(UNKNOWN_7EADCE)
	STZ .LOWORD(UNKNOWN_7EADB6)
	BRA @UNKNOWN30
@UNKNOWN29:
	LDA .LOWORD(UNKNOWN_7EADCC)
	SEC
	SBC #$03BB
	STA .LOWORD(UNKNOWN_7EADCC)
	LDA .LOWORD(UNKNOWN_7EADCE)
	CLC
	ADC #$03BB
	STA .LOWORD(UNKNOWN_7EADCE)
@UNKNOWN30:
	SEP #PROC_FLAGS::INDEX8
	LDY #$0008
	LDA .LOWORD(UNKNOWN_7EADCC)
	JSL ASR8_UNKNOWN1
	CMP .LOWORD(UNKNOWN_7EADB2)
	BCS @UNKNOWN31
	STA .LOWORD(UNKNOWN_7EADB2)
@UNKNOWN31:
	LDY #$0008
	LDA .LOWORD(UNKNOWN_7EADCE)
	JSL ASR8_UNKNOWN1
	CMP .LOWORD(UNKNOWN_7EADB4)
	BCC @UNKNOWN32
	BEQ @UNKNOWN32
	STA .LOWORD(UNKNOWN_7EADB4)
@UNKNOWN32:
	JSL UNKNOWN_C2D0AC
@UNKNOWN33:
	PLD
	RTL

UNKNOWN_C2DE0F: ;$C2DE0F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 20
	LDX #$0000
	BRA @UNKNOWN1
@UNKNOWN0:
	TXA
	ASL
	CLC
	ADC #.LOWORD(LOADED_BG_DATA_LAYER1)
	STA $12
	CLC
	ADC #$000C
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	AND #$3DEF
	STA a:.LOWORD(RAM),Y
	LDA $12
	CLC
	ADC #$0083
	TAY
	LDA a:.LOWORD(RAM),Y
	LSR
	AND #$3DEF
	STA a:.LOWORD(RAM),Y
	INX
@UNKNOWN1:
	CPX #$0010
	BCC @UNKNOWN0
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette_pointer
	JSL MEMCPY16
	LDA .LOWORD(LOADED_BG_DATA_LAYER2)
	AND #$00FF
	BEQ @UNKNOWN2
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA .LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette_pointer
	JSL MEMCPY16
@UNKNOWN2:
	PLD
	RTL

UNKNOWN_C2DE96: ;$C2DE96
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 22
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette2
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $12
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette
	JSL MEMCPY16
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette2
	STA $0A
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $0C
	STZ $0D
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette
	JSL MEMCPY16
	MOVE_INT $12, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::palette_pointer
	JSL MEMCPY16
	LDA .LOWORD(LOADED_BG_DATA_LAYER2)
	AND #$00FF
	BEQ @UNKNOWN0
	MOVE_INT $0A, $06
	MOVE_INT $06, $0E
	LDX #.SIZEOF(loaded_bg_data::palette)
	LDA .LOWORD(LOADED_BG_DATA_LAYER2) + loaded_bg_data::palette_pointer
	JSL MEMCPY16
@UNKNOWN0:
	PLD
	RTL

; A = ???, X = ???, Y = ???
UNKNOWN_C2DF2E: ;$C2DF2E
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 28
	STY $1A
	STX $02
	STA $18
	LDA $02
	CMP #$FFFF
	BEQ @UNKNOWN0
	LDA $02
	BNE @UNKNOWN1
@UNKNOWN0:
	LDA $1A
	ASL
	STA $1A
	CLC
	ADC $18
	TAX
	LDA $02
	STA a:.LOWORD(RAM)+12,X
	LDY #$004C
	LDA $1A
	CLC
	ADC ($18),Y
	TAX
	LDA $02
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN7)
@UNKNOWN1:
	LDA $02
	CMP #$0100
	BNE @UNKNOWN2
	LDA $1A
	ASL
	STA $16
	CLC
	ADC $18
	TAX
	LDY a:.LOWORD(RAM)+44,X
	STY $14
	TYA
	STA a:.LOWORD(RAM)+12,X
	LDY #$004C
	LDA $16
	CLC
	ADC ($18),Y
	TAX
	LDY $14
	TYA
	STA a:.LOWORD(RAM),X
	JMP a:.LOWORD(@UNKNOWN7)
@UNKNOWN2:
	LDA $1A
	ASL
	CLC
	ADC $18
	STA $04
	STA $14
	LDX $04
	LDA a:.LOWORD(RAM)+44,X
	STA $16
	AND #$001F
	TAX
	STX $12
	LDA $16
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #$001F
	TAY
	STY $10
	SEP #PROC_FLAGS::ACCUM8
	LDA #$000A
	SEP #PROC_FLAGS::INDEX8
	TAY
	REP #PROC_FLAGS::ACCUM8
	LDA $16
	JSL ASR8_UNKNOWN1
	AND #$001F
	STA $16
	REP #PROC_FLAGS::INDEX8
	LDY $02
	LDX $12
	TXA
	JSL MULT16
	XBA
	AND #$00FF
	TAX
	STX $12
	LDY $10
	TYA
	LDY $02
	JSL MULT16
	XBA
	AND #$00FF
	TAY
	STY $10
	LDY $02
	LDA $16
	JSL MULT16
	XBA
	AND #$00FF
	STA $0E
	SEP #PROC_FLAGS::ACCUM8
	LDA #$000A
	SEP #PROC_FLAGS::INDEX8
	TAY
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	JSL ASL16_ENTRY2
	STA $02
	REP #PROC_FLAGS::INDEX8
	LDY $10
	TYA
	ASL
	ASL
	ASL
	ASL
	ASL
	STA $04
	LDX $12
	TXA
	CLC
	ADC $04
	CLC
	ADC $02
	LDX $14
	STX $04
	STA a:.LOWORD(RAM)+12,X
	LDY #$0003
	LDA ($18),Y
	AND #$00FF
	CMP #$0002
	BNE @UNKNOWN4
	LDY #$0006
	LDA ($18),Y
	AND #$00FF
	CMP $1A
	BEQ @UNKNOWN3
	BCS @UNKNOWN4
@UNKNOWN3:
	LDY #$0007
	LDA ($18),Y
	AND #$00FF
	CMP $1A
	BCS @UNKNOWN7
@UNKNOWN4:
	LDY #$0003
	LDA ($18),Y
	AND #$00FF
	BEQ @UNKNOWN6
	LDY #$0004
	LDA ($18),Y
	AND #$00FF
	CMP $1A
	BEQ @UNKNOWN5
	BCS @UNKNOWN6
@UNKNOWN5:
	LDY #$0005
	LDA ($18),Y
	AND #$00FF
	CMP $1A
	BCS @UNKNOWN7
@UNKNOWN6:
	LDA $1A
	ASL
	STA $1A
	LDY #$004C
	CLC
	ADC ($18),Y
	PHA
	LDA $1A
	CLC
	ADC $18
	TAX
	LDA a:.LOWORD(RAM)+12,X
	PLX
	STA a:.LOWORD(RAM),X
@UNKNOWN7:
	PLD
	RTS

UNKNOWN_C2E08E: ;$C2E08E
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	STA $04
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::bitdepth
	AND #$00FF
	CMP #$0004
	BNE @UNKNOWN2
	LDA #$0001
	STA $02
	BRA @UNKNOWN1
@UNKNOWN0:
	LDY $02
	LDX $04
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSR a:.LOWORD(UNKNOWN_C2DF2E)
	INC $02
@UNKNOWN1:
	LDA $02
	CMP #$0010
	BCC @UNKNOWN0
	BRA @UNKNOWN5
@UNKNOWN2:
	LDA #$0001
	STA $02
	BRA @UNKNOWN4
@UNKNOWN3:
	LDY $02
	LDX $04
	LDA #.LOWORD(LOADED_BG_DATA_LAYER1)
	JSR a:.LOWORD(UNKNOWN_C2DF2E)
	LDY $02
	LDX $04
	LDA #.LOWORD(LOADED_BG_DATA_LAYER2)
	JSR a:.LOWORD(UNKNOWN_C2DF2E)
	INC $02
@UNKNOWN4:
	LDA $02
	CMP #$0004
	BCC @UNKNOWN3
@UNKNOWN5:
	PLD
	RTS

UNKNOWN_C2E0E7: ;$C2E0E7
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	STZ .LOWORD(GREEN_FLASH_DURATION)
	STZ .LOWORD(RED_FLASH_DURATION)
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7EAEC2)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(HP_PP_BOX_BLINK_DURATION)
	BEQ @UNKNOWN0
	LDA .LOWORD(HP_PP_BOX_BLINK_TARGET)
	JSL UNKNOWN_C207B6
	STZ .LOWORD(HP_PP_BOX_BLINK_DURATION)
@UNKNOWN0:
	LDY #$0000
	TYX
	TYA
	JSL SET_BATTLE_SWIRL_COLOUR
	LDA #$0001
	JSL UNKNOWN_C0AFCD
	RTL

SHOW_PSI_ANIMATION: ;$C2E116
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 40
	STA $02
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::bitdepth
	AND #$00FF
	CMP #$0002
	BNE @UNKNOWN1
	LOADPTR UNKNOWN_7F8000, $06
	MOVE_INT $06, $24
	LOADPTR $CC0000, $06
	LDA $02
	OPTIMIZED_MULT $04, 12
	TAX
	LDA f:PSI_ANIM_CFG,X
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDA $24
	STA $06
@UNKNOWN0:
	LDA $26
	STA $08
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM3P $06, $0000, $1000, $0000
	.A16
	LDA #$0260
	STA .LOWORD(UNKNOWN_7E1BCA)
	JMP a:.LOWORD(@UNKNOWN6)
@UNKNOWN1:
	LOADPTR UNKNOWN_7F0000, $06
	MOVE_INT $06, $24
	LOADPTR $CC0000, $06
	LDA $02
	OPTIMIZED_MULT $04, 12
	TAX
	LDA f:PSI_ANIM_CFG,X
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	MOVE_INT $24, $06
	MOVE_INT $06, $12
	JSL DECOMP
	LOADPTR UNKNOWN_7F8000, $0A
	LDX #$0000
	JMP a:.LOWORD(@UNKNOWN4)
@UNKNOWN2:
	LDA [$06]
	STA [$0A]
	INC $06
	INC $06
	INC $0A
	INC $0A
	LDA [$06]
	STA [$0A]
	INC $06
	INC $06
	INC $0A
	INC $0A
	LDA [$06]
	STA [$0A]
	INC $06
	INC $06
	INC $0A
	INC $0A
	LDA [$06]
	STA [$0A]
	INC $06
	INC $06
	MOVE_INT $06, $24
	MOVE_INT $0A, $06
	INC $06
	INC $06
	LDA [$24]
	STA [$06]
	MOVE_INT $24, $0A
	INC $0A
	INC $0A
	INC $06
	INC $06
	LDA [$0A]
	STA [$06]
	INC $0A
	INC $0A
	INC $06
	INC $06
	MOVE_INT $06, $20
	LDA [$0A]
	STA [$06]
	MOVE_INT $0A, $06
	INC $06
	INC $06
	MOVE_INT $06, $1C
	MOVE_INT $20, $06
	MOVE_INT $06, $0A
	INC $0A
	INC $0A
	LDA [$1C]
	STA [$0A]
	MOVE_INT $1C, $06
	INC $06
	INC $06
	INC $0A
	INC $0A
	LDA #$0000
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	STA [$0A]
	INC $0A
	INC $0A
	INX
@UNKNOWN4:
	CPX #$0100
	BCS @UNKNOWN5
	BEQ @UNKNOWN5
	JMP a:.LOWORD(@UNKNOWN2)
@UNKNOWN5:
	COPY_TO_VRAM3 UNKNOWN_7F8000, $0000, $2000, $0000
	.A16
	LDA #$0280
	STA .LOWORD(UNKNOWN_7E1BCA)
@UNKNOWN6:
	JSL READ_JOYPAD
	LOADPTR PSI_ANIM_PALETTES, $06
	LDA $02
	ASL
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0008
	LDA #$1BAA
	JSL MEMCPY16
	MOVE_INT $06, $0E
	LDX #$0008
	LDA .LOWORD(UNKNOWN_7E1BCA)
	JSL MEMCPY16
	LOADPTR UNKNOWN_7F0000, $0A
	MOVE_INT $0A, $06
	MOVE_INT $06, .LOWORD(UNKNOWN_7E1BA1)
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA .LOWORD(UNKNOWN_7E1B9E)
	REP #PROC_FLAGS::ACCUM8
	LOADPTR PSI_ANIM_CFG, $06
	MOVE_INT $06, $24
	LDA $02
	OPTIMIZED_MULT $04, 12
	STA $1A
	INC
	INC
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA .LOWORD(UNKNOWN_7E1B9E)+1
	REP #PROC_FLAGS::ACCUM8
	LDA $1A
	CLC
	ADC #$0006
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA .LOWORD(UNKNOWN_7E1BA0)
	REP #PROC_FLAGS::ACCUM8
	LDA $1A
	INC
	INC
	INC
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA .LOWORD(UNKNOWN_7E1BA8)
	REP #PROC_FLAGS::ACCUM8
	LDA $1A
	INC
	INC
	INC
	INC
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA .LOWORD(UNKNOWN_7E1BA5)
	REP #PROC_FLAGS::ACCUM8
	LDA $1A
	CLC
	ADC #$0005
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA .LOWORD(UNKNOWN_7E1BA6)
	STZ .LOWORD(UNKNOWN_7E1BA7)
	LDA #$0001
	STA .LOWORD(UNKNOWN_7E1BA9)
	REP #PROC_FLAGS::ACCUM8
	LDA $1A
	CLC
	ADC #$0008
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	STA .LOWORD(UNKNOWN_7E1BCC)
	LDA $1A
	CLC
	ADC #$0009
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	STA .LOWORD(UNKNOWN_7E1BCE)
	LDA $1A
	CLC
	ADC #$000A
	MOVE_INTX $24, $06
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$001F
	STA .LOWORD(UNKNOWN_7E1BD0)
	LDA [$06]
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #$001F
	STA .LOWORD(UNKNOWN_7E1BD2)
	SEP #PROC_FLAGS::INDEX8
	LDY #$000A
	LDA [$06]
	JSL ASR8_UNKNOWN1
	AND #$001F
	STA .LOWORD(UNKNOWN_7E1BD4)
	LOADPTR PSI_ANIM_POINTERS, $06
	LDA $02
	ASL
	ASL
	CLC
	ADC $06
	STA $06
	REP #PROC_FLAGS::INDEX8
	DEREFERENCE_PTR_TO $06, $06
	MOVE_INT $06, $0E
	MOVE_INT $0A, $06
	MOVE_INT $06, $12
	JSL DECOMP
	JSL UNKNOWN_C2DE0F
	LDA #$0300
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0080
	LDA #$0380
	JSL MEMCPY16
	LDA #$0000
	STA $1A
	BRA @UNKNOWN8
@UNKNOWN7:
	ASL
	TAX
	STZ .LOWORD(UNKNOWN_7EAEE7),X
	LDA $1A
	INC
	STA $1A
@UNKNOWN8:
	CMP #$0004
	BCC @UNKNOWN7
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::consciousness,X
	AND #$00FF
	BNE @UNKNOWN9
	JMP a:.LOWORD(@UNKNOWN26)
@UNKNOWN9:
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN10
	JMP a:.LOWORD(@UNKNOWN26)
@UNKNOWN10:
	STZ .LOWORD(UNKNOWN_7EAD9A)
	LDA $02
	OPTIMIZED_MULT $04, 12
	CLC
	ADC #$0007
	TAX
	LDA f:PSI_ANIM_CFG,X
	AND #$00FF
	BEQ @UNKNOWN12
	CMP #$0003
	BEQ @UNKNOWN12
	CMP #$0001
	BEQ @UNKNOWN14
	CMP #$0002
	BNE @UNKNOWN11
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN11:
	JMP a:.LOWORD(@UNKNOWN24)
@UNKNOWN12:
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::initiative,X
	AND #$00FF
	STA $02
	LDA #$0080
	SEC
	SBC $02
	STA .LOWORD(UNKNOWN_7EAD9A)
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	STA $02
	LDA #$0090
	SEC
	SBC $02
	STA .LOWORD(UNKNOWN_7EAD9C)
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_HEIGHT)
	CMP #$0008
	BNE @UNKNOWN13
	LDA .LOWORD(UNKNOWN_7EAD9C)
	CLC
	ADC #$0010
	STA .LOWORD(UNKNOWN_7EAD9C)
@UNKNOWN13:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX .LOWORD(CURRENT_TARGET)
	STA a:battler::id2,X
	LDX .LOWORD(CURRENT_TARGET)
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::sprite_y,X
	AND #$00FF
	ASL
	TAX
	LDA #$0001
	STA .LOWORD(UNKNOWN_7EAEE7),X
	JMP a:.LOWORD(@UNKNOWN24)
@UNKNOWN14:
	LDX .LOWORD(CURRENT_TARGET)
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	STA $02
	LDA #$0090
	SEC
	SBC $02
	STA .LOWORD(UNKNOWN_7EAD9C)
	LDY #$0000
	STY $1A
	LDA #.LOWORD(BATTLERS_TABLE) + (.SIZEOF(battler) * 8)
	STA $02
	LDX #$0008
	STX $18
	BRA @UNKNOWN18
@UNKNOWN15:
	LDX $02
	LDA a:battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN17
	LDX $02
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN17
	LDX $02
	LDA a:battler::afflictions + STATUS_GROUP::PERSISTENT_EASYHEAL,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN17
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM)+69,X
	LDX .LOWORD(CURRENT_TARGET)
	CMP a:.LOWORD(RAM)+69,X
	BNE @UNKNOWN17
	LDX $02
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_HEIGHT)
	CMP #$0008
	BNE @UNKNOWN16
	LDY #$0001
	STY $1A
@UNKNOWN16:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	LDX $02
	STA a:battler::id2,X
	LDX $02
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::sprite_y,X
	AND #$00FF
	ASL
	TAX
	LDA #$0001
	STA .LOWORD(UNKNOWN_7EAEE7),X
@UNKNOWN17:
	REP #PROC_FLAGS::ACCUM8
	LDA $02
	CLC
	ADC #.SIZEOF(battler)
	STA $02
	LDX $18
	INX
	STX $18
@UNKNOWN18:
	CPX #$0020
	BCS @UNKNOWN19
	BEQ @UNKNOWN19
	JMP a:.LOWORD(@UNKNOWN15)
@UNKNOWN19:
	LDY $1A
	BEQ @UNKNOWN24
	LDA .LOWORD(UNKNOWN_7EAD9C)
	CLC
	ADC #$0010
	STA .LOWORD(UNKNOWN_7EAD9C)
	BRA @UNKNOWN24
@UNKNOWN20:
	LDA #$0010
	STA .LOWORD(UNKNOWN_7EAD9C)
	LDY #.LOWORD(BATTLERS_TABLE) + .SIZEOF(battler) * 8
	LDX #$0008
	STX $16
	BRA @UNKNOWN23
@UNKNOWN21:
	LDA a:battler::consciousness,Y
	AND #$00FF
	BEQ @UNKNOWN22
	LDA a:battler::ally_or_enemy,Y
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN22
	LDA a:battler::afflictions + STATUS_GROUP::PERSISTENT_EASYHEAL,Y
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN22
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA a:battler::id2,Y
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::sprite_y,Y
	AND #$00FF
	ASL
	TAX
	LDA #$0001
	STA .LOWORD(UNKNOWN_7EAEE7),X
@UNKNOWN22:
	TYA
	CLC
	ADC #.SIZEOF(battler)
	TAY
	LDX $16
	INX
	STX $16
@UNKNOWN23:
	CPX #$0020
	BCC @UNKNOWN21
@UNKNOWN24:
	LDA .LOWORD(LOADED_BG_DATA_LAYER1) + loaded_bg_data::bitdepth
	AND #$00FF
	CMP #$0002
	BNE @UNKNOWN25
	LDA .LOWORD(UNKNOWN_7EAD9A)
	STA a:.LOWORD(BG2_X_POS)
	LDA .LOWORD(UNKNOWN_7EAD9C)
	STA a:.LOWORD(BG2_Y_POS)
	BRA @UNKNOWN26
@UNKNOWN25:
	LDA .LOWORD(UNKNOWN_7EAD9A)
	STA a:.LOWORD(BG1_X_POS)
	LDA .LOWORD(UNKNOWN_7EAD9C)
	STA a:.LOWORD(BG1_Y_POS)
@UNKNOWN26:
	PLD
	RTL

UNKNOWN_C2E6B3: ;$C2E6B3
	.BYTE $30, $00, $00
UNKNOWN_C2E6B3_ENTRY2: ;$C2E6B6
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 27
	LDA .LOWORD(UNKNOWN_7E1B9E)
	AND #$00FF
	BNE @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN1:
	LDX #.LOWORD(UNKNOWN_7E1B9E)
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	DEC
	STA .LOWORD(UNKNOWN_7E1B9E)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQ @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN4)
@UNKNOWN2:
	LDA #.LOWORD(UNKNOWN_7E1BA0)
	STA $04
	LDX $04
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BEQ @UNKNOWN3
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E1B9E)+1
	STA .LOWORD(UNKNOWN_7E1B9E)
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(UNKNOWN_7E1BA1)
	STA $02
	LDY $02
	MOVE_INT_YPTRSRC a:.LOWORD(RAM), $06
	COPY_TO_VRAM1P $06, $5800, $400, $06
	.A16
	COPY_TO_VRAM1 UNKNOWN_C2E6B3, $5800, $400, $0F
	.A16
	LDY $02
	MOVE_INT_YPTRSRC a:.LOWORD(RAM), $06
	LDA #$0400
	CLC
	ADC $06
	STA $06
	LDY $02
	MOVE_INT_YPTRDEST $06, a:.LOWORD(RAM)
	LDX $04
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	DEC
	LDX $04
	STA a:.LOWORD(RAM),X
	BRA @UNKNOWN4
@UNKNOWN3:
	.A16
	COPY_TO_VRAM1 UNKNOWN_C2E6B3+1, $5800, $800, $03
	JSL UNKNOWN_C2DE96
@UNKNOWN4:
	LDX #.LOWORD(UNKNOWN_7E1BA9)
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	STA $1A
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BNE @UNKNOWN5
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN5:
	SEP #PROC_FLAGS::ACCUM8
	LDA $1A
	DEC
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQ @UNKNOWN6
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN6:
	SEP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7E1BA8)
	STA a:.LOWORD(RAM),X
	LDA .LOWORD(UNKNOWN_7E1BA6)
	SEC
	SBC .LOWORD(UNKNOWN_7E1BA5)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA $02
	INC $02
	LDX #$0000
	STX $18
	BRA @UNKNOWN10
@UNKNOWN7:
	LDA .LOWORD(UNKNOWN_7E1BA7)
	AND #$00FF
	STA $04
	TXA
	CMP $04
	BCS @UNKNOWN8
	TXA
	CLC
	ADC $02
	SEC
	SBC $04
	STA $04
	STA $16
	BRA @UNKNOWN9
@UNKNOWN8:
	TXA
	SEC
	SBC $04
	STA $04
	STA $16
@UNKNOWN9:
	LDA .LOWORD(UNKNOWN_7E1BA5)
	AND #$00FF
	STA $14
	STX $04
	CLC
	ADC $04
	ASL
	CLC
	ADC .LOWORD(UNKNOWN_7E1BCA)
	PHA
	LDA $16
	STA $04
	LDA $14
	CLC
	ADC $04
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7E1BAA),X
	PLX
	STA a:.LOWORD(RAM),X
	LDX $18
	INX
	STX $18
@UNKNOWN10:
	TXA
	CMP $02
	BCC @UNKNOWN7
	LDX #.LOWORD(UNKNOWN_7E1BA7)
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	INC
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CMP $02
	BCC @UNKNOWN11
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA a:.LOWORD(RAM),X
@UNKNOWN11:
	REP #PROC_FLAGS::ACCUM8
	LDA #$0018
	JSL UNKNOWN_C0856B
@UNKNOWN12:
	LDX #.LOWORD(UNKNOWN_7E1BCC)
	LDA a:.LOWORD(RAM),X
	BEQ @UNKNOWN18
	DEC
	STA a:.LOWORD(RAM),X
	BNE @UNKNOWN18
	LDA #$0014
	JSL UNKNOWN_C2FAD8
	LDA #$0000
	STA $02
	BRA @UNKNOWN17
@UNKNOWN13:
	LDA $02
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EAEE7),X
	BEQ @UNKNOWN16
	LDA #$0001
	STA $04
	BRA @UNKNOWN15
@UNKNOWN14:
	LDA .LOWORD(UNKNOWN_7E1BD4)
	STA $0E
	LDY .LOWORD(UNKNOWN_7E1BD2)
	LDX .LOWORD(UNKNOWN_7E1BD0)
	LDA $02
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC $04
	JSL UNKNOWN_C2FB35
	INC $04
@UNKNOWN15:
	LDA $04
	CMP #$0010
	BCC @UNKNOWN14
@UNKNOWN16:
	INC $02
@UNKNOWN17:
	LDA $02
	CMP #$0004
	BCC @UNKNOWN13
@UNKNOWN18:
	LDX #.LOWORD(UNKNOWN_7E1BCE)
	LDA a:.LOWORD(RAM),X
	BEQ @UNKNOWN22
	DEC
	STA a:.LOWORD(RAM),X
	BNE @UNKNOWN22
	LDY #$0000
	STY $12
	BRA @UNKNOWN21
@UNKNOWN19:
	TYA
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EAEE7),X
	BEQ @UNKNOWN20
	TYX
	LDA #$0014
	JSL UNKNOWN_C2FADE
@UNKNOWN20:
	LDY $12
	INY
	STY $12
@UNKNOWN21:
	CPY #$0004
	BCC @UNKNOWN19
@UNKNOWN22:
	PLD
	RTL

UNKNOWN_C2E8C4: ;$C2E8C4
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	STY $02
	TAY
	JSL UNKNOWN_C4A67E
	LDA $02
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7EAECA)
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL

UNKNOWN_C2E8E0: ;$C2E8E0
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 24
	LDA #$0001
	STA $16
	LDA #$0004
	STA $14
	STA $04
	LDY #$0000
	STY $12
	LDA .LOWORD(BATTLE_INITIATIVE)
	BEQ @UNKNOWN0
	CMP #$0001
	BEQ @UNKNOWN1
	CMP #$0002
	BEQ @UNKNOWN2
	BRA @UNKNOWN3
@UNKNOWN0:
	LDX #$00B0
	STX $10
	LDA #$000E
	STA $02
	STA $0E
	BRA @UNKNOWN3
@UNKNOWN1:
	LDX #$00B0
	STX $10
	LDA #$001C
	STA $14
	LDA #$0005
	STA $04
	LDY #$000C
	STY $12
	LDA #$0006
	STA $02
	STA $0E
	BRA @UNKNOWN3
@UNKNOWN2:
	LDX #$0009
	STX $10
	STZ $14
	LDA #$001F
	STA $04
	TAY
	STY $12
	LDA #$0006
	STA $02
	STA $0E
@UNKNOWN3:
	LDA .LOWORD(CURRENT_BATTLE_GROUP)
	CMP #$01C0
	BCC @UNKNOWN4
	LDA #$0003
	STA $16
	LDA #$000E
	STA $02
	STA $0E
	LDX #$0008
	STX $10
@UNKNOWN4:
	LDX $10
	TXA
	JSL CHANGE_MUSIC
	JSL UNKNOWN_C04F47
	LDA $0E
	STA $02
	AND #$0004
	BEQ @UNKNOWN6
	LDY $12
	LDX $04
	LDA $14
	JSL SET_BATTLE_SWIRL_COLOUR
	LDA $02
	AND #$0008
	BEQ @UNKNOWN5
	LDX #$00FF
	LDA #$0010
	JSL SET_COLOUR_ADDSUB_MODE
	BRA @UNKNOWN6
@UNKNOWN5:
	LDX #$00BF
	LDA #$0010
	JSL SET_COLOUR_ADDSUB_MODE
@UNKNOWN6:
	LDY #$001E
	LDX $02
	LDA $16
	JSL UNKNOWN_C2E8C4
	LDA $02
	AND #$0004
	BEQ @UNKNOWN7
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0020
	STA .LOWORD(UNKNOWN_7EAEC8)
	BRA @UNKNOWN8
@UNKNOWN7:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$000F
	STA .LOWORD(UNKNOWN_7EAEC8)
@UNKNOWN8:
	STZ .LOWORD(UNKNOWN_7EAECB)
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL

UNKNOWN_C2E9C8: ;$C2E9C8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA .LOWORD(UNKNOWN_7EAEC2)
	AND #$00FF
	BEQ @UNKNOWN2
	LDA .LOWORD(UNKNOWN_7EAECA)
	AND #$00FF
	CLC
	SBC #$0004
	BVC @UNKNOWN0
	BPL @UNKNOWN2
	BRA @UNKNOWN1
@UNKNOWN0:
	BMI @UNKNOWN2
@UNKNOWN1:
	LDA #$0001
	BRA @UNKNOWN3
@UNKNOWN2:
	LDA #$0000
@UNKNOWN3:
	RTL

UNKNOWN_C2E9ED: ;$C2E9ED
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7EAEC2)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7EAEC9)
	AND #$00FF
	INC
	INC
	INC
	JSL UNKNOWN_C0AE34
	LDY #$0000
	TYX
	TYA
	JSL SET_BATTLE_SWIRL_COLOUR
	LDX #$0000
	TXA
	JSL SET_WINDOW_MASK
	RTL

UNKNOWN_C2EA15: ;$C2EA15
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 16
	TAY
	STY $0E
	TYA
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(UNKNOWN_7EAEEF)
	LDX #$0000
	REP #PROC_FLAGS::ACCUM8
	TXA
	JSL UNKNOWN_C4A67E
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0013
	STA .LOWORD(UNKNOWN_7EAEC8)
	LDY $0E
	REP #PROC_FLAGS::ACCUM8
	TYA
	CMP #$0002
	BEQ @UNKNOWN0
	CMP #$0001
	BEQ @UNKNOWN1
	BRA @UNKNOWN2
@UNKNOWN0:
	MOVE_INT_CONSTANT UNKNOWN_C3F819, .LOWORD(UNKNOWN_7EAECC)
	BRA @UNKNOWN3
@UNKNOWN1:
	MOVE_INT_CONSTANT $C4A5FA, .LOWORD(UNKNOWN_7EAECC)
	BRA @UNKNOWN3
@UNKNOWN2:
	MOVE_INT_CONSTANT $C4A5CE, .LOWORD(UNKNOWN_7EAECC)
@UNKNOWN3:
	PLD
	RTL

UNKNOWN_C2EA74: ;$C2EA74
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDX #$0000
	TXA
	JSL UNKNOWN_C4A67E
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0013
	STA .LOWORD(UNKNOWN_7EAEC8)
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7EAEEF)
	AND #$00FF
	BEQ @UNKNOWN0
	MOVE_INT_CONSTANT $C4A652, .LOWORD(UNKNOWN_7EAECC)
	BRA @UNKNOWN1
@UNKNOWN0:
	MOVE_INT_CONSTANT $C4A626, .LOWORD(UNKNOWN_7EAECC)
@UNKNOWN1:
	RTL

UNKNOWN_C2EAAA: ;$C2EAAA
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(UNKNOWN_7EAEC2)
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT_CONSTANT NULL, .LOWORD(UNKNOWN_7EAECC)
	LDA #$0003
	JSL UNKNOWN_C0AE34
	LDX #$0000
	TXA
	JSL SET_WINDOW_MASK
	RTL

UNKNOWN_C2EACF: ;$C2EACF
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA .LOWORD(UNKNOWN_7E1B9E)
	AND #$00FF
	BNE @UNKNOWN0
	LDA .LOWORD(UNKNOWN_7EAEC2)
	AND #$00FF
	BEQ @UNKNOWN1
@UNKNOWN0:
	LDA #$0001
	BRA @UNKNOWN2
@UNKNOWN1:
	LDA #$0000
@UNKNOWN2:
	RTL

;A = battler* battler
UNKNOWN_C2EAEA: ;$C2EAEA
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 42
	TAX
	STX $28
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EAAB2)
	STA .LOWORD(UNKNOWN_7EAAB6),X
	LDA .LOWORD(UNKNOWN_7EAAB4)
	OPTIMIZED_MULT $04, 80
	CLC
	ADC #.LOWORD(UNKNOWN_7EAAD6)
	STA $26
	LDX $28
	TXA
	DEC
	STA $04
	STA $28
	LDY #$0001
	STY $24
	TYA
	STA $02
	STA $22
	LDX #$0000
	STX $20
	JMP a:.LOWORD(@UNKNOWN1)
@UNKNOWN0:
	REP #PROC_FLAGS::ACCUM8
	TXA
	OPTIMIZED_MULT $04, 5
	STA $1E
	TAY
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00E0
	STA ($26),Y
	REP #PROC_FLAGS::ACCUM8
	LOADPTR UNKNOWN_C3F8B1, $06
	LDA $1E
	TAY
	INY
	TXA
	CLC
	ADC .LOWORD(UNKNOWN_7EAAB2)
	ASL
	PHA
	MOVE_INT $06, $0A
	PLA
	CLC
	ADC $0A
	STA $0A
	SEP #PROC_FLAGS::ACCUM8
	LDA [$0A]
	STA ($26),Y
	LDA #$0008
	PHA
	REP #PROC_FLAGS::ACCUM8
	TXA
	CLC
	ADC .LOWORD(UNKNOWN_7EAAB2)
	ASL
	CLC
	ADC $06
	STA $06
	LDA [$06]
	SEP #PROC_FLAGS::INDEX8
	PLY
	JSL ASR8_UNKNOWN1
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	CLC
	ADC $00
	CLC
	ADC #$0020
	PHA
	REP #PROC_FLAGS::ACCUM8
	LDA $1E
	REP #PROC_FLAGS::INDEX8
	TAY
	INY
	INY
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA ($26),Y
	REP #PROC_FLAGS::ACCUM8
	LDA $1E
	TAY
	INY
	INY
	INY
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00F0
	STA ($26),Y
	REP #PROC_FLAGS::ACCUM8
	LDA $1E
	TAY
	INY
	INY
	INY
	INY
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA ($26),Y
	LDX $20
	INX
	STX $20
@UNKNOWN1:
	CPX #$0010
	BCS @UNKNOWN2
	BEQ @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN2:
	REP #PROC_FLAGS::ACCUM8
	LDA $28
	STA $04
	OPTIMIZED_MULT $04, 5
	TAX
	INX
	INX
	INX
	INX
	LDA f:BATTLE_SPRITES_POINTERS,X
	AND #$00FF
	CMP #$0002
	BEQ @UNKNOWN4
	CMP #$0003
	BEQ @UNKNOWN5
	CMP #$0004
	BEQ @UNKNOWN6
	CMP #$0005
	BEQ @UNKNOWN7
	CMP #$0006
	BNE @UNKNOWN3
	JMP a:.LOWORD(@UNKNOWN8)
@UNKNOWN3:
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN4:
	LDA #$0002
	STA $02
	STA $22
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00E0
	LDY #$0003
	STA ($26),Y
	LDX $26
	STZ a:.LOWORD(RAM)+8,X
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN5:
	LDY #$0002
	STY $24
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00C0
	STA ($26)
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN6:
	LDY #$0002
	STY $24
	STY $02
	LDA $02
	STA $22
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00C0
	LDY #$0005
	STA ($26),Y
	STA ($26)
	LDA #$00E0
	LDY #$000D
	STA ($26),Y
	LDY #$0003
	STA ($26),Y
	LDA #$0000
	LDY #$0012
	STA ($26),Y
	LDY #$0008
	STA ($26),Y
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN7:
	.A16
	LDA #$0004
	STA $02
	STA $22
	LDY #$0002
	STY $24
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00C0
	LDY #$000F
	STA ($26),Y
	LDY #$000A
	STA ($26),Y
	LDY #$0005
	STA ($26),Y
	STA ($26)
	LDY #$0017
	STA ($26),Y
	LDY #$0003
	STA ($26),Y
	LDA #$00E0
	LDY #$001C
	STA ($26),Y
	LDY #$0008
	STA ($26),Y
	LDA #$0000
	LDY #$0021
	STA ($26),Y
	LDY #$000D
	STA ($26),Y
	LDA #$0020
	LDY #$0026
	STA ($26),Y
	LDY #$0012
	STA ($26),Y
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN8:
	LDY #$0004
	STY $24
	TYA
	STA $02
	STA $22
	SEP #PROC_FLAGS::ACCUM8
	LDA #$00A0
	LDY #$000F
	STA ($26),Y
	LDY #$000A
	STA ($26),Y
	LDY #$0005
	STA ($26),Y
	STA ($26)
	LDA #$00C0
	LDY #$0023
	STA ($26),Y
	LDY #$001E
	STA ($26),Y
	LDY #$0019
	STA ($26),Y
	LDY #$0014
	STA ($26),Y
	LDX $26
	STZ a:.LOWORD(RAM)+75,X
	LDX $26
	STZ a:.LOWORD(RAM)+70,X
	LDX $26
	STZ a:.LOWORD(RAM)+65,X
	LDX $26
	STZ a:.LOWORD(RAM)+60,X
	LDY #$003F
	STA ($26),Y
	LDY #$002B
	STA ($26),Y
	LDY #$0017
	STA ($26),Y
	LDY #$0003
	STA ($26),Y
	LDA #$00E0
	LDY #$0044
	STA ($26),Y
	LDY #$0030
	STA ($26),Y
	LDY #$001C
	STA ($26),Y
	LDY #$0008
	STA ($26),Y
	LDX $26
	STZ a:.LOWORD(RAM)+73,X
	LDX $26
	STZ a:.LOWORD(RAM)+53,X
	LDX $26
	STZ a:.LOWORD(RAM)+33,X
	LDX $26
	STZ a:.LOWORD(RAM)+13,X
	LDA #$0020
	LDY #$004E
	STA ($26),Y
	LDY #$003A
	STA ($26),Y
	LDY #$0026
	STA ($26),Y
	LDY #$0012
	STA ($26),Y
@UNKNOWN9:
	LDY $24
	REP #PROC_FLAGS::ACCUM8
	LDA $02
	JSL MULT16
	OPTIMIZED_MULT $04, 5
	TAY
	DEY
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0081
	STA ($26),Y
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(UNKNOWN_7EAAB4)
	OPTIMIZED_MULT $04, 80
	STA $1E
	LDA #$AC16
	STA $26
	LDA $1E
	CLC
	ADC #.LOWORD(UNKNOWN_7EAAD6)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #$0050
	LDA $1E
	CLC
	ADC $26
	JSL MEMCPY16
	LDA .LOWORD(UNKNOWN_7EAAB4)
	OPTIMIZED_MULT $04, 80
	CLC
	ADC $26
	STA $1E
	LDX #$0000
	BRA @UNKNOWN11
@UNKNOWN10:
	REP #PROC_FLAGS::ACCUM8
	TXA
	OPTIMIZED_MULT $04, 5
	STA $02
	INC $02
	INC $02
	LDA $1E
	CLC
	ADC $02
	STA $20
	SEP #PROC_FLAGS::ACCUM8
	LDA ($20)
	CLC
	ADC #$0008
	STA ($20)
	INX
@UNKNOWN11:
	CPX #$0010
	BCC @UNKNOWN10
	REP #PROC_FLAGS::ACCUM8
	LDA $22
	STA $02
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	TAX
	LDA $02
	STA .LOWORD(UNKNOWN_7EAAC6),X
	LDY $24
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	TAX
	TYA
	STA .LOWORD(UNKNOWN_7EAACE),X
	INC .LOWORD(UNKNOWN_7EAAB4)
	LOADPTR UNKNOWN_7F8000, $06
	MOVE_INT $06, $1A
	LOADPTR BATTLE_SPRITES_POINTERS, $0A
	LDA $28
	STA $04
	OPTIMIZED_MULT $04, 5
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $0E
	MOVE_INT $1A, $06
	MOVE_INT $06, $12
	JSL DECOMP
	MOVE_INT $06, $1A
	LDY $24
	LDA $02
	JSL MULT16
	TAY
	JMP a:.LOWORD(@UNKNOWN17)
@UNKNOWN12:
	LOADPTR UNKNOWN_7F0000, $0A
	LDA .LOWORD(UNKNOWN_7EAAB2)
	ASL
	TAX
	LDA f:UNKNOWN_C3F871,X
	CLC
	ADC $0A
	STA $0A
	INC .LOWORD(UNKNOWN_7EAAB2)
	LDA #$0000
	STA $20
	BRA @UNKNOWN16
@UNKNOWN13:
	MOVE_INT $0A, $06
	MOVE_INT $06, $16
	LDX #$0000
	BRA @UNKNOWN15
@UNKNOWN14:
	SEP #PROC_FLAGS::ACCUM8
	LDA [$1A]
	STA [$06]
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $1A, $06
	INC $06
	MOVE_INT $06, $1A
	MOVE_INT $16, $06
	INC $06
	MOVE_INT $06, $16
	INX
@UNKNOWN15:
	CPX #$0080
	BCC @UNKNOWN14
	LDA #$0200
	CLC
	ADC $0A
	STA $0A
	LDA $20
	INC
	STA $20
@UNKNOWN16:
	CMP #$0004
	BCC @UNKNOWN13
@UNKNOWN17:
	TYX
	DEY
	CPX #$0000
	BEQ @UNKNOWN18
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN18:
	PLD
	RTS

UNKNOWN_C2EEE7: ;$C2EEE7
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 30
	STZ .LOWORD(UNKNOWN_7EAAB4)
	STZ .LOWORD(UNKNOWN_7EAAB2)
	LOADPTR BTL_ENTRY_PTR_TABLE, $0A
	LDA .LOWORD(CURRENT_BATTLE_GROUP)
	ASL
	ASL
	ASL
	CLC
	ADC $0A
	STA $0A
	DEREFERENCE_PTR_TO $0A, $06
	MOVE_INT $06, $1A
	JMP a:.LOWORD(@UNKNOWN1)
@UNKNOWN0:
	LOADPTR ENEMY_CONFIGURATION_TABLE, $06
	MOVE_INT $06, $16
	MOVE_INT $1A, $0A
	INC $0A
	LDA [$0A]
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	STA $14
	CLC
	ADC #enemy_data::battle_sprite
	CLC
	ADC $06
	STA $06
	LDA [$06]
	TAY
	STY $12
	LDA $14
	CLC
	ADC #$0035
	MOVE_INTX $16, $06
	CLC
	ADC $06
	STA $06
	LDA [$06]
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	ASL
	PHA
	LOADPTR BATTLE_SPRITE_PALETTES, $06
	PLA
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0020
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC #$0300
	JSL MEMCPY16
	LDA .LOWORD(UNKNOWN_7EAAB4)
	ASL
	TAX
	LDA [$0A]
	STA .LOWORD(UNKNOWN_7EAABE),X
	LDY $12
	TYA
	JSR a:.LOWORD(UNKNOWN_C2EAEA)
	MOVE_INT $1A, $06
	LDA #$0003
	CLC
	ADC $06
	STA $06
	STA $1A
	LDA $08
	STA $1C
@UNKNOWN1:
	LDY #$0000
	LDA [$1A],Y
	AND #$00FF
	TAX
	CPX #$00FF
	BEQ @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN2:
	LDA .LOWORD(UNKNOWN_7EAAB2)
	CMP #$0010
	BCC @UNKNOWN3
	BEQ @UNKNOWN3
	LDX #$3000
	BRA @UNKNOWN4
@UNKNOWN3:
	LDX #$2000
@UNKNOWN4:
	LOADPTR UNKNOWN_7F0000, $0E
	LDY #$2000
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	JSL PREPARE_VRAM_COPY
	PLD
	RTL

GET_BATTLE_SPRITE_WIDTH: ;$C2EFFD
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	DEC
	OPTIMIZED_MULT $04, 5
	TAX
	INX
	INX
	INX
	INX
	LDA f:BATTLE_SPRITES_POINTERS,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN0
	CMP #$0003
	BEQ @UNKNOWN0
	CMP #$0002
	BEQ @UNKNOWN1
	CMP #$0004
	BEQ @UNKNOWN1
	CMP #$0005
	BEQ @UNKNOWN2
	CMP #$0006
	BEQ @UNKNOWN2
	BRA @UNKNOWN3
@UNKNOWN0:
	LDA #$0004
	BRA @UNKNOWN4
@UNKNOWN1:
	LDA #$0008
	BRA @UNKNOWN4
@UNKNOWN2:
	LDA #$0010
	BRA @UNKNOWN4
@UNKNOWN3:
	LDA #$0000
@UNKNOWN4:
	PLD
	RTS

GET_BATTLE_SPRITE_HEIGHT: ;$C2F04E
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 14
	DEC
	OPTIMIZED_MULT $04, 5
	TAX
	INX
	INX
	INX
	INX
	LDA f:BATTLE_SPRITES_POINTERS,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN0
	CMP #$0002
	BEQ @UNKNOWN0
	CMP #$0003
	BEQ @UNKNOWN1
	CMP #$0004
	BEQ @UNKNOWN1
	CMP #$0005
	BEQ @UNKNOWN1
	CMP #$0006
	BEQ @UNKNOWN2
	BRA @UNKNOWN3
@UNKNOWN0:
	LDA #$0004
	BRA @UNKNOWN4
@UNKNOWN1:
	LDA #$0008
	BRA @UNKNOWN4
@UNKNOWN2:
	LDA #$0010
	BRA @UNKNOWN4
@UNKNOWN3:
	LDA #$0000
@UNKNOWN4:
	PLD
	RTS

UNKNOWN_C2F09F: ;$C2F09F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TAX
	STX $10
	LDA #$0000
	STA $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	ASL
	PHA
	LDX $10
	TXA
	PLX
	CMP .LOWORD(UNKNOWN_7EAABE),X
	BNE @UNKNOWN1
	LDA $0E
	BRA @UNKNOWN3
@UNKNOWN1:
	LDA $0E
	INC
	STA $0E
@UNKNOWN2:
	CMP #$0004
	BCC @UNKNOWN0
	LDA #$0000
@UNKNOWN3:
	PLD
	RTS

UNKNOWN_C2F0D1: ;$C2F0D1
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDY #$0000
	STY $10
	TYX
	STX $0E
	BRA @UNKNOWN2
@UNKNOWN0:
	TXA
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7E9F8C),X
	LDY #.SIZEOF(enemy_data)
	JSL MULT168
	CLC
	ADC #enemy_data::battle_sprite
	TAX
	LDA f:ENEMY_CONFIGURATION_TABLE,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_WIDTH)
	STA $02
	LDY $10
	TYA
	CLC
	ADC $02
	TAY
	STY $10
	CPY #$0020
	BCC @UNKNOWN1
	BEQ @UNKNOWN1
	LDX $0E
	STX .LOWORD(ENEMIES_IN_BATTLE)
	BRA @UNKNOWN3
@UNKNOWN1:
	LDX $0E
	INX
	STX $0E
@UNKNOWN2:
	CPX .LOWORD(ENEMIES_IN_BATTLE)
	BCC @UNKNOWN0
@UNKNOWN3:
	PLD
	RTL

UNKNOWN_C2F121: ;$C2F121
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 39
	STZ .LOWORD(UNKNOWN_7EAEF2)
	STZ .LOWORD(UNKNOWN_7EAEF0)
	LDX #$0008
	STX $25
	JMP a:.LOWORD(@UNKNOWN10)
@UNKNOWN0:
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAY
	STY $23
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,Y
	AND #$00FF
	BNE @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN1:
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,Y
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN2:
	LDA .LOWORD(BATTLERS_TABLE),Y
	JSR a:.LOWORD(UNKNOWN_C2F09F)
	SEP #PROC_FLAGS::ACCUM8
	LDY $23
	STA .LOWORD(BATTLERS_TABLE)+battler::sprite_y,Y
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(BATTLERS_TABLE)+battler::row,Y
	AND #$00FF
	STA $21
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,Y
	JSR a:.LOWORD(GET_BATTLE_SPRITE_WIDTH)
	STA $02
	LDA $21
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EAEF0),X
	BEQ @UNKNOWN3
	INC $02
@UNKNOWN3:
	LDA $21
	ASL
	CLC
	ADC #.LOWORD(UNKNOWN_7EAEF0)
	TAY
	LDA a:.LOWORD(RAM),Y
	CLC
	ADC $02
	CMP #$001E
	BEQ @UNKNOWN4
	BCS @UNKNOWN5
@UNKNOWN4:
	STA a:.LOWORD(RAM),Y
	BRA @UNKNOWN9
@UNKNOWN5:
	LDA #$0001
	SEC
	SBC $21
	STA $23
	LDX $25
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_WIDTH)
	STA $02
	LDA $23
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EAEF0),X
	BEQ @UNKNOWN6
	INC $02
@UNKNOWN6:
	LDA $23
	ASL
	CLC
	ADC #.LOWORD(UNKNOWN_7EAEF0)
	TAY
	STY $1F
	LDA a:.LOWORD(RAM),Y
	CLC
	ADC $02
	CMP #$001E
	BEQ @UNKNOWN7
	BCS @UNKNOWN8
@UNKNOWN7:
	LDX $25
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA $23
	SEP #PROC_FLAGS::ACCUM8
	STA .LOWORD(BATTLERS_TABLE)+battler::row,X
	LDY $1F
	REP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),Y
	CLC
	ADC $02
	STA a:.LOWORD(RAM),Y
	BRA @UNKNOWN9
@UNKNOWN8:
	LDA #$0000
	JMP a:.LOWORD(@UNKNOWN60)
@UNKNOWN9:
	LDX $25
	INX
	STX $25
@UNKNOWN10:
	CPX #$0020
	BCS @UNKNOWN11
	BEQ @UNKNOWN11
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN11:
	;TODO: why 8?
	LDA .LOWORD(BATTLERS_TABLE)+8*.SIZEOF(battler)+16
	AND #$00FF
	STA $23
	LDA #$0020
	STA $1D
	STA $1B
	LDX #$0008
	STX $1F
	JMP a:.LOWORD(@UNKNOWN21)
@UNKNOWN12:
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAY
	STY $21
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,Y
	AND #$00FF
	BNE @UNKNOWN13
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN13:
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,Y
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN14
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN14:
	LDA .LOWORD(BATTLERS_TABLE)+16,Y
	AND #$00FF
	CMP $23
	BEQ @UNKNOWN15
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN15:
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,Y
	JSR a:.LOWORD(GET_BATTLE_SPRITE_WIDTH)
	LSR
	STA $19
	LDA $1B
	CMP $1D
	BNE @UNKNOWN17
	LDA $1B
	SEP #PROC_FLAGS::ACCUM8
	LDY $21
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,Y
	REP #PROC_FLAGS::ACCUM8
	LDA $1B
	SEC
	SBC $19
	STA $1B
	LDA $1D
	CLC
	ADC $19
	STA $1D
	JSR a:.LOWORD(RAND_LONG)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	AND #$0001
	BEQ @UNKNOWN16
	LDA $1B
	STA $04
	STA $17
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN16:
	LDA $1D
	STA $04
	STA $17
	JMP a:.LOWORD(@UNKNOWN20)
@UNKNOWN17:
	LDA #$0020
	SEC
	SBC $1B
	STA $21
	LDA $1D
	SEC
	SBC #$0020
	STA $02
	LDA $21
	CMP $02
	BCC @UNKNOWN18
	CMP $02
	BNE @UNKNOWN19
	JSR a:.LOWORD(RAND_LONG)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	AND #$0001
	BEQ @UNKNOWN19
@UNKNOWN18:
	LDA $19
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	REP #PROC_FLAGS::ACCUM8
	LDA $1B
	SEP #PROC_FLAGS::ACCUM8
	SEC
	SBC $00
	DEC
	STA $16
	LDX $1F
	REP #PROC_FLAGS::ACCUM8
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA $16
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	SEC
	SBC $19
	STA $1B
	BRA @UNKNOWN20
@UNKNOWN19:
	LDA $19
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	REP #PROC_FLAGS::ACCUM8
	LDA $1D
	SEP #PROC_FLAGS::ACCUM8
	CLC
	ADC $00
	INC
	STA $16
	LDX $1F
	REP #PROC_FLAGS::ACCUM8
	TXA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA $16
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CLC
	ADC $19
	STA $1D
@UNKNOWN20:
	LDX $1F
	INX
	STX $1F
@UNKNOWN21:
	CPX #$0020
	BCS @UNKNOWN22
	BEQ @UNKNOWN22
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN22:
	LDA $17
	STA $04
	LDY $04
	STY $25
	TYX
	STX $14
	LDA #$0008
	STA $02
	STA $1F
	JMP a:.LOWORD(@UNKNOWN32)
@UNKNOWN23:
	LDA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	STA $04
	LDX $04
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BNE @UNKNOWN24
	JMP a:.LOWORD(@UNKNOWN31)
@UNKNOWN24:
	LDX $04
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN25
	JMP a:.LOWORD(@UNKNOWN31)
@UNKNOWN25:
	LDX $04
	LDA .LOWORD(BATTLERS_TABLE)+16,X
	AND #$00FF
	CMP $23
	BNE @UNKNOWN26
	JMP a:.LOWORD(@UNKNOWN31)
@UNKNOWN26:
	LDX $04
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_WIDTH)
	LSR
	STA $12
	LDY $25
	STY $02
	LDX $14
	TXA
	CMP $02
	BNE @UNKNOWN27
	TXA
	SEP #PROC_FLAGS::ACCUM8
	LDX $04
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	LDX $14
	REP #PROC_FLAGS::ACCUM8
	TXA
	SEC
	SBC $12
	TAX
	STX $14
	TYA
	CLC
	ADC $12
	TAY
	STY $25
	JMP a:.LOWORD(@UNKNOWN31)
@UNKNOWN27:
	CPY #$0020
	BCC @UNKNOWN30
	BEQ @UNKNOWN30
	CPX #$0020
	BEQ @UNKNOWN28
	BCS @UNKNOWN29
@UNKNOWN28:
	STX $04
	LDA #$0020
	SEC
	SBC $04
	STA $17
	TYA
	SEC
	SBC #$0020
	STA $04
	LDA $17
	CMP $04
	BCC @UNKNOWN29
	CMP $04
	BNE @UNKNOWN30
	JSR a:.LOWORD(RAND_LONG)
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	AND #$0001
	BEQ @UNKNOWN30
@UNKNOWN29:
	LDA $12
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	LDX $14
	REP #PROC_FLAGS::ACCUM8
	TXA
	SEP #PROC_FLAGS::ACCUM8
	SEC
	SBC $00
	DEC
	STA $16
	REP #PROC_FLAGS::ACCUM8
	LDA $1F
	STA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA $16
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	SEC
	SBC $12
	TAX
	STX $14
	BRA @UNKNOWN31
@UNKNOWN30:
	LDA $12
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	LDY $25
	REP #PROC_FLAGS::ACCUM8
	TYA
	SEP #PROC_FLAGS::ACCUM8
	CLC
	ADC $00
	INC
	STA $16
	REP #PROC_FLAGS::ACCUM8
	LDA $1F
	STA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA $16
	STA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	CLC
	ADC $12
	TAY
	STY $25
@UNKNOWN31:
	LDA $1F
	STA $02
	INC $02
	LDA $02
	STA $1F
@UNKNOWN32:
	LDA $02
	CMP #$0020
	BCS @UNKNOWN33
	BEQ @UNKNOWN33
	JMP a:.LOWORD(@UNKNOWN23)
@UNKNOWN33:
	LDA $23
	CMP #$0001
	BNE @UNKNOWN37
	LDY $25
	STY $02
	LDX $14
	TXA
	CMP $02
	BNE @UNKNOWN37
	LDA #$0008
	STA $02
	BRA @UNKNOWN36
@UNKNOWN34:
	LDA $02
	LDY #.SIZEOF(battler)
	JSL MULT168
	STA $17
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN35
	LDA $17
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN35
	LDA $17
	TAX
	SEP #PROC_FLAGS::ACCUM8
	STZ .LOWORD(BATTLERS_TABLE)+battler::row,X
@UNKNOWN35:
	REP #PROC_FLAGS::ACCUM8
	INC $02
@UNKNOWN36:
	LDA $02
	CMP #$0020
	BCC @UNKNOWN34
@UNKNOWN37:
	LDX $14
	CPX $1B
	BCS @UNKNOWN38
	STX $1B
@UNKNOWN38:
	LDY $25
	CPY $1D
	BCC @UNKNOWN39
	BEQ @UNKNOWN39
	STY $1D
@UNKNOWN39:
	LDA $1B
	CLC
	ADC $1D
	LSR
	STA $02
	LDA #$0020
	SEC
	SBC $02
	SEC
	SBC #$0010
	TAY
	STY $1B
	LDA #$0008
	STA $14
	BRA @UNKNOWN43
@UNKNOWN40:
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	STX $19
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN42
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN42
	TXA
	CLC
	ADC #.LOWORD(BATTLERS_TABLE) + battler::initiative
	STA $02
	LDY $1B
	SEP #PROC_FLAGS::INDEX8
	STY $00
	REP #PROC_FLAGS::INDEX8
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	CLC
	ADC $00
	ASL
	ASL
	ASL
	LDX $02
	STA a:.LOWORD(RAM),X
	LDX $19
	REP #PROC_FLAGS::ACCUM8
	LDA .LOWORD(BATTLERS_TABLE)+battler::row,X
	AND #$00FF
	BEQ @UNKNOWN41
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0080
	STA .LOWORD(BATTLERS_TABLE)+69,X
	BRA @UNKNOWN42
@UNKNOWN41:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0090
	STA .LOWORD(BATTLERS_TABLE)+69,X
@UNKNOWN42:
	REP #PROC_FLAGS::ACCUM8
	LDA $14
	INC
	STA $14
@UNKNOWN43:
	CMP #$0020
	BCC @UNKNOWN40
	LDA .LOWORD(CURRENT_BATTLE_GROUP)
	CMP #$01DB
	BNE @UNKNOWN44
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0080
	STA .LOWORD(BATTLERS_TABLE)+8*.SIZEOF(battler)+battler::initiative
	STA .LOWORD(BATTLERS_TABLE)+8*.SIZEOF(battler)+69
	LDA #$00C8
	STA .LOWORD(BATTLERS_TABLE)+9*.SIZEOF(battler)+battler::initiative
	LDA #$0090
	STA .LOWORD(BATTLERS_TABLE)+9*.SIZEOF(battler)+69
@UNKNOWN44:
	REP #PROC_FLAGS::ACCUM8
	STZ $21
	LDA #$0000
	STA $04
	JMP a:.LOWORD(@UNKNOWN57)
@UNKNOWN45:
	LDA $04
	REP #PROC_FLAGS::INDEX8
	LDY #.SIZEOF(battler)
	JSL MULT168
	CLC
	ADC #.LOWORD(BATTLERS_TABLE) + (.SIZEOF(battler) * 8)
	TAY
	STY $19
	LDA $04
	INC
	STA $1B
	JMP a:.LOWORD(@UNKNOWN55)
@UNKNOWN46:
	LDA $1B
	REP #PROC_FLAGS::INDEX8
	LDY #.SIZEOF(battler)
	JSL MULT168
	CLC
	ADC #.LOWORD(BATTLERS_TABLE)+8*.SIZEOF(battler)
	STA $23
	LDY $19
	LDA a:.LOWORD(RAM),Y
	CMP ($23)
	BEQ @UNKNOWN47
	JMP a:.LOWORD(@UNKNOWN54)
@UNKNOWN47:
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM)+11,Y
	LDY #$000B
	CMP ($23),Y
	BCS @UNKNOWN48
	LDY $19
	LDA a:.LOWORD(RAM)+69,Y
	STA $00
	LDY #$0045
	LDA ($23),Y
	STA $16
	STA $01
	LDA $00
	CMP $01
	BCC @UNKNOWN53
	LDA $16
	PHA
	LDA $00
	SEP #PROC_FLAGS::INDEX8
	PLX
	STX $00
	CMP $00
	BNE @UNKNOWN48
	REP #PROC_FLAGS::INDEX8
	LDY $19
	LDA a:.LOWORD(RAM)+68,Y
	LDY #$0044
	CMP ($23),Y
	BEQ @UNKNOWN48
	BCS @UNKNOWN53
@UNKNOWN48:
	REP #PROC_FLAGS::INDEX8
	LDY $19
	LDA a:.LOWORD(RAM)+11,Y
	LDY #$000B
	CMP ($23),Y
	BEQ @UNKNOWN49
	BCS @UNKNOWN50
@UNKNOWN49:
	JMP a:.LOWORD(@UNKNOWN54)
@UNKNOWN50:
	LDY $19
	LDA a:.LOWORD(RAM)+69,Y
	STA $00
	LDY #$0045
	LDA ($23),Y
	STA $16
	STA $01
	LDA $00
	CMP $01
	BEQ @UNKNOWN51
	BCS @UNKNOWN53
@UNKNOWN51:
	LDA $16
	PHA
	LDA $00
	SEP #PROC_FLAGS::INDEX8
	PLX
	STX $00
	CMP $00
	BEQ @UNKNOWN52
	JMP a:.LOWORD(@UNKNOWN54)
@UNKNOWN52:
	REP #PROC_FLAGS::INDEX8
	LDY $19
	LDA a:battler::initiative,Y
	LDY #$0044
	CMP ($23),Y
	BCC @UNKNOWN53
	JMP a:.LOWORD(@UNKNOWN54)
@UNKNOWN53:
	REP #PROC_FLAGS::ACCUM8
	LDA #$0001
	STA $21
	LDY $19
	TYA
	CLC
	ADC #$000B
	TAX
	STX $14
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	STA $12
	LDA $23
	CLC
	ADC #$000B
	STA $02
	LDX $02
	SEP #PROC_FLAGS::ACCUM8
	LDA a:.LOWORD(RAM),X
	LDX $14
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	LDA $12
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA a:.LOWORD(RAM),X
	STA $00
	LDX $14
	LDA a:.LOWORD(RAM),X
	CMP $00
	BCC @UNKNOWN54
	BEQ @UNKNOWN54
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(BATTLERS_TABLE) + ((BATTLER_COUNT - 1) * .SIZEOF(battler))
	STA $02
	TYA
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(battler)
	LDA $02
	JSL MEMCPY16
	LDA $23
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(battler)
	LDY $19
	TYA
	JSL MEMCPY16
	LDA $02
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $0E
	LDX #.SIZEOF(battler)
	LDA $23
	JSL MEMCPY16
@UNKNOWN54:
	REP #PROC_FLAGS::ACCUM8
	INC $1B
@UNKNOWN55:
	LDA .LOWORD(ENEMIES_IN_BATTLE)
	CMP $1B
	BEQ @UNKNOWN56
	BCC @UNKNOWN56
	JMP a:.LOWORD(@UNKNOWN46)
@UNKNOWN56:
	INC $04
@UNKNOWN57:
	LDA .LOWORD(ENEMIES_IN_BATTLE)
	DEC
	STA $02
	LDA $04
	CMP $02
	BCS @UNKNOWN58
	BEQ @UNKNOWN58
	JMP a:.LOWORD(@UNKNOWN45)
@UNKNOWN58:
	LDA $21
	BEQ @UNKNOWN59
	JMP a:.LOWORD(@UNKNOWN44)
@UNKNOWN59:
	SEP #PROC_FLAGS::ACCUM8
	STZ $0E
	REP #PROC_FLAGS::INDEX8
	LDX #.SIZEOF(battler)
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(BATTLERS_TABLE) + 31 * .SIZEOF(battler)
	JSL MEMSET16
	LDA #$0000
@UNKNOWN60:
	PLD
	RTL

UNKNOWN_C2F724: ;$C2F724
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 24
	STA $16
	LDA #.LOWORD(BATTLERS_TABLE) + .SIZEOF(battler) * 8
	STA $02
	LDA #$0008
	STA $04
	STA $14
	JMP a:.LOWORD(@UNKNOWN12)
@UNKNOWN0:
	LDX $02
	LDA a:battler::consciousness,X
	AND #$00FF
	BNE @UNKNOWN1
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN1:
	LDX $02
	LDA a:battler::afflictions + STATUS_GROUP::PERSISTENT_EASYHEAL,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN2:
	LDX $02
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN3
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN3:
	LDX $02
	LDA a:battler::row,X
	AND #$00FF
	CMP $16
	BEQ @UNKNOWN4
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN4:
	LDX $02
	LDA a:battler::sprite,X
	BNE @UNKNOWN5
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN5:
	LDA $02
	CLC
	ADC #$0048
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BEQ @UNKNOWN6
	SEP #PROC_FLAGS::ACCUM8
	DEC
	STA a:.LOWORD(RAM),X
	LDY #$0003
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	JSL DIVISION16
	AND #$0001
	BEQ @UNKNOWN6
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN6:
	LDA $02
	CLC
	ADC #$0049
	TAX
	LDA a:.LOWORD(RAM),X
	AND #$00FF
	BEQ @UNKNOWN7
	SEP #PROC_FLAGS::ACCUM8
	DEC
	STA a:.LOWORD(RAM),X
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	AND #$0004
	BNE @UNKNOWN7
	LDX $02
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD98)
	TAY
	LDX $02
	LDA a:battler::initiative,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD96)
	TAX
	STX $12
	LDX $02
	LDA a:battler::sprite_y,X
	AND #$00FF
	OPTIMIZED_MULT $04, 80
	CLC
	ADC #$AC16
	LDX $12
	JSL UNKNOWN_C08CD5
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN7:
	LDX $02
	LDA a:battler::id2,X
	AND #$00FF
	BEQ @UNKNOWN8
	LDX $02
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD98)
	TAY
	LDX $02
	LDA a:battler::initiative,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD96)
	TAX
	STX $10
	LDX $02
	LDA a:battler::sprite_y,X
	AND #$00FF
	OPTIMIZED_MULT $04, 80
	CLC
	ADC #$AC16
	LDX $10
	JSL UNKNOWN_C08CD5
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN8:
	LDA .LOWORD(UNKNOWN_7EADA2)
	BEQ @UNKNOWN10
	LDX $02
	LDA a:.LOWORD(RAM)+74,X
	AND #$00FF
	BEQ @UNKNOWN9
	LDA a:.LOWORD(UNKNOWN_7E0002)
	AND #$00FF
	AND #$0008
	BEQ @UNKNOWN10
@UNKNOWN9:
	LDX $02
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD98)
	TAY
	LDX $02
	LDA a:battler::initiative,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD96)
	TAX
	STX $12
	LDX $02
	LDA a:battler::sprite_y,X
	AND #$00FF
	OPTIMIZED_MULT $04, 80
	CLC
	ADC #$AC16
	LDX $12
	JSL UNKNOWN_C08CD5
	BRA @UNKNOWN11
@UNKNOWN10:
	LDX $02
	LDA a:.LOWORD(RAM)+69,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD98)
	TAY
	LDX $02
	LDA a:battler::initiative,X
	AND #$00FF
	SEC
	SBC .LOWORD(UNKNOWN_7EAD96)
	TAX
	STX $0E
	LDX $02
	LDA a:battler::sprite_y,X
	AND #$00FF
	OPTIMIZED_MULT $04, 80
	CLC
	ADC #.LOWORD(UNKNOWN_7EAAD6)
	LDX $0E
	JSL UNKNOWN_C08CD5
@UNKNOWN11:
	LDA $02
	CLC
	ADC #.SIZEOF(battler)
	STA $02
	LDA $14
	STA $04
	INC $04
	LDA $04
	STA $14
@UNKNOWN12:
	LDA $04
	CMP #$0020
	BCS @UNKNOWN13
	BEQ @UNKNOWN13
	JMP a:.LOWORD(@UNKNOWN0)
@UNKNOWN13:
	PLD
	RTS

UNKNOWN_C2F8F9: ;$C2F8F9
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA #$007E
	JSL UNKNOWN_C088A5
	JSL OAM_CLEAR
	LDA #$0000
	JSR a:.LOWORD(UNKNOWN_C2F724)
	LDA #$0001
	JSR a:.LOWORD(UNKNOWN_C2F724)
	JSL UNKNOWN_C08B19_ENTRY_POINT_2
	RTL

UNKNOWN_C2F917: ;$C2F917
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 20
	STZ .LOWORD(UNKNOWN_7EAD58)
	STZ .LOWORD(UNKNOWN_7EAD56)
	LDA #$0008
	STA $12
	BRA @UNKNOWN3
@UNKNOWN0:
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN2
	LDA .LOWORD(BATTLERS_TABLE)+battler::afflictions,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN2
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN2
	LDA .LOWORD(BATTLERS_TABLE)+battler::row,X
	AND #$00FF
	BEQ @UNKNOWN1
	INC .LOWORD(UNKNOWN_7EAD58)
	BRA @UNKNOWN2
@UNKNOWN1:
	INC .LOWORD(UNKNOWN_7EAD56)
@UNKNOWN2:
	LDA $12
	INC
	STA $12
@UNKNOWN3:
	CMP #$0020
	BCC @UNKNOWN0
	STZ $10
	LDA #$0000
	STA $02
	JMP a:.LOWORD(@UNKNOWN9)
@UNKNOWN4:
	LDA #$FFFF
	STA $04
	LDY #$0008
	STY $12
	BRA @UNKNOWN8
@UNKNOWN5:
	TYA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN7
	LDA .LOWORD(BATTLERS_TABLE)+battler::afflictions,X
	AND #$00FF
	CMP #$0001
	BEQ @UNKNOWN7
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN7
	LDA .LOWORD(BATTLERS_TABLE)+battler::row,X
	AND #$00FF
	BNE @UNKNOWN7
	LDA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	AND #$00FF
	CMP $10
	BCC @UNKNOWN7
	BEQ @UNKNOWN7
	CMP $04
	BEQ @UNKNOWN6
	BCS @UNKNOWN7
@UNKNOWN6:
	LDY $12
	STY $0E
	STA $04
@UNKNOWN7:
	LDY $12
	INY
	STY $12
@UNKNOWN8:
	CPY #$0020
	BCC @UNKNOWN5
	LDA $0E
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD7A),X
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LSR
	LSR
	LSR
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD5A),X
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_HEIGHT)
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	LDA #$0012
	SEC
	SBC $00
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD62),X
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	STA $10
	INC $02
@UNKNOWN9:
	LDA $02
	CMP .LOWORD(UNKNOWN_7EAD56)
	BCS @UNKNOWN10
	BEQ @UNKNOWN10
	JMP a:.LOWORD(@UNKNOWN4)
@UNKNOWN10:
	STZ $10
	LDA #$0000
	STA $02
	JMP a:.LOWORD(@UNKNOWN16)
@UNKNOWN11:
	LDA #$FFFF
	STA $04
	LDY #$0008
	STY $12
	BRA @UNKNOWN15
@UNKNOWN12:
	TYA
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::consciousness,X
	AND #$00FF
	BEQ @UNKNOWN14
	LDA .LOWORD(BATTLERS_TABLE)+battler::afflictions,X
	AND #$00FF
	CMP #STATUS_0::UNCONSCIOUS
	BEQ @UNKNOWN14
	LDA .LOWORD(BATTLERS_TABLE)+battler::ally_or_enemy,X
	AND #$00FF
	CMP #$0001
	BNE @UNKNOWN14
	LDA .LOWORD(BATTLERS_TABLE)+battler::row,X
	AND #$00FF
	BEQ @UNKNOWN14
	LDA .LOWORD(BATTLERS_TABLE)+battler::initiative,X
	AND #$00FF
	CMP $10
	BCC @UNKNOWN14
	BEQ @UNKNOWN14
	CMP $04
	BEQ @UNKNOWN13
	BCS @UNKNOWN14
@UNKNOWN13:
	LDY $12
	STY $0E
	STA $04
@UNKNOWN14:
	LDY $12
	INY
	STY $12
@UNKNOWN15:
	CPY #$0020
	BCC @UNKNOWN12
	LDA $0E
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD82),X
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	LSR
	LSR
	LSR
	SEP #PROC_FLAGS::ACCUM8
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD6A),X
	REP #PROC_FLAGS::ACCUM8
	LDA $0E
	LDY #.SIZEOF(battler)
	JSL MULT168
	TAX
	LDA .LOWORD(BATTLERS_TABLE)+battler::sprite,X
	JSR a:.LOWORD(GET_BATTLE_SPRITE_HEIGHT)
	SEP #PROC_FLAGS::ACCUM8
	STA $00
	LDA #$0010
	SEC
	SBC $00
	LDX $02
	STA .LOWORD(UNKNOWN_7EAD72),X
	REP #PROC_FLAGS::ACCUM8
	LDA $04
	STA $10
	INC $02
@UNKNOWN16:
	LDA $02
	CMP .LOWORD(UNKNOWN_7EAD58)
	BCS @UNKNOWN17
	BEQ @UNKNOWN17
	JMP a:.LOWORD(@UNKNOWN11)
@UNKNOWN17:
	PLD
	RTL

UNKNOWN_C2FAD2: ;$C2FAD2
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	LDA #$0001
	RTL

UNKNOWN_C2FAD8: ;$C2FAD8
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	STA .LOWORD(UNKNOWN_7EB37C)
	RTL

UNKNOWN_C2FADE: ;$C2FADE
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	TXY
	TAX
	STX .LOWORD(UNKNOWN_7EB37C)
	TYA
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EB37C)
	STA .LOWORD(UNKNOWN_7EAEF4),X
	LDX #$0000
	STX $10
	BRA @UNKNOWN1
@UNKNOWN0:
	STX $02
	TYA
	OPTIMIZED_MULT $04, 48
	CLC
	ADC $02
	ASL
	STA $0E
	CLC
	ADC #.LOWORD(UNKNOWN_7EAEFC)
	STA $02
	LDX $02
	LDA a:.LOWORD(RAM),X
	EOR #$FFFF
	INC
	LDX $02
	STA a:.LOWORD(RAM),X
	LDA $0E
	TAX
	STZ $B07C,X
	LDX $10
	INX
	STX $10
@UNKNOWN1:
	CPX #$0030
	BCC @UNKNOWN0
	PLD
	RTL

UNKNOWN_C2FB35: ;$C2FB35
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 28
	STY $1A
	STX $04
	STX $18
	STA $16
	LDX $2A
	STX $14
	LSR
	LSR
	LSR
	LSR
	ASL
	TAX
	LDA .LOWORD(UNKNOWN_7EB37C)
	STA .LOWORD(UNKNOWN_7EAEF4),X
	LDA $16
	ASL
	TAX
	LDA $0380,X
	STA $12
	AND #$001F
	STA $02
	LDA $12
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #$001F
	TAX
	STX $10
	SEP #PROC_FLAGS::ACCUM8
	LDA #$000A
	SEP #PROC_FLAGS::INDEX8
	TAY
	REP #PROC_FLAGS::ACCUM8
	LDA $12
	JSL ASR8_UNKNOWN1
	AND #$001F
	STA $0E
	LDA $04
	CMP $02
	BCC @UNKNOWN0
	BEQ @UNKNOWN0
	LDA $16
	OPTIMIZED_MULT $04, 6
	STA $12
	LDA $18
	STA $04
	SEC
	SBC $02
	REP #PROC_FLAGS::INDEX8
	LDY #.LOWORD(UNKNOWN_7EB082) + 378
	STA ($12),Y
	LDA #$0001
	LDY #.LOWORD(UNKNOWN_7EAEFC)
	STA ($12),Y
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA $04
	CMP $02
	BNE @UNKNOWN1
	LDA $16
	OPTIMIZED_MULT $04, 6
	REP #PROC_FLAGS::INDEX8
	TAX
	STZ .LOWORD(UNKNOWN_7EAEFC),X
	BRA @UNKNOWN2
@UNKNOWN1:
	LDA $16
	OPTIMIZED_MULT $04, 6
	STA $12
	LDA $18
	STA $04
	LDA $02
	SEC
	SBC $04
	REP #PROC_FLAGS::INDEX8
	LDY #.LOWORD(UNKNOWN_7EB082) + 378
	STA ($12),Y
	LDA #$FFFF
	LDY #.LOWORD(UNKNOWN_7EAEFC)
	STA ($12),Y
@UNKNOWN2:
	LDX $10
	STX $02
	LDY $1A
	TYA
	CMP $02
	BCC @UNKNOWN3
	BEQ @UNKNOWN3
	LDA $16
	OPTIMIZED_MULT $04, 6
	STA $02
	STX $04
	TYA
	SEC
	SBC $04
	LDX $02
	STA .LOWORD(UNKNOWN_7EB1FE),X
	LDA #$0020
	LDX $02
	STA .LOWORD(UNKNOWN_7EAEFE),X
	BRA @UNKNOWN5
@UNKNOWN3:
	STX $02
	TYA
	CMP $02
	BNE @UNKNOWN4
	LDA $16
	OPTIMIZED_MULT $04, 6
	TAX
	STZ .LOWORD(UNKNOWN_7EAEFE),X
	BRA @UNKNOWN5
@UNKNOWN4:
	LDA $16
	OPTIMIZED_MULT $04, 6
	STA $02
	STY $04
	TXA
	SEC
	SBC $04
	LDX $02
	STA .LOWORD(UNKNOWN_7EB1FE),X
	LDA #$FFE0
	LDX $02
	STA .LOWORD(UNKNOWN_7EAEFE),X
@UNKNOWN5:
	LDA $14
	CMP $0E
	BCC @UNKNOWN6
	BEQ @UNKNOWN6
	LDA $16
	OPTIMIZED_MULT $04, 6
	TAX
	LDA $14
	SEC
	SBC $0E
	STA .LOWORD(UNKNOWN_7EB200),X
	LDA #$0400
	STA .LOWORD(UNKNOWN_7EAF00),X
	BRA @UNKNOWN8
@UNKNOWN6:
	LDA $14
	CMP $0E
	BNE @UNKNOWN7
	LDA $16
	OPTIMIZED_MULT $04, 6
	TAX
	STZ .LOWORD(UNKNOWN_7EAF00),X
	BRA @UNKNOWN8
@UNKNOWN7:
	LDA $16
	OPTIMIZED_MULT $04, 6
	TAX
	LDA $0E
	SEC
	SBC $14
	STA .LOWORD(UNKNOWN_7EB200),X
	LDA #$FC00
	STA .LOWORD(UNKNOWN_7EAF00),X
@UNKNOWN8:
	LDA $16
	OPTIMIZED_MULT $04, 6
	TAX
	STZ .LOWORD(UNKNOWN_7EAF02) + 382,X
	STZ .LOWORD(UNKNOWN_7EAF02) + 380,X
	STZ .LOWORD(UNKNOWN_7EAF02) + 378,X
	PLD
	RTL

.INCLUDE "unknown/C2/C2FCA6.asm"

.INCLUDE "unknown/C2/C2FD99.asm"

.INCLUDE "unknown/C2/C2FEF9.asm"

.INCLUDE "unknown/C2/C2FF9A.asm"

.INCLUDE "data/events/scripts/000.asm"
