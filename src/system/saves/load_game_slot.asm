
LOAD_GAME_SLOT: ;$EF0A68
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 32
	LDY #$0A00
	JSL MULT16
	STA $06
	STZ $08
	CLC
	VAR_ADD_CONST_INT_ASSIGN SAVE_BASE + .SIZEOF(save_header), $06
	MOVE_INT $06, $1C
	LDA #.LOWORD(GAME_STATE)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	TDC
	CLC
	ADC #$0018
	TAX
	STX $1A
	LDA #$007E
	STA a:.LOWORD(RAM),X
	MOVE_INT $16, $06
	MOVE_INT $06, $0E
	MOVE_INT $1C, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(game_state)
	JSL MEMCPY24
	LDA #.SIZEOF(game_state)
	CLC
	ADC $06
	STA $06
	STA $1C
	LDA $08
	STA $1E
	LDA #.LOWORD(CHAR_STRUCT)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	LDA #$007E
	LDX $1A
	STA a:.LOWORD(RAM),X
	MOVE_INT $16, $06
	MOVE_INT $06, $0E
	MOVE_INT $1C, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(char_struct)*6
	JSL MEMCPY24
	LDA #.SIZEOF(char_struct)*6
	CLC
	ADC $06
	STA $06
	STA $1C
	LDA $08
	STA $1E
	LDA #.LOWORD(EVENT_FLAG)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	LDA #$007E
	LDX $1A
	STA a:.LOWORD(RAM),X
	MOVE_INT $16, $06
	MOVE_INT $06, $0E
	MOVE_INT $1C, $06
	MOVE_INT $06, $12
	LDA #$0080
	JSL MEMCPY24
	MOVE_INT .LOWORD(GAME_STATE) + game_state::timer, $06
	MOVE_INT $06, a:.LOWORD(TIMER)
	PLD
	RTL
