
SAVE_GAME_BLOCK: ;$EF088F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 34
	TAY
	STY $20
@UNKNOWN0:
	MOVE_INT a:.LOWORD(TIMER), $06
	MOVE_INT $06, .LOWORD(GAME_STATE)+game_state::timer
	LDY $20
	TYA
	LDY #$0500
	JSL MULT16
	STA $0A
	STZ $0C
	MOVE_INT $0A, $06
	CLC
	LDA $06
	ADC #$6020
	STA $06
	LDA $08
	ADC #$0030
	STA $08
	MOVE_INT $06, $1C
	LDA #.LOWORD(GAME_STATE)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	TDC
	CLC
	ADC #$0018
	TAX
	STX $1A
	LDA #$007E
	STA a:.LOWORD(RAM),X
	MOVE_INT $1C, $06
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(game_state)
	JSL MEMCPY24
	LDA #.SIZEOF(game_state)
	MOVE_INTX $1C, $06
	CLC
	ADC $06
	STA $06
	STA $1C
	LDA $08
	STA $1E
	LDA #.LOWORD(CHAR_STRUCT)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	LDA #$007E
	LDX $1A
	STA a:.LOWORD(RAM),X
	MOVE_INT $1C, $06
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(char_struct) * 6
	JSL MEMCPY24
	LDA #.SIZEOF(char_struct) * 6
	MOVE_INTX $1C, $06
	CLC
	ADC $06
	STA $06
	STA $1C
	LDA $08
	STA $1E
	LDA #.LOWORD(UNKNOWN_7E9C08)
	STA $06
	PHB
	SEP #PROC_FLAGS::ACCUM8
	PLA
	STA $08
	STZ $09
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT $06, $16
	LDA #$007E
	LDX $1A
	STA a:.LOWORD(RAM),X
	MOVE_INT $1C, $06
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #$0080
	JSL MEMCPY24
	MOVE_INT $0A, $06
	CLC
	LDA $06
	ADC #$601C
	STA $06
	LDA $08
	ADC #$0030
	STA $08
	LDY $20
	TYA
	JSR a:.LOWORD(CALC_SAVE_BLOCK_ADD_CHECKSUM)
	TAX
	STX $1A
	TXA
	STA [$06]
	LDY $20
	TYA
	JSR a:.LOWORD(CALC_SAVE_BLOCK_ADD_CHECKSUM)
	STA $02
	LDX $1A
	TXA
	CMP $02
	BEQ @UNKNOWN1
	JMP .LOWORD(@UNKNOWN0)
@UNKNOWN1:
	MOVE_INT $0A, $06
	CLC
	LDA $06
	ADC #$601E
	STA $06
	LDA $08
	ADC #$0030
	STA $08
	LDY $20
	TYA
	JSR a:.LOWORD(CALC_SAVE_BLOCK_XOR_CHECKSUM)
	TAX
	STX $1A
	TXA
	STA [$06]
	LDY $20
	TYA
	JSR a:.LOWORD(CALC_SAVE_BLOCK_XOR_CHECKSUM)
	STA $02
	LDX $1A
	TXA
	CMP $02
	BEQ @UNKNOWN2
	JMP .LOWORD(@UNKNOWN0)
@UNKNOWN2:
	PLD
	RTS
