
CC_18_07: ;$C1528D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 20
	STX $12
	LDA .LOWORD(CC_ARGUMENT_GATHERING_LOOP_COUNTER)
	CMP #$0004
	BCS @UNKNOWN0
	TXA
	SEP #PROC_FLAGS::ACCUM8
	LDX .LOWORD(CC_ARGUMENT_GATHERING_LOOP_COUNTER)
	STA .LOWORD(CC_ARGUMENT_STORAGE),X
	REP #PROC_FLAGS::ACCUM8
	INC .LOWORD(CC_ARGUMENT_GATHERING_LOOP_COUNTER)
	LDA #.LOWORD(CC_18_07)
	JMP @UNKNOWN10
@UNKNOWN0:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0008
	SEP #PROC_FLAGS::INDEX8
	TAY
	MOVE_INT832 .LOWORD(CC_ARGUMENT_STORAGE)+1, $06
	REP #PROC_FLAGS::ACCUM8
	JSL ASL32_ENTRY2
	SEP #PROC_FLAGS::ACCUM8
	MOVE_INT832 .LOWORD(CC_ARGUMENT_STORAGE), $0A
	REP #PROC_FLAGS::ACCUM8
	OR_INT_ASSIGN $0A, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0010
	TAY
	MOVE_INT832 .LOWORD(CC_ARGUMENT_STORAGE)+2, $06
	REP #PROC_FLAGS::ACCUM8
	JSL ASL32_ENTRY2
	OR_INT_ASSIGN $0A, $06
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0018
	TAY
	MOVE_INT832 .LOWORD(CC_ARGUMENT_STORAGE)+3, $06
	REP #PROC_FLAGS::ACCUM8
	JSL ASL32_ENTRY2
	OR_INT_ASSIGN $0A, $06
	REP #PROC_FLAGS::INDEX8
	LDX $12
	BNE @UNKNOWN1
	JSR a:.LOWORD(GET_WORKING_MEMORY)
	BRA @UNKNOWN3
@UNKNOWN1:
	CPX #$0001
	BNE @UNKNOWN2
	JSR a:.LOWORD(GET_ARGUMENT_MEMORY)
	BRA @UNKNOWN3
@UNKNOWN2:
	JSR a:.LOWORD(GET_SECONDARY_MEMORY)
	STA $06
	STZ $08
@UNKNOWN3:
	LDA $06
	CMP $0A
	LDA $08
	SBC $0C
	BCS @UNKNOWN4
	LDA #$0000
	BRA @UNKNOWN8
@UNKNOWN4:
	CMP32 $0A, $06
	BNE @UNKNOWN6
	LDX #$0001
	BRA @UNKNOWN7
@UNKNOWN6:
	LDX #$0002
@UNKNOWN7:
	TXA
@UNKNOWN8:
	STA $06
	STZ $08
	BPL @UNKNOWN9
	DEC $08
@UNKNOWN9:
	MOVE_INT $06, $0E
	JSR a:.LOWORD(SET_WORKING_MEMORY)
	LDA #NULL
@UNKNOWN10:
	PLD
	RTS
