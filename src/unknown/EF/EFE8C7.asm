
LOAD_REPLAY_SAVE_SLOT: ;$EFE8C7
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 26
	JSL TEST_SRAM_SIZE
	CMP #$0000
	BEQL @INSUFFICIENT_SRAM
	LOADPTR UNKNOWN_316000, $06
	MOVE_INT $06, $16
	LOADPTR UNKNOWN_7E0000, $0A
	LDA #.LOWORD(GAME_STATE)
	STORE_INT1632 $06
	CLC
	ADD_INT_ASSIGN $06, $0A
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(game_state)
	JSL MEMCPY24
	LOADPTR UNKNOWN_3161D9, $06
	MOVE_INT $06, $16
	LDA #.LOWORD(CHAR_STRUCT)
	STORE_INT1632 $06
	CLC
	ADD_INT_ASSIGN $06, $0A
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(char_struct)*6
	JSL MEMCPY24
	LOADPTR UNKNOWN_316413, $06
	MOVE_INT $06, $16
	LDA #.LOWORD(EVENT_FLAG)
	STORE_INT1632 $06
	CLC
	ADD_INT_ASSIGN $06, $0A
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #$0080
	JSL MEMCPY24
	LOADPTR UNKNOWN_316493, $06
	MOVE_INT $06, $16
	LDA #$00A7
	STORE_INT1632 $06
	CLC
	ADD_INT_ASSIGN $06, $0A
	MOVE_INT $06, $0E
	MOVE_INT $16, $06
	MOVE_INT $06, $12
	LDA #$0004
	JSL MEMCPY24
	SEP #PROC_FLAGS::ACCUM8
	LDA UNKNOWN_7EB571
	STA UNKNOWN_7E0002
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT UNKNOWN_7EB56D, RAND_A
	JSL UNKNOWN_C083B8
	LOADPTR UNKNOWN_326000, $0E
	JSL UNKNOWN_C083E3
@INSUFFICIENT_SRAM:
	PLD
	RTL
